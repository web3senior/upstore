{
	"id": "e162ef6f4b173ba979ddfa8f3b2c790e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"DirectDonation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {ILSP7DigitalAsset as ILSP7} from \"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {Base64} from \"@openzeppelin/contracts/utils/Base64.sol\";\nimport \"./_event.sol\";\nimport \"./_error.sol\";\nimport \"./_pausable.sol\";\nimport \"./_ownable.sol\";\n\n/// @title DirectDonation\n/// @author Aratta Labs\n/// @notice Direct donation mechanism\n/// @dev You will find the deployed contract addresses in the repo\n/// @custom:emoji ðŸ’¸\n/// @custom:security-contact atenyun@gmail.com\ncontract DirectDonation is Ownable(msg.sender), Pausable {\n    using Counters for Counters.Counter;\n    Counters.Counter public _donateCounter;\n    Counters.Counter public _tokenCounter;\n    uint8 fee = 2;\n\n    struct DonationStruct {\n        address donator;\n        bytes32 tokenId;\n        bytes32 appId;\n        uint256 amount;\n        address to;\n        uint256 dt;\n    }\n\n    struct TokenStruct {\n        address addr;\n        bool pause;\n        uint256 dt;\n    }\n\n    struct TokenExportStruct {\n        bytes32 id;\n        address addr;\n        bool pause;\n        uint256 dt;\n    }\n\n    mapping(bytes32 => DonationStruct) public donation;\n    mapping(bytes32 => TokenStruct) public token;\n\n    constructor() {\n        _tokenCounter.increment();\n        token[bytes32(_tokenCounter.current())] = TokenStruct(address(0), false, block.timestamp);\n    }\n\n    ///@notice Get token list\n    function getTokenList() public view returns (TokenExportStruct[] memory list) {\n        TokenExportStruct[] memory result = new TokenExportStruct[](_tokenCounter.current());\n        for (uint256 i = 0; i < _tokenCounter.current(); i++) result[i] = TokenExportStruct(bytes32(i + 1), token[bytes32(i + 1)].addr, token[bytes32(i + 1)].pause, token[bytes32(i + 1)].dt);\n        return result;\n    }\n\n    ///@notice Get token\n    function getToken(address _addr) public view returns (TokenStruct[] memory list) {\n        TokenStruct[] memory result = new TokenStruct[](_tokenCounter.current());\n\n        uint256 counter = 0;\n        for (uint256 i = 0; i < _tokenCounter.current(); i++) {\n            if (token[bytes32(i + 1)].addr == _addr) {\n                result[counter] = token[bytes32(i + 1)];\n                counter++;\n            }\n        }\n\n        return result;\n    }\n\n    ///@notice Get token list\n    function getDonationList() public view returns (DonationStruct[] memory list) {\n        DonationStruct[] memory result = new DonationStruct[](_donateCounter.current());\n        for (uint256 i = 0; i < _donateCounter.current(); i++) result[i] = donation[bytes32(i + 1)];\n        return result;\n    }\n\n    ///@notice Get donation list, filter by donator\n    function getDonation(address _donator) public view returns (DonationStruct[] memory list) {\n        DonationStruct[] memory result = new DonationStruct[](_donateCounter.current());\n\n        uint256 counter = 0;\n        for (uint256 i = 0; i < _donateCounter.current(); i++) {\n            if (donation[bytes32(i + 1)].donator == address(_donator)) {\n                result[counter] = donation[bytes32(i + 1)];\n                counter++;\n            }\n        }\n\n        return result;\n    }\n\n    ///@notice Get donation list, filter by tokenId\n    function getDonationByToekn(bytes32 _tokenId) public view returns (DonationStruct[] memory list) {\n        DonationStruct[] memory result = new DonationStruct[](_donateCounter.current());\n\n        uint256 counter = 0;\n        for (uint256 i = 0; i < _donateCounter.current(); i++) {\n            if (donation[bytes32(i + 1)].tokenId == _tokenId) {\n                result[counter] = donation[bytes32(i + 1)];\n                counter++;\n            }\n        }\n\n       return result;\n    }\n\n    ///@notice Get donation list, filter by tokenId\n    function getDonationByAppId(bytes32 _appId) public view returns (DonationStruct[] memory list) {\n        DonationStruct[] memory result = new DonationStruct[](_donateCounter.current());\n\n        uint256 counter = 0;\n        for (uint256 i = 0; i < _donateCounter.current(); i++) {\n            if (donation[bytes32(i + 1)].appId == _appId) {\n                result[counter] = donation[bytes32(i + 1)];\n                counter++;\n            }\n        }\n\n        return result;\n    }\n\n    ///@notice Donate\n    function donate(\n        bytes32 _appId,\n        address _to,\n        uint256 _amount,\n        bool _force,\n        bytes memory _data,\n        bytes32 _tokenId\n    ) public payable whenNotPaused returns (bool) {\n        if (_tokenId == bytes32(uint256(1))) {\n            if (msg.value == 0) revert InsufficientBalance(msg.value);\n            (bool success, ) = _to.call{value: calcPercentage(_amount, 100 - fee)}(\"\");\n            require(success, \"Failed to send Ether to the manager\");\n        } else {\n            uint256 authorizedAmount = ILSP7(token[_tokenId].addr).authorizedAmountFor(address(this), _msgSender());\n            if (authorizedAmount != _amount) revert NotAuthorizedAmount(_amount, authorizedAmount);\n\n            ILSP7(token[_tokenId].addr).transfer(_msgSender(), address(_to), calcPercentage(_amount, 100 - fee), _force, _data);\n            ILSP7(token[_tokenId].addr).transfer(_msgSender(), owner(), calcPercentage(_amount, fee), _force, _data);\n        }\n\n        _donateCounter.increment();\n        donation[bytes32(_donateCounter.current())] = DonationStruct(_msgSender(), _tokenId, _appId, _amount, _to, block.timestamp);\n\n        // Log donated\n        emit Donated(_msgSender(), _to, _amount, _tokenId, _appId);\n\n        return true;\n    }\n\n    ///@notice calcPercentage percentage\n    ///@param amount The total amount\n    ///@param bps The precentage\n    ///@return percentage\n    function calcPercentage(uint256 amount, uint256 bps) public pure returns (uint256) {\n        require((amount * bps) >= 100);\n        return (amount * bps) / 100;\n    }\n\n    /// @notice Add a token\n    function addToken(address _addr) public onlyOwner returns (bytes32) {\n        _tokenCounter.increment();\n        token[bytes32(_tokenCounter.current())] = TokenStruct(address(_addr), false, block.timestamp);\n\n        // Log token added\n        emit TokenAdded(bytes32(_tokenCounter.current()), address(_addr), _msgSender());\n        return bytes32(_tokenCounter.current());\n    }\n\n    /// @notice Delete a token\n    function deleteToken(bytes32 _tokenId) public onlyOwner returns (uint256) {\n        delete token[_tokenId];\n        _tokenCounter.decrement();\n        \n        // Log token removed\n        emit TokenRemoved(bytes32(_tokenCounter.current()), _msgSender());\n        return _tokenCounter.current();\n    }\n\n    /// @notice Update token\n    function updateToken(\n        bytes32 _tokenId,\n        address _addr,\n        bool _pause\n    ) public onlyOwner returns (bool) {\n        token[_tokenId].addr = _addr;\n        token[_tokenId].pause = _pause;\n        \n        // Log token updated\n        emit TokenUpdated(_tokenId, _addr, _msgSender());\n        return true;\n    }\n\n    /// @notice Update fee\n    function updateToken(uint8 _fee) public onlyOwner returns (bool) {\n        fee = _fee;\n        emit feeUpdated(_fee);\n        return true;\n    }\n\n    ///@notice Withdraw the balance from this contract and transfer it to the owner's address\n    function withdraw() public onlyOwner {\n        uint256 amount = address(this).balance;\n        (bool success, ) = owner().call{value: amount}(\"\");\n        require(success, \"Failed\");\n    }\n\n    ///@notice Transfer balance from this contract to input address\n    function transferBalance(address payable _to, uint256 _amount) public onlyOwner {\n        // Note that \"to\" is declared as payable\n        (bool success, ) = _to.call{value: _amount}(\"\");\n        require(success, \"Failed\");\n    }\n\n    /// @notice Return the balance of this contract\n    function getBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    /// @notice Pause\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    /// @notice Unpause\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n}\n"
			},
			"_ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.24;\n\nimport {Context} from \"@openzeppelin/contracts/utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}"
			},
			"_pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"@openzeppelin/contracts/utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}"
			},
			"_error.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nerror Unauthorized();\r\nerror InsufficientBalance(uint256 msgValue);\r\nerror NotAuthorizedAmount(uint256 totalAmount, uint256 authorizedAmount);"
			},
			"_event.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nevent Log(string func, uint256 gas);\r\nevent feeUpdated(uint8 fee);\r\nevent TokenAdded(bytes32 indexed id, address  addr, address sender);\r\nevent TokenUpdated(bytes32 indexed id, address addr, address sender);\r\nevent TokenRemoved(bytes32 indexed _tokenId, address sender);\r\nevent Donated(address _from, address _to, uint256 _amount, bytes32 indexed _tokenId, bytes32 indexed _appId);"
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.2) (utils/Base64.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // Loads the table into memory\n        string memory table = _TABLE;\n\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\n        // and split into 4 numbers of 6 bits.\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\n        // - `data.length + 2`  -> Round up\n        // - `/ 3`              -> Number of 3-bytes chunks\n        // - `4 *`              -> 4 characters for each chunk\n        string memory result = new string(4 * ((data.length + 2) / 3));\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 0x20)\n            let dataPtr := data\n            let endPtr := add(data, mload(data))\n\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\n            // set it to zero to make sure no dirty bytes are read in that section.\n            let afterPtr := add(endPtr, 0x20)\n            let afterCache := mload(afterPtr)\n            mstore(afterPtr, 0x00)\n\n            // Run over the input, 3 bytes at a time\n            for {\n\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 byte (24 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\n                // Use this as an index into the lookup table, mload an entire word\n                // so the desired character is in the least significant byte, and\n                // mstore8 this least significant byte into the result and continue.\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // Reset the value that was cached\n            mstore(afterPtr, afterCache)\n\n            // When data `bytes` is not exactly 3 bytes long\n            // it is padded with `=` characters at the end\n            switch mod(mload(data), 3)\n            case 1 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n                mstore8(sub(resultPtr, 2), 0x3d)\n            }\n            case 2 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n            }\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\nimport \"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\";\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // â†’ `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // â†’ `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\n\npragma solidity ^0.8.4;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {\n    IERC725Y\n} from \"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\";\n\n/**\n * @title Interface of the LSP7 - Digital Asset standard, a fungible digital asset.\n */\ninterface ILSP7DigitalAsset is IERC165, IERC725Y {\n    // --- Events\n\n    /**\n     * @dev Emitted when the `from` transferred successfully `amount` of tokens to `to`.\n     * @param operator The address of the operator that executed the transfer.\n     * @param from The address which tokens were sent from (balance decreased by `-amount`).\n     * @param to The address that received the tokens (balance increased by `+amount`).\n     * @param amount The amount of tokens transferred.\n     * @param force if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.\n     * @param data Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses.\n     */\n    event Transfer(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bool force,\n        bytes data\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` enables `operator` for `amount` tokens.\n     * @param operator The address authorized as an operator\n     * @param tokenOwner The token owner\n     * @param amount The amount of tokens `operator` address has access to from `tokenOwner`\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorAuthorizationChanged(\n        address indexed operator,\n        address indexed tokenOwner,\n        uint256 indexed amount,\n        bytes operatorNotificationData\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.\n     * @param operator The address revoked from operating\n     * @param tokenOwner The token owner\n     * @param notified Bool indicating whether the operator has been notified or not\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorRevoked(\n        address indexed operator,\n        address indexed tokenOwner,\n        bool indexed notified,\n        bytes operatorNotificationData\n    );\n\n    // --- Token queries\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in\n     * the `constructor`, the decimals returned wiil be `0`. Otherwise `18` is the common value.\n     *\n     * @custom:notice This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {balanceOf} and {transfer}.\n     *\n     * @return the number of decimals. If `0` is returned, the asset is non-divisible.\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev Returns the number of existing tokens that have been minted in this contract.\n     * @return The number of existing tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // --- Token owner queries\n\n    /**\n     * @dev Get the number of tokens owned by `tokenOwner`.\n     * If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided\n     * by 1e18 to get a better picture of the actual balance of the `tokenOwner`.\n     *\n     * _Example:_\n     *\n     * ```\n     * balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens\n     * ```\n     *\n     * @param tokenOwner The address of the token holder to query the balance for.\n     * @return The amount of tokens owned by `tokenOwner`.\n     */\n    function balanceOf(address tokenOwner) external view returns (uint256);\n\n    // --- Operator functionality\n\n    /**\n     * @dev Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @param operator The address to authorize as an operator.\n     * @param amount The allowance amount of tokens operator has access to.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorAuthorizationChanged} when allowance is given to a new operator or\n     * an existing operator's allowance is updated.\n     */\n    function authorizeOperator(\n        address operator,\n        uint256 amount,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf.\n     * This function also allows the `operator` to remove itself if it is the caller of this function\n     *\n     * @param operator The address to revoke as an operator.\n     * @param tokenOwner The address of the token owner.\n     * @param notify Boolean indicating whether to notify the operator or not.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - caller MUST be `operator` or `tokenOwner`\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token holder).\n     */\n    function revokeOperator(\n        address operator,\n        address tokenOwner,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n     * against double spending allowance vulnerability.\n     *\n     * @notice Increase the allowance of `operator` by +`addedAmount`\n     *\n     * @dev Atomically increases the allowance granted to `operator` by the caller.\n     * This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n     * for the double spending allowance problem.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @param operator The operator to increase the allowance for `msg.sender`\n     * @param addedAmount The additional amount to add on top of the current operator's allowance\n     *\n     * @custom:requirements\n     *  - `operator` cannot be the same address as `msg.sender`\n     *  - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorAuthorizationChanged} indicating the updated allowance\n     */\n    function increaseAllowance(\n        address operator,\n        uint256 addedAmount,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n     * against the double spending allowance vulnerability.\n     *\n     * @notice Decrease the allowance of `operator` by -`subtractedAmount`\n     *\n     * @dev Atomically decreases the allowance granted to `operator` by the caller.\n     * This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n     * for the double spending allowance problem.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @custom:events\n     *  - {OperatorAuthorizationChanged} event indicating the updated allowance after decreasing it.\n     *  - {OperatorRevoked} event if `subtractedAmount` is the full allowance,\n     *    indicating `operator` does not have any alauthorizedAmountForlowance left for `msg.sender`.\n     *\n     * @param operator The operator to decrease allowance for `msg.sender`\n     * @param tokenOwner The address of the token owner.\n     * @param subtractedAmount The amount to decrease by in the operator's allowance.\n     *\n     * @custom:requirements\n     *  - `operator` cannot be the zero address.\n     *  - `operator` must have allowance for the caller of at least `subtractedAmount`.\n     */\n    function decreaseAllowance(\n        address operator,\n        address tokenOwner,\n        uint256 subtractedAmount,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Get the amount of tokens `operator` address has access to from `tokenOwner`.\n     * Operators can send and burn tokens on behalf of their owners.\n     *\n     * @param operator The operator's address to query the authorized amount for.\n     * @param tokenOwner The token owner that `operator` has allowance on.\n     *\n     * @return The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance.\n     *\n     * @custom:info If this function is called with the same address for `operator` and `tokenOwner`, it will simply read the `tokenOwner`'s balance\n     * (since a tokenOwner is its own operator).\n     */\n    function authorizedAmountFor(\n        address operator,\n        address tokenOwner\n    ) external view returns (uint256);\n\n    /**\n     * @dev Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.\n     *\n     * @param tokenOwner The token owner to get the operators for.\n     * @return An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`.\n     */\n    function getOperatorsOf(\n        address tokenOwner\n    ) external view returns (address[] memory);\n\n    // --- Transfer functionality\n\n    /**\n     * @dev Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function.\n     * If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer\n     * has been completed (See {authorizedAmountFor}).\n     *\n     * @param from The sender address.\n     * @param to The recipient address.\n     * @param amount The amount of tokens to transfer.\n     * @param force When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` and `to` cannot be the same address (`from` cannot send tokens to itself).\n     * - `from` MUST have a balance of at least `amount` tokens.\n     * - If the caller is not `from`, it must be an operator for `from` with an allowance of at least `amount` of tokens.\n     *\n     * @custom:events\n     * - {Transfer} event when tokens get successfully transferred.\n     * - if the transfer is triggered by an operator, either the {OperatorAuthorizationChanged} event will be emitted with the updated allowance or the {OperatorRevoked}\n     * event will be emitted if the operator has no more allowance left.\n     *\n     * @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n     * or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n     *\n     * @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n     *\n     * @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n     * This even if the `force` was set to `true`.\n     */\n    function transfer(\n        address from,\n        address to,\n        uint256 amount,\n        bool force,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.\n     *\n     * @custom:info If any transfer in the batch fail or revert, the whole call will revert.\n     *\n     * @param from An array of sending addresses.\n     * @param to An array of receiving addresses.\n     * @param amount An array of amount of tokens to transfer for each `from -> to` transfer.\n     * @param force For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n     * @param data An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `from`, `to`, `amount` lists MUST be of the same length.\n     * - no values in `from` can be the zero address.\n     * - no values in `to` can be the zero address.\n     * - each `amount` tokens MUST be owned by `from`.\n     * - for each transfer, if the caller is not `from`, it MUST be an operator for `from` with access to at least `amount` tokens.\n     *\n     * @custom:events {Transfer} event **for each token transfer**.\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        uint256[] memory amount,\n        bool[] memory force,\n        bytes[] memory data\n    ) external;\n\n    /**\n     * @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n     *\n     * @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n     * @param data An array of ABI encoded function calls to be called on the contract.\n     * @return results An array of abi-encoded data returned by the functions executed.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n}\n"
			},
			"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
				"content": "// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title The interface for ERC725Y sub-standard, a generic data key/value store.\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ninterface IERC725Y is IERC165 {\n    /**\n     * @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n     * @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event DataChanged(bytes32 indexed dataKey, bytes dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n     * @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n     * @param dataKey The data key for which to retrieve the value.\n     * @return dataValue The bytes value stored under the specified data key.\n     */\n    function getData(\n        bytes32 dataKey\n    ) external view returns (bytes memory dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n     * @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n     * @param dataKeys The array of keys which values to retrieve\n     * @return dataValues The array of data stored at multiple keys\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) external view returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n     *\n     * @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n     * The function is marked as payable to enable flexibility on child contracts. For instance to implement\n     * a fee mechanism for setting specific data.\n     *\n     * @param dataKey The data key for which to set a new value.\n     * @param dataValue The new bytes value to set.\n     */\n    function setData(bytes32 dataKey, bytes memory dataValue) external payable;\n\n    /**\n     * @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n     *\n     * @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n     *\n     * @param dataKeys An array of data keys to set bytes values for.\n     * @param dataValues An array of bytes values to set for each `dataKeys`.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external payable;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
				"IERC725Y": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"name": "DataChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								}
							],
							"name": "getData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "dataKeys",
									"type": "bytes32[]"
								}
							],
							"name": "getDataBatch",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "dataValues",
									"type": "bytes[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"name": "setData",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "dataKeys",
									"type": "bytes32[]"
								},
								{
									"internalType": "bytes[]",
									"name": "dataValues",
									"type": "bytes[]"
								}
							],
							"name": "setDataBatch",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.",
						"events": {
							"DataChanged(bytes32,bytes)": {
								"details": "Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.",
								"params": {
									"dataKey": "The data key for which a bytes value is set.",
									"dataValue": "The value to set for the given data key."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"getData(bytes32)": {
								"details": "Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.",
								"params": {
									"dataKey": "The data key for which to retrieve the value."
								},
								"returns": {
									"dataValue": "The bytes value stored under the specified data key."
								}
							},
							"getDataBatch(bytes32[])": {
								"details": "Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.",
								"params": {
									"dataKeys": "The array of keys which values to retrieve"
								},
								"returns": {
									"dataValues": "The array of data stored at multiple keys"
								}
							},
							"setData(bytes32,bytes)": {
								"details": "Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.",
								"params": {
									"dataKey": "The data key for which to set a new value.",
									"dataValue": "The new bytes value to set."
								}
							},
							"setDataBatch(bytes32[],bytes[])": {
								"details": "Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.",
								"params": {
									"dataKeys": "An array of data keys to set bytes values for.",
									"dataValues": "An array of bytes values to set for each `dataKeys`."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "The interface for ERC725Y sub-standard, a generic data key/value store.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getData(bytes32)": "54f6127f",
							"getDataBatch(bytes32[])": "dedff9c6",
							"setData(bytes32,bytes)": "7f23690c",
							"setDataBatch(bytes32[],bytes[])": "97902421",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The interface for ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":\"IERC725Y\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"DataChanged(bytes32,bytes)": {
								"notice": "The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`."
							}
						},
						"kind": "user",
						"methods": {
							"getData(bytes32)": {
								"notice": "Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`."
							},
							"getDataBatch(bytes32[])": {
								"notice": "Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`."
							},
							"setData(bytes32,bytes)": {
								"notice": "Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`."
							},
							"setDataBatch(bytes32[],bytes[])": {
								"notice": "Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`."
							}
						},
						"version": 1
					}
				}
			},
			"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol": {
				"ILSP7DigitalAsset": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"name": "DataChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "OperatorAuthorizationChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "notified",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "OperatorRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "force",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "authorizedAmountFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "batchCalls",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedAmount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								}
							],
							"name": "getData",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "dataKeys",
									"type": "bytes32[]"
								}
							],
							"name": "getDataBatch",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "dataValues",
									"type": "bytes[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "getOperatorsOf",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedAmount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "increaseAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "notify",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "operatorNotificationData",
									"type": "bytes"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "dataKey",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "dataValue",
									"type": "bytes"
								}
							],
							"name": "setData",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "dataKeys",
									"type": "bytes32[]"
								},
								{
									"internalType": "bytes[]",
									"name": "dataValues",
									"type": "bytes[]"
								}
							],
							"name": "setDataBatch",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "force",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "from",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "to",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amount",
									"type": "uint256[]"
								},
								{
									"internalType": "bool[]",
									"name": "force",
									"type": "bool[]"
								},
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "transferBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"DataChanged(bytes32,bytes)": {
								"details": "Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.",
								"params": {
									"dataKey": "The data key for which a bytes value is set.",
									"dataValue": "The value to set for the given data key."
								}
							},
							"OperatorAuthorizationChanged(address,address,uint256,bytes)": {
								"details": "Emitted when `tokenOwner` enables `operator` for `amount` tokens.",
								"params": {
									"amount": "The amount of tokens `operator` address has access to from `tokenOwner`",
									"operator": "The address authorized as an operator",
									"operatorNotificationData": "The data to notify the operator about via LSP1.",
									"tokenOwner": "The token owner"
								}
							},
							"OperatorRevoked(address,address,bool,bytes)": {
								"details": "Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.",
								"params": {
									"notified": "Bool indicating whether the operator has been notified or not",
									"operator": "The address revoked from operating",
									"operatorNotificationData": "The data to notify the operator about via LSP1.",
									"tokenOwner": "The token owner"
								}
							},
							"Transfer(address,address,address,uint256,bool,bytes)": {
								"details": "Emitted when the `from` transferred successfully `amount` of tokens to `to`.",
								"params": {
									"amount": "The amount of tokens transferred.",
									"data": "Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses.",
									"force": "if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.",
									"from": "The address which tokens were sent from (balance decreased by `-amount`).",
									"operator": "The address of the operator that executed the transfer.",
									"to": "The address that received the tokens (balance increased by `+amount`)."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"authorizeOperator(address,uint256,bytes)": {
								"custom:events": "{OperatorAuthorizationChanged} when allowance is given to a new operator or an existing operator's allowance is updated.",
								"custom:requirements": "- `operator` cannot be the zero address.",
								"details": "Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}. Notify the operator based on the LSP1-UniversalReceiver standard",
								"params": {
									"amount": "The allowance amount of tokens operator has access to.",
									"operator": "The address to authorize as an operator.",
									"operatorNotificationData": "The data to notify the operator about via LSP1."
								}
							},
							"authorizedAmountFor(address,address)": {
								"custom:info": "If this function is called with the same address for `operator` and `tokenOwner`, it will simply read the `tokenOwner`'s balance (since a tokenOwner is its own operator).",
								"details": "Get the amount of tokens `operator` address has access to from `tokenOwner`. Operators can send and burn tokens on behalf of their owners.",
								"params": {
									"operator": "The operator's address to query the authorized amount for.",
									"tokenOwner": "The token owner that `operator` has allowance on."
								},
								"returns": {
									"_0": "The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance."
								}
							},
							"balanceOf(address)": {
								"details": "Get the number of tokens owned by `tokenOwner`. If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided by 1e18 to get a better picture of the actual balance of the `tokenOwner`. _Example:_ ``` balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens ```",
								"params": {
									"tokenOwner": "The address of the token holder to query the balance for."
								},
								"returns": {
									"_0": "The amount of tokens owned by `tokenOwner`."
								}
							},
							"batchCalls(bytes[])": {
								"details": "Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.",
								"params": {
									"data": "An array of ABI encoded function calls to be called on the contract."
								},
								"returns": {
									"results": "An array of abi-encoded data returned by the functions executed."
								}
							},
							"decimals()": {
								"custom:notice": "This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {balanceOf} and {transfer}.",
								"details": "Returns the number of decimals used to get its user representation. If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in the `constructor`, the decimals returned wiil be `0`. Otherwise `18` is the common value.",
								"returns": {
									"_0": "the number of decimals. If `0` is returned, the asset is non-divisible."
								}
							},
							"decreaseAllowance(address,address,uint256,bytes)": {
								"custom:events": "- {OperatorAuthorizationChanged} event indicating the updated allowance after decreasing it.  - {OperatorRevoked} event if `subtractedAmount` is the full allowance,    indicating `operator` does not have any alauthorizedAmountForlowance left for `msg.sender`.",
								"custom:info": "This function in the LSP7 contract can be used as a prevention mechanism against the double spending allowance vulnerability.",
								"custom:requirements": "- `operator` cannot be the zero address.  - `operator` must have allowance for the caller of at least `subtractedAmount`.",
								"details": "Atomically decreases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard",
								"params": {
									"operator": "The operator to decrease allowance for `msg.sender`",
									"subtractedAmount": "The amount to decrease by in the operator's allowance.",
									"tokenOwner": "The address of the token owner."
								}
							},
							"getData(bytes32)": {
								"details": "Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.",
								"params": {
									"dataKey": "The data key for which to retrieve the value."
								},
								"returns": {
									"dataValue": "The bytes value stored under the specified data key."
								}
							},
							"getDataBatch(bytes32[])": {
								"details": "Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.",
								"params": {
									"dataKeys": "The array of keys which values to retrieve"
								},
								"returns": {
									"dataValues": "The array of data stored at multiple keys"
								}
							},
							"getOperatorsOf(address)": {
								"details": "Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.",
								"params": {
									"tokenOwner": "The token owner to get the operators for."
								},
								"returns": {
									"_0": "An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`."
								}
							},
							"increaseAllowance(address,uint256,bytes)": {
								"custom:events": "{OperatorAuthorizationChanged} indicating the updated allowance",
								"custom:info": "This function in the LSP7 contract can be used as a prevention mechanism against double spending allowance vulnerability.",
								"custom:requirements": "- `operator` cannot be the same address as `msg.sender`  - `operator` cannot be the zero address.",
								"details": "Atomically increases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard",
								"params": {
									"addedAmount": "The additional amount to add on top of the current operator's allowance",
									"operator": "The operator to increase the allowance for `msg.sender`"
								}
							},
							"revokeOperator(address,address,bool,bytes)": {
								"custom:events": "{OperatorRevoked} event with address of the operator being revoked for the caller (token holder).",
								"custom:requirements": "- caller MUST be `operator` or `tokenOwner` - `operator` cannot be the zero address.",
								"details": "Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf. This function also allows the `operator` to remove itself if it is the caller of this function",
								"params": {
									"notify": "Boolean indicating whether to notify the operator or not.",
									"operator": "The address to revoke as an operator.",
									"operatorNotificationData": "The data to notify the operator about via LSP1.",
									"tokenOwner": "The address of the token owner."
								}
							},
							"setData(bytes32,bytes)": {
								"details": "Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.",
								"params": {
									"dataKey": "The data key for which to set a new value.",
									"dataValue": "The new bytes value to set."
								}
							},
							"setDataBatch(bytes32[],bytes[])": {
								"details": "Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.",
								"params": {
									"dataKeys": "An array of data keys to set bytes values for.",
									"dataValues": "An array of bytes values to set for each `dataKeys`."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the number of existing tokens that have been minted in this contract.",
								"returns": {
									"_0": "The number of existing tokens."
								}
							},
							"transfer(address,address,uint256,bool,bytes)": {
								"custom:events": "- {Transfer} event when tokens get successfully transferred. - if the transfer is triggered by an operator, either the {OperatorAuthorizationChanged} event will be emitted with the updated allowance or the {OperatorRevoked} event will be emitted if the operator has no more allowance left.",
								"custom:hint": "The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.",
								"custom:info": "if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.",
								"custom:requirements": "- `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address (`from` cannot send tokens to itself). - `from` MUST have a balance of at least `amount` tokens. - If the caller is not `from`, it must be an operator for `from` with an allowance of at least `amount` of tokens.",
								"custom:warning": "Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified. This even if the `force` was set to `true`.",
								"details": "Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function. If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer has been completed (See {authorizedAmountFor}).",
								"params": {
									"amount": "The amount of tokens to transfer.",
									"data": "Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.",
									"force": "When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.",
									"from": "The sender address.",
									"to": "The recipient address."
								}
							},
							"transferBatch(address[],address[],uint256[],bool[],bytes[])": {
								"custom:events": "{Transfer} event **for each token transfer**.",
								"custom:info": "If any transfer in the batch fail or revert, the whole call will revert.",
								"custom:requirements": "- `from`, `to`, `amount` lists MUST be of the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - each `amount` tokens MUST be owned by `from`. - for each transfer, if the caller is not `from`, it MUST be an operator for `from` with access to at least `amount` tokens.",
								"details": "Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.",
								"params": {
									"amount": "An array of amount of tokens to transfer for each `from -> to` transfer.",
									"data": "An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.",
									"force": "For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.",
									"from": "An array of sending addresses.",
									"to": "An array of receiving addresses."
								}
							}
						},
						"title": "Interface of the LSP7 - Digital Asset standard, a fungible digital asset.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authorizeOperator(address,uint256,bytes)": "b49506fd",
							"authorizedAmountFor(address,address)": "65aeaa95",
							"balanceOf(address)": "70a08231",
							"batchCalls(bytes[])": "6963d438",
							"decimals()": "313ce567",
							"decreaseAllowance(address,address,uint256,bytes)": "78381670",
							"getData(bytes32)": "54f6127f",
							"getDataBatch(bytes32[])": "dedff9c6",
							"getOperatorsOf(address)": "d72fc29a",
							"increaseAllowance(address,uint256,bytes)": "2bc1da82",
							"revokeOperator(address,address,bool,bytes)": "30d0dc37",
							"setData(bytes32,bytes)": "7f23690c",
							"setDataBatch(bytes32[],bytes[])": "97902421",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,address,uint256,bool,bytes)": "760d9bba",
							"transferBatch(address[],address[],uint256[],bool[],bytes[])": "2d7667c9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"authorizedAmountFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"decreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"increaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,uint256,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` for `amount` tokens.\",\"params\":{\"amount\":\"The amount of tokens `operator` address has access to from `tokenOwner`\",\"operator\":\"The address authorized as an operator\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The token owner\"}},\"OperatorRevoked(address,address,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from operating\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The token owner\"}},\"Transfer(address,address,address,uint256,bool,bytes)\":{\"details\":\"Emitted when the `from` transferred successfully `amount` of tokens to `to`.\",\"params\":{\"amount\":\"The amount of tokens transferred.\",\"data\":\"Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses.\",\"force\":\"if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The address which tokens were sent from (balance decreased by `-amount`).\",\"operator\":\"The address of the operator that executed the transfer.\",\"to\":\"The address that received the tokens (balance increased by `+amount`).\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,uint256,bytes)\":{\"custom:events\":\"{OperatorAuthorizationChanged} when allowance is given to a new operator or an existing operator's allowance is updated.\",\"custom:requirements\":\"- `operator` cannot be the zero address.\",\"details\":\"Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"amount\":\"The allowance amount of tokens operator has access to.\",\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\"}},\"authorizedAmountFor(address,address)\":{\"custom:info\":\"If this function is called with the same address for `operator` and `tokenOwner`, it will simply read the `tokenOwner`'s balance (since a tokenOwner is its own operator).\",\"details\":\"Get the amount of tokens `operator` address has access to from `tokenOwner`. Operators can send and burn tokens on behalf of their owners.\",\"params\":{\"operator\":\"The operator's address to query the authorized amount for.\",\"tokenOwner\":\"The token owner that `operator` has allowance on.\"},\"returns\":{\"_0\":\"The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of tokens owned by `tokenOwner`. If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided by 1e18 to get a better picture of the actual balance of the `tokenOwner`. _Example:_ ``` balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens ```\",\"params\":{\"tokenOwner\":\"The address of the token holder to query the balance for.\"},\"returns\":{\"_0\":\"The amount of tokens owned by `tokenOwner`.\"}},\"batchCalls(bytes[])\":{\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"decimals()\":{\"custom:notice\":\"This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {balanceOf} and {transfer}.\",\"details\":\"Returns the number of decimals used to get its user representation. If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in the `constructor`, the decimals returned wiil be `0`. Otherwise `18` is the common value.\",\"returns\":{\"_0\":\"the number of decimals. If `0` is returned, the asset is non-divisible.\"}},\"decreaseAllowance(address,address,uint256,bytes)\":{\"custom:events\":\"- {OperatorAuthorizationChanged} event indicating the updated allowance after decreasing it.  - {OperatorRevoked} event if `subtractedAmount` is the full allowance,    indicating `operator` does not have any alauthorizedAmountForlowance left for `msg.sender`.\",\"custom:info\":\"This function in the LSP7 contract can be used as a prevention mechanism against the double spending allowance vulnerability.\",\"custom:requirements\":\"- `operator` cannot be the zero address.  - `operator` must have allowance for the caller of at least `subtractedAmount`.\",\"details\":\"Atomically decreases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The operator to decrease allowance for `msg.sender`\",\"subtractedAmount\":\"The amount to decrease by in the operator's allowance.\",\"tokenOwner\":\"The address of the token owner.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getOperatorsOf(address)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The token owner to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`.\"}},\"increaseAllowance(address,uint256,bytes)\":{\"custom:events\":\"{OperatorAuthorizationChanged} indicating the updated allowance\",\"custom:info\":\"This function in the LSP7 contract can be used as a prevention mechanism against double spending allowance vulnerability.\",\"custom:requirements\":\"- `operator` cannot be the same address as `msg.sender`  - `operator` cannot be the zero address.\",\"details\":\"Atomically increases the allowance granted to `operator` by the caller. This is an alternative approach to {authorizeOperator} that can be used as a mitigation for the double spending allowance problem. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"addedAmount\":\"The additional amount to add on top of the current operator's allowance\",\"operator\":\"The operator to increase the allowance for `msg.sender`\"}},\"revokeOperator(address,address,bool,bytes)\":{\"custom:events\":\"{OperatorRevoked} event with address of the operator being revoked for the caller (token holder).\",\"custom:requirements\":\"- caller MUST be `operator` or `tokenOwner` - `operator` cannot be the zero address.\",\"details\":\"Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf. This function also allows the `operator` to remove itself if it is the caller of this function\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not.\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenOwner\":\"The address of the token owner.\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,uint256,bool,bytes)\":{\"custom:events\":\"- {Transfer} event when tokens get successfully transferred. - if the transfer is triggered by an operator, either the {OperatorAuthorizationChanged} event will be emitted with the updated allowance or the {OperatorRevoked} event will be emitted if the operator has no more allowance left.\",\"custom:hint\":\"The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\",\"custom:info\":\"if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\",\"custom:requirements\":\"- `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address (`from` cannot send tokens to itself). - `from` MUST have a balance of at least `amount` tokens. - If the caller is not `from`, it must be an operator for `from` with an allowance of at least `amount` of tokens.\",\"custom:warning\":\"Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified. This even if the `force` was set to `true`.\",\"details\":\"Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function. If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer has been completed (See {authorizedAmountFor}).\",\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The sender address.\",\"to\":\"The recipient address.\"}},\"transferBatch(address[],address[],uint256[],bool[],bytes[])\":{\"custom:events\":\"{Transfer} event **for each token transfer**.\",\"custom:info\":\"If any transfer in the batch fail or revert, the whole call will revert.\",\"custom:requirements\":\"- `from`, `to`, `amount` lists MUST be of the same length. - no values in `from` can be the zero address. - no values in `to` can be the zero address. - each `amount` tokens MUST be owned by `from`. - for each transfer, if the caller is not `from`, it MUST be an operator for `from` with access to at least `amount` tokens.\",\"details\":\"Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.\",\"params\":{\"amount\":\"An array of amount of tokens to transfer for each `from -> to` transfer.\",\"data\":\"An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\",\"force\":\"For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of receiving addresses.\"}}},\"title\":\"Interface of the LSP7 - Digital Asset standard, a fungible digital asset.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"decreaseAllowance(address,address,uint256,bytes)\":{\"notice\":\"Decrease the allowance of `operator` by -`subtractedAmount`\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"increaseAllowance(address,uint256,bytes)\":{\"notice\":\"Increase the allowance of `operator` by +`addedAmount`\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\":\"ILSP7DigitalAsset\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\":{\"keccak256\":\"0xe809a376f430ba79bf7554b3274617103f1d0434546b2d4fe68019e3079a53d0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f955f4d89c5a99f791af4a3fc7201ba0299627fca221d97a66a562eeb4860c04\",\"dweb:/ipfs/QmcAqBHYFwk6VXevUeSjefFag6EhndrXQP1D4tGjxtgUMT\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"DataChanged(bytes32,bytes)": {
								"notice": "The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`."
							}
						},
						"kind": "user",
						"methods": {
							"batchCalls(bytes[])": {
								"notice": "Executing the following batch of abi-encoded function calls on the contract: `data`."
							},
							"decreaseAllowance(address,address,uint256,bytes)": {
								"notice": "Decrease the allowance of `operator` by -`subtractedAmount`"
							},
							"getData(bytes32)": {
								"notice": "Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`."
							},
							"getDataBatch(bytes32[])": {
								"notice": "Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`."
							},
							"increaseAllowance(address,uint256,bytes)": {
								"notice": "Increase the allowance of `operator` by +`addedAmount`"
							},
							"setData(bytes32,bytes)": {
								"notice": "Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`."
							},
							"setDataBatch(bytes32[],bytes[])": {
								"notice": "Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"Base64": {
					"abi": [],
					"devdoc": {
						"details": "Provides a set of functions to operate with Base64 strings.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_TABLE": {
								"details": "Base64 Encoding/Decoding Table"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Base64.sol\":202:3860  library Base64 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":202:3860  library Base64 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220941e93e56a41f03202a93c74a1020c804accf233c87800e93a0d6be4686482ac64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220941e93e56a41f03202a93c74a1020c804accf233c87800e93a0d6be4686482ac64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x1E SWAP4 0xE5 PUSH11 0x41F03202A93C74A1020C80 BLOBBASEFEE 0xCC CALLCODE CALLER 0xC8 PUSH25 0xE93A0D6BE4686482AC64736F6C6343000818003300000000 ",
							"sourceMap": "202:3658:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220941e93e56a41f03202a93c74a1020c804accf233c87800e93a0d6be4686482ac64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x1E SWAP4 0xE5 PUSH11 0x41F03202A93C74A1020C80 BLOBBASEFEE 0xCC CALLCODE CALLER 0xC8 PUSH25 0xE93A0D6BE4686482AC64736F6C6343000818003300000000 ",
							"sourceMap": "202:3658:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"encode(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220941e93e56a41f03202a93c74a1020c804accf233c87800e93a0d6be4686482ac64736f6c63430008180033",
									".code": [
										{
											"begin": 202,
											"end": 3860,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"DirectDonation.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x09000342b85b1a06fa1f5b71bdeef7c449cd25799aac14fa9053d8abd18219aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cdab282a9165b685fa86da3bd331c8e319e5a5c64e16599134e738934a77d4\",\"dweb:/ipfs/QmSLcE5FmDqVQbFDB6MzUzuFi4UhJVUQ1A2rT4aJGhpERT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c838f20444a3dcb4de4ffa527a6f9d5a3cc1ee02f7faf28a70c6435e3bcac42164736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c838f20444a3dcb4de4ffa527a6f9d5a3cc1ee02f7faf28a70c6435e3bcac42164736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 CODESIZE CALLCODE DIV PREVRANDAO LOG3 0xDC 0xB4 0xDE 0x4F STATICCALL MSTORE PUSH27 0x6F9D5A3CC1EE02F7FAF28A70C6435E3BCAC42164736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "424:971:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c838f20444a3dcb4de4ffa527a6f9d5a3cc1ee02f7faf28a70c6435e3bcac42164736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 CODESIZE CALLCODE DIV PREVRANDAO LOG3 0xDC 0xB4 0xDE 0x4F STATICCALL MSTORE PUSH27 0x6F9D5A3CC1EE02F7FAF28A70C6435E3BCAC42164736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "424:971:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c838f20444a3dcb4de4ffa527a6f9d5a3cc1ee02f7faf28a70c6435e3bcac42164736f6c63430008180033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"DirectDonation.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"DirectDonation.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"DirectDonation.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"DirectDonation.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DirectDonation.sol": {
				"DirectDonation": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "msgValue",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "authorizedAmount",
									"type": "uint256"
								}
							],
							"name": "NotAuthorizedAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tokenId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_appId",
									"type": "bytes32"
								}
							],
							"name": "Donated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "TokenAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tokenId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "TokenRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "TokenUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "fee",
									"type": "uint8"
								}
							],
							"name": "feeUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_donateCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_tokenCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "addToken",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bps",
									"type": "uint256"
								}
							],
							"name": "calcPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_tokenId",
									"type": "bytes32"
								}
							],
							"name": "deleteToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_appId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_force",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_tokenId",
									"type": "bytes32"
								}
							],
							"name": "donate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "donation",
							"outputs": [
								{
									"internalType": "address",
									"name": "donator",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "tokenId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "appId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "dt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_donator",
									"type": "address"
								}
							],
							"name": "getDonation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "donator",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "tokenId",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "appId",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "dt",
											"type": "uint256"
										}
									],
									"internalType": "struct DirectDonation.DonationStruct[]",
									"name": "list",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_appId",
									"type": "bytes32"
								}
							],
							"name": "getDonationByAppId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "donator",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "tokenId",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "appId",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "dt",
											"type": "uint256"
										}
									],
									"internalType": "struct DirectDonation.DonationStruct[]",
									"name": "list",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_tokenId",
									"type": "bytes32"
								}
							],
							"name": "getDonationByToekn",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "donator",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "tokenId",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "appId",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "dt",
											"type": "uint256"
										}
									],
									"internalType": "struct DirectDonation.DonationStruct[]",
									"name": "list",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDonationList",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "donator",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "tokenId",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "appId",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "dt",
											"type": "uint256"
										}
									],
									"internalType": "struct DirectDonation.DonationStruct[]",
									"name": "list",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "getToken",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "pause",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "dt",
											"type": "uint256"
										}
									],
									"internalType": "struct DirectDonation.TokenStruct[]",
									"name": "list",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenList",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "id",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "pause",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "dt",
											"type": "uint256"
										}
									],
									"internalType": "struct DirectDonation.TokenExportStruct[]",
									"name": "list",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "pause",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "dt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_fee",
									"type": "uint8"
								}
							],
							"name": "updateToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_tokenId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_pause",
									"type": "bool"
								}
							],
							"name": "updateToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aratta Labs",
						"custom:emoji": "ðŸ’¸",
						"custom:security-contact": "atenyun@gmail.com",
						"details": "You will find the deployed contract addresses in the repo",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"calcPercentage(uint256,uint256)": {
								"params": {
									"amount": "The total amount",
									"bps": "The precentage"
								},
								"returns": {
									"_0": "percentage"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "DirectDonation",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DirectDonation.sol\":671:8236  contract DirectDonation is Ownable(msg.sender), Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"DirectDonation.sol\":874:875  2 */\n  0x02\n    /* \"DirectDonation.sol\":862:875  uint8 fee = 2 */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"DirectDonation.sol\":1375:1530  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"DirectDonation.sol\":706:716  msg.sender */\n  caller\n    /* \"_ownable.sol\":1318:1319  0 */\n  0x00\n    /* \"_ownable.sol\":1294:1320  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"_ownable.sol\":1294:1306  initialOwner */\n  dup2\n    /* \"_ownable.sol\":1294:1320  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"_ownable.sol\":1290:1385  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"_ownable.sol\":1371:1372  0 */\n  0x00\n    /* \"_ownable.sol\":1343:1374  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"_ownable.sol\":1290:1385  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"_ownable.sol\":1394:1426  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"_ownable.sol\":1413:1425  initialOwner */\n  dup2\n    /* \"_ownable.sol\":1394:1412  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"_ownable.sol\":1394:1426  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"_ownable.sol\":1246:1433  constructor(address initialOwner) {... */\n  pop\n    /* \"_pausable.sol\":1262:1267  false */\n  0x00\n    /* \"_pausable.sol\":1252:1259  _paused */\n  dup1\n  0x14\n    /* \"_pausable.sol\":1252:1267  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"DirectDonation.sol\":1399:1424  _tokenCounter.increment() */\n  tag_13\n    /* \"DirectDonation.sol\":1399:1412  _tokenCounter */\n  0x02\n    /* \"DirectDonation.sol\":1399:1422  _tokenCounter.increment */\n  shl(0x20, tag_14)\n    /* \"DirectDonation.sol\":1399:1424  _tokenCounter.increment() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"DirectDonation.sol\":1476:1523  TokenStruct(address(0), false, block.timestamp) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"DirectDonation.sol\":1496:1497  0 */\n  0x00\n    /* \"DirectDonation.sol\":1476:1523  TokenStruct(address(0), false, block.timestamp) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"DirectDonation.sol\":1500:1505  false */\n  0x00\n    /* \"DirectDonation.sol\":1476:1523  TokenStruct(address(0), false, block.timestamp) */\n  iszero\n  iszero\n  dup2\n  mstore\n  0x20\n  add\n    /* \"DirectDonation.sol\":1507:1522  block.timestamp */\n  timestamp\n    /* \"DirectDonation.sol\":1476:1523  TokenStruct(address(0), false, block.timestamp) */\n  dup2\n  mstore\n  pop\n    /* \"DirectDonation.sol\":1434:1439  token */\n  0x05\n    /* \"DirectDonation.sol\":1434:1473  token[bytes32(_tokenCounter.current())] */\n  0x00\n    /* \"DirectDonation.sol\":1448:1471  _tokenCounter.current() */\n  tag_15\n    /* \"DirectDonation.sol\":1448:1461  _tokenCounter */\n  0x02\n    /* \"DirectDonation.sol\":1448:1469  _tokenCounter.current */\n  shl(0x20, tag_16)\n    /* \"DirectDonation.sol\":1448:1471  _tokenCounter.current() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"DirectDonation.sol\":1440:1472  bytes32(_tokenCounter.current()) */\n  0x00\n  shl\n    /* \"DirectDonation.sol\":1434:1473  token[bytes32(_tokenCounter.current())] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"DirectDonation.sol\":1434:1523  token[bytes32(_tokenCounter.current())] = TokenStruct(address(0), false, block.timestamp) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"DirectDonation.sol\":671:8236  contract DirectDonation is Ownable(msg.sender), Pausable {... */\n  jump(tag_17)\n    /* \"_ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"_ownable.sol\":3006:3022  address oldOwner */\n  0x00\n    /* \"_ownable.sol\":3025:3031  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"_ownable.sol\":3006:3031  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"_ownable.sol\":3050:3058  newOwner */\n  dup2\n    /* \"_ownable.sol\":3041:3047  _owner */\n  0x00\n  dup1\n    /* \"_ownable.sol\":3041:3058  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"_ownable.sol\":3104:3112  newOwner */\n  dup2\n    /* \"_ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"_ownable.sol\":3094:3102  oldOwner */\n  dup2\n    /* \"_ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"_ownable.sol\":2996:3120  {... */\n  pop\n    /* \"_ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n  0x00\n  add\n  sload\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_21:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_22:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_27\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_21\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_23:\n    /* \"#utility.yul\":328:352   */\n  tag_29\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_22\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_31\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"DirectDonation.sol\":671:8236  contract DirectDonation is Ownable(msg.sender), Pausable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DirectDonation.sol\":671:8236  contract DirectDonation is Ownable(msg.sender), Pausable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75e6e600\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xb2f7c6e0\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xe6062e1a\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe6062e1a\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf1a3b943\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf7edbbac\n      eq\n      tag_26\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0xb2f7c6e0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xcacf11e7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd48bfca7\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_28:\n      dup1\n      0x75e6e600\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9230b2bc\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95a7a953\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa37b06d4\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_27:\n      dup1\n      0x443910e0\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x443910e0\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4df71212\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x56a6d9ef\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x59770438\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x273cbaa0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3d496362\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x410a1d32\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"DirectDonation.sol\":7957:8054  function getBalance() public view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":1566:1960  function getTokenList() public view returns (TokenExportStruct[] memory list) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":7408:7596  function withdraw() public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      stop\n        /* \"DirectDonation.sol\":3381:3867  function getDonationByToekn(bytes32 _tokenId) public view returns (DonationStruct[] memory list) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":8171:8234  function unpause() public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"DirectDonation.sol\":2834:3323  function getDonation(address _donator) public view returns (DonationStruct[] memory list) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":2478:2776  function getDonationList() public view returns (DonationStruct[] memory list) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":7164:7308  function updateToken(uint8 _fee) public onlyOwner returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":7670:7899  function transferBalance(address payable _to, uint256 _amount) public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"DirectDonation.sol\":1991:2442  function getToken(address _addr) public view returns (TokenStruct[] memory list) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_pausable.sol\":1871:1955  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_ownable.sol\":2314:2415  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      stop\n        /* \"DirectDonation.sol\":1268:1318  mapping(bytes32 => DonationStruct) public donation */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":8082:8141  function pause() public onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      stop\n        /* \"_ownable.sol\":1659:1744  function owner() public view virtual returns (address) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":819:856  Counters.Counter public _tokenCounter */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":6800:7131  function updateToken(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":5847:6014  function calcPercentage(uint256 amount, uint256 bps) public pure returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":4434:5703  function donate(... */\n    tag_20:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      tag_122\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":3925:4406  function getDonationByAppId(bytes32 _appId) public view returns (DonationStruct[] memory list) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":6048:6427  function addToken(address _addr) public onlyOwner returns (bytes32) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":1324:1368  mapping(bytes32 => TokenStruct) public token */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":6464:6765  function deleteToken(bytes32 _tokenId) public onlyOwner returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_ownable.sol\":2564:2779  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n    tag_147:\n      stop\n        /* \"DirectDonation.sol\":775:813  Counters.Counter public _donateCounter */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DirectDonation.sol\":7957:8054  function getBalance() public view returns (uint256) {... */\n    tag_33:\n        /* \"DirectDonation.sol\":8000:8007  uint256 */\n      0x00\n        /* \"DirectDonation.sol\":8026:8047  address(this).balance */\n      selfbalance\n        /* \"DirectDonation.sol\":8019:8047  return address(this).balance */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":7957:8054  function getBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"DirectDonation.sol\":1566:1960  function getTokenList() public view returns (TokenExportStruct[] memory list) {... */\n    tag_38:\n        /* \"DirectDonation.sol\":1611:1642  TokenExportStruct[] memory list */\n      0x60\n        /* \"DirectDonation.sol\":1654:1687  TokenExportStruct[] memory result */\n      0x00\n        /* \"DirectDonation.sol\":1714:1737  _tokenCounter.current() */\n      tag_156\n        /* \"DirectDonation.sol\":1714:1727  _tokenCounter */\n      0x02\n        /* \"DirectDonation.sol\":1714:1735  _tokenCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":1714:1737  _tokenCounter.current() */\n      jump\t// in\n    tag_156:\n        /* \"DirectDonation.sol\":1690:1738  new TokenExportStruct[](_tokenCounter.current()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_158\n      jumpi\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n    tag_158:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup2\n      0x20\n      add\n    tag_162:\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_162\n      jumpi\n      swap1\n      pop\n    tag_161:\n      pop\n        /* \"DirectDonation.sol\":1654:1738  TokenExportStruct[] memory result = new TokenExportStruct[](_tokenCounter.current()) */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":1753:1762  uint256 i */\n      0x00\n        /* \"DirectDonation.sol\":1748:1930  for (uint256 i = 0; i < _tokenCounter.current(); i++) result[i] = TokenExportStruct(bytes32(i + 1), token[bytes32(i + 1)].addr, token[bytes32(i + 1)].pause, token[bytes32(i + 1)].dt) */\n    tag_165:\n        /* \"DirectDonation.sol\":1772:1795  _tokenCounter.current() */\n      tag_168\n        /* \"DirectDonation.sol\":1772:1785  _tokenCounter */\n      0x02\n        /* \"DirectDonation.sol\":1772:1793  _tokenCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":1772:1795  _tokenCounter.current() */\n      jump\t// in\n    tag_168:\n        /* \"DirectDonation.sol\":1768:1769  i */\n      dup2\n        /* \"DirectDonation.sol\":1768:1795  i < _tokenCounter.current() */\n      lt\n        /* \"DirectDonation.sol\":1748:1930  for (uint256 i = 0; i < _tokenCounter.current(); i++) result[i] = TokenExportStruct(bytes32(i + 1), token[bytes32(i + 1)].addr, token[bytes32(i + 1)].pause, token[bytes32(i + 1)].dt) */\n      iszero\n      tag_166\n      jumpi\n        /* \"DirectDonation.sol\":1814:1930  TokenExportStruct(bytes32(i + 1), token[bytes32(i + 1)].addr, token[bytes32(i + 1)].pause, token[bytes32(i + 1)].dt) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"DirectDonation.sol\":1844:1845  1 */\n      0x01\n        /* \"DirectDonation.sol\":1840:1841  i */\n      dup4\n        /* \"DirectDonation.sol\":1840:1845  i + 1 */\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"DirectDonation.sol\":1832:1846  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":1814:1930  TokenExportStruct(bytes32(i + 1), token[bytes32(i + 1)].addr, token[bytes32(i + 1)].pause, token[bytes32(i + 1)].dt) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DirectDonation.sol\":1848:1853  token */\n      0x05\n        /* \"DirectDonation.sol\":1848:1869  token[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":1866:1867  1 */\n      0x01\n        /* \"DirectDonation.sol\":1862:1863  i */\n      dup6\n        /* \"DirectDonation.sol\":1862:1867  i + 1 */\n      tag_171\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_171:\n        /* \"DirectDonation.sol\":1854:1868  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":1848:1869  token[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":1848:1874  token[bytes32(i + 1)].addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DirectDonation.sol\":1814:1930  TokenExportStruct(bytes32(i + 1), token[bytes32(i + 1)].addr, token[bytes32(i + 1)].pause, token[bytes32(i + 1)].dt) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DirectDonation.sol\":1876:1881  token */\n      0x05\n        /* \"DirectDonation.sol\":1876:1897  token[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":1894:1895  1 */\n      0x01\n        /* \"DirectDonation.sol\":1890:1891  i */\n      dup6\n        /* \"DirectDonation.sol\":1890:1895  i + 1 */\n      tag_172\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_172:\n        /* \"DirectDonation.sol\":1882:1896  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":1876:1897  token[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":1876:1903  token[bytes32(i + 1)].pause */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"DirectDonation.sol\":1814:1930  TokenExportStruct(bytes32(i + 1), token[bytes32(i + 1)].addr, token[bytes32(i + 1)].pause, token[bytes32(i + 1)].dt) */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DirectDonation.sol\":1905:1910  token */\n      0x05\n        /* \"DirectDonation.sol\":1905:1926  token[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":1923:1924  1 */\n      0x01\n        /* \"DirectDonation.sol\":1919:1920  i */\n      dup6\n        /* \"DirectDonation.sol\":1919:1924  i + 1 */\n      tag_173\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_173:\n        /* \"DirectDonation.sol\":1911:1925  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":1905:1926  token[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":1905:1929  token[bytes32(i + 1)].dt */\n      0x01\n      add\n      sload\n        /* \"DirectDonation.sol\":1814:1930  TokenExportStruct(bytes32(i + 1), token[bytes32(i + 1)].addr, token[bytes32(i + 1)].pause, token[bytes32(i + 1)].dt) */\n      dup2\n      mstore\n      pop\n        /* \"DirectDonation.sol\":1802:1808  result */\n      dup3\n        /* \"DirectDonation.sol\":1809:1810  i */\n      dup3\n        /* \"DirectDonation.sol\":1802:1811  result[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_174\n      jumpi\n      tag_175\n      tag_176\n      jump\t// in\n    tag_175:\n    tag_174:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"DirectDonation.sol\":1802:1930  result[i] = TokenExportStruct(bytes32(i + 1), token[bytes32(i + 1)].addr, token[bytes32(i + 1)].pause, token[bytes32(i + 1)].dt) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"DirectDonation.sol\":1797:1800  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"DirectDonation.sol\":1748:1930  for (uint256 i = 0; i < _tokenCounter.current(); i++) result[i] = TokenExportStruct(bytes32(i + 1), token[bytes32(i + 1)].addr, token[bytes32(i + 1)].pause, token[bytes32(i + 1)].dt) */\n      jump(tag_165)\n    tag_166:\n      pop\n        /* \"DirectDonation.sol\":1947:1953  result */\n      dup1\n        /* \"DirectDonation.sol\":1940:1953  return result */\n      swap2\n      pop\n      pop\n        /* \"DirectDonation.sol\":1566:1960  function getTokenList() public view returns (TokenExportStruct[] memory list) {... */\n      swap1\n      jump\t// out\n        /* \"DirectDonation.sol\":7408:7596  function withdraw() public onlyOwner {... */\n    tag_43:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_178\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_179\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_178:\n        /* \"DirectDonation.sol\":7455:7469  uint256 amount */\n      0x00\n        /* \"DirectDonation.sol\":7472:7493  address(this).balance */\n      selfbalance\n        /* \"DirectDonation.sol\":7455:7493  uint256 amount = address(this).balance */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":7504:7516  bool success */\n      0x00\n        /* \"DirectDonation.sol\":7522:7529  owner() */\n      tag_181\n        /* \"DirectDonation.sol\":7522:7527  owner */\n      tag_100\n        /* \"DirectDonation.sol\":7522:7529  owner() */\n      jump\t// in\n    tag_181:\n        /* \"DirectDonation.sol\":7522:7534  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DirectDonation.sol\":7542:7548  amount */\n      dup3\n        /* \"DirectDonation.sol\":7522:7553  owner().call{value: amount}(\"\") */\n      mload(0x40)\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_186\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_185)\n    tag_186:\n      0x60\n      swap2\n      pop\n    tag_185:\n      pop\n        /* \"DirectDonation.sol\":7503:7553  (bool success, ) = owner().call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"DirectDonation.sol\":7571:7578  success */\n      dup1\n        /* \"DirectDonation.sol\":7563:7589  require(success, \"Failed\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"DirectDonation.sol\":7445:7596  {... */\n      pop\n      pop\n        /* \"DirectDonation.sol\":7408:7596  function withdraw() public onlyOwner {... */\n      jump\t// out\n        /* \"DirectDonation.sol\":3381:3867  function getDonationByToekn(bytes32 _tokenId) public view returns (DonationStruct[] memory list) {... */\n    tag_48:\n        /* \"DirectDonation.sol\":3448:3476  DonationStruct[] memory list */\n      0x60\n        /* \"DirectDonation.sol\":3488:3518  DonationStruct[] memory result */\n      0x00\n        /* \"DirectDonation.sol\":3542:3566  _donateCounter.current() */\n      tag_191\n        /* \"DirectDonation.sol\":3542:3556  _donateCounter */\n      0x01\n        /* \"DirectDonation.sol\":3542:3564  _donateCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":3542:3566  _donateCounter.current() */\n      jump\t// in\n    tag_191:\n        /* \"DirectDonation.sol\":3521:3567  new DonationStruct[](_donateCounter.current()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_192\n      jumpi\n      tag_193\n      tag_160\n      jump\t// in\n    tag_193:\n    tag_192:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_194\n      jumpi\n      dup2\n      0x20\n      add\n    tag_195:\n      tag_196\n      tag_197\n      jump\t// in\n    tag_196:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_195\n      jumpi\n      swap1\n      pop\n    tag_194:\n      pop\n        /* \"DirectDonation.sol\":3488:3567  DonationStruct[] memory result = new DonationStruct[](_donateCounter.current()) */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":3578:3593  uint256 counter */\n      0x00\n        /* \"DirectDonation.sol\":3612:3621  uint256 i */\n      dup1\n        /* \"DirectDonation.sol\":3607:3838  for (uint256 i = 0; i < _donateCounter.current(); i++) {... */\n    tag_198:\n        /* \"DirectDonation.sol\":3631:3655  _donateCounter.current() */\n      tag_201\n        /* \"DirectDonation.sol\":3631:3645  _donateCounter */\n      0x01\n        /* \"DirectDonation.sol\":3631:3653  _donateCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":3631:3655  _donateCounter.current() */\n      jump\t// in\n    tag_201:\n        /* \"DirectDonation.sol\":3627:3628  i */\n      dup2\n        /* \"DirectDonation.sol\":3627:3655  i < _donateCounter.current() */\n      lt\n        /* \"DirectDonation.sol\":3607:3838  for (uint256 i = 0; i < _donateCounter.current(); i++) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"DirectDonation.sol\":3716:3724  _tokenId */\n      dup5\n        /* \"DirectDonation.sol\":3680:3688  donation */\n      0x04\n        /* \"DirectDonation.sol\":3680:3704  donation[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":3701:3702  1 */\n      0x01\n        /* \"DirectDonation.sol\":3697:3698  i */\n      dup5\n        /* \"DirectDonation.sol\":3697:3702  i + 1 */\n      tag_202\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_202:\n        /* \"DirectDonation.sol\":3689:3703  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":3680:3704  donation[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":3680:3712  donation[bytes32(i + 1)].tokenId */\n      0x01\n      add\n      sload\n        /* \"DirectDonation.sol\":3680:3724  donation[bytes32(i + 1)].tokenId == _tokenId */\n      sub\n        /* \"DirectDonation.sol\":3676:3828  if (donation[bytes32(i + 1)].tokenId == _tokenId) {... */\n      tag_203\n      jumpi\n        /* \"DirectDonation.sol\":3762:3770  donation */\n      0x04\n        /* \"DirectDonation.sol\":3762:3786  donation[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":3783:3784  1 */\n      0x01\n        /* \"DirectDonation.sol\":3779:3780  i */\n      dup4\n        /* \"DirectDonation.sol\":3779:3784  i + 1 */\n      tag_204\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_204:\n        /* \"DirectDonation.sol\":3771:3785  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":3762:3786  donation[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":3744:3786  result[counter] = donation[bytes32(i + 1)] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"DirectDonation.sol\":3744:3750  result */\n      dup4\n        /* \"DirectDonation.sol\":3751:3758  counter */\n      dup4\n        /* \"DirectDonation.sol\":3744:3759  result[counter] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_205\n      jumpi\n      tag_206\n      tag_176\n      jump\t// in\n    tag_206:\n    tag_205:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"DirectDonation.sol\":3744:3786  result[counter] = donation[bytes32(i + 1)] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"DirectDonation.sol\":3804:3813  counter++ */\n      dup2\n      dup1\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      swap3\n      pop\n      pop\n        /* \"DirectDonation.sol\":3676:3828  if (donation[bytes32(i + 1)].tokenId == _tokenId) {... */\n    tag_203:\n        /* \"DirectDonation.sol\":3657:3660  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"DirectDonation.sol\":3607:3838  for (uint256 i = 0; i < _donateCounter.current(); i++) {... */\n      jump(tag_198)\n    tag_199:\n      pop\n        /* \"DirectDonation.sol\":3854:3860  result */\n      dup2\n        /* \"DirectDonation.sol\":3847:3860  return result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"DirectDonation.sol\":3381:3867  function getDonationByToekn(bytes32 _tokenId) public view returns (DonationStruct[] memory list) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DirectDonation.sol\":8171:8234  function unpause() public onlyOwner {... */\n    tag_53:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_210\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_179\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_210:\n        /* \"DirectDonation.sol\":8217:8227  _unpause() */\n      tag_212\n        /* \"DirectDonation.sol\":8217:8225  _unpause */\n      tag_213\n        /* \"DirectDonation.sol\":8217:8227  _unpause() */\n      jump\t// in\n    tag_212:\n        /* \"DirectDonation.sol\":8171:8234  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"DirectDonation.sol\":2834:3323  function getDonation(address _donator) public view returns (DonationStruct[] memory list) {... */\n    tag_58:\n        /* \"DirectDonation.sol\":2894:2922  DonationStruct[] memory list */\n      0x60\n        /* \"DirectDonation.sol\":2934:2964  DonationStruct[] memory result */\n      0x00\n        /* \"DirectDonation.sol\":2988:3012  _donateCounter.current() */\n      tag_215\n        /* \"DirectDonation.sol\":2988:3002  _donateCounter */\n      0x01\n        /* \"DirectDonation.sol\":2988:3010  _donateCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":2988:3012  _donateCounter.current() */\n      jump\t// in\n    tag_215:\n        /* \"DirectDonation.sol\":2967:3013  new DonationStruct[](_donateCounter.current()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_216\n      jumpi\n      tag_217\n      tag_160\n      jump\t// in\n    tag_217:\n    tag_216:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_218\n      jumpi\n      dup2\n      0x20\n      add\n    tag_219:\n      tag_220\n      tag_197\n      jump\t// in\n    tag_220:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_219\n      jumpi\n      swap1\n      pop\n    tag_218:\n      pop\n        /* \"DirectDonation.sol\":2934:3013  DonationStruct[] memory result = new DonationStruct[](_donateCounter.current()) */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":3024:3039  uint256 counter */\n      0x00\n        /* \"DirectDonation.sol\":3058:3067  uint256 i */\n      dup1\n        /* \"DirectDonation.sol\":3053:3293  for (uint256 i = 0; i < _donateCounter.current(); i++) {... */\n    tag_221:\n        /* \"DirectDonation.sol\":3077:3101  _donateCounter.current() */\n      tag_224\n        /* \"DirectDonation.sol\":3077:3091  _donateCounter */\n      0x01\n        /* \"DirectDonation.sol\":3077:3099  _donateCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":3077:3101  _donateCounter.current() */\n      jump\t// in\n    tag_224:\n        /* \"DirectDonation.sol\":3073:3074  i */\n      dup2\n        /* \"DirectDonation.sol\":3073:3101  i < _donateCounter.current() */\n      lt\n        /* \"DirectDonation.sol\":3053:3293  for (uint256 i = 0; i < _donateCounter.current(); i++) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"DirectDonation.sol\":3170:3178  _donator */\n      dup5\n        /* \"DirectDonation.sol\":3126:3179  donation[bytes32(i + 1)].donator == address(_donator) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DirectDonation.sol\":3126:3134  donation */\n      0x04\n        /* \"DirectDonation.sol\":3126:3150  donation[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":3147:3148  1 */\n      0x01\n        /* \"DirectDonation.sol\":3143:3144  i */\n      dup5\n        /* \"DirectDonation.sol\":3143:3148  i + 1 */\n      tag_225\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_225:\n        /* \"DirectDonation.sol\":3135:3149  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":3126:3150  donation[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":3126:3158  donation[bytes32(i + 1)].donator */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DirectDonation.sol\":3126:3179  donation[bytes32(i + 1)].donator == address(_donator) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"DirectDonation.sol\":3122:3283  if (donation[bytes32(i + 1)].donator == address(_donator)) {... */\n      tag_226\n      jumpi\n        /* \"DirectDonation.sol\":3217:3225  donation */\n      0x04\n        /* \"DirectDonation.sol\":3217:3241  donation[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":3238:3239  1 */\n      0x01\n        /* \"DirectDonation.sol\":3234:3235  i */\n      dup4\n        /* \"DirectDonation.sol\":3234:3239  i + 1 */\n      tag_227\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_227:\n        /* \"DirectDonation.sol\":3226:3240  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":3217:3241  donation[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":3199:3241  result[counter] = donation[bytes32(i + 1)] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"DirectDonation.sol\":3199:3205  result */\n      dup4\n        /* \"DirectDonation.sol\":3206:3213  counter */\n      dup4\n        /* \"DirectDonation.sol\":3199:3214  result[counter] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_228\n      jumpi\n      tag_229\n      tag_176\n      jump\t// in\n    tag_229:\n    tag_228:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"DirectDonation.sol\":3199:3241  result[counter] = donation[bytes32(i + 1)] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"DirectDonation.sol\":3259:3268  counter++ */\n      dup2\n      dup1\n      tag_230\n      swap1\n      tag_208\n      jump\t// in\n    tag_230:\n      swap3\n      pop\n      pop\n        /* \"DirectDonation.sol\":3122:3283  if (donation[bytes32(i + 1)].donator == address(_donator)) {... */\n    tag_226:\n        /* \"DirectDonation.sol\":3103:3106  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"DirectDonation.sol\":3053:3293  for (uint256 i = 0; i < _donateCounter.current(); i++) {... */\n      jump(tag_221)\n    tag_222:\n      pop\n        /* \"DirectDonation.sol\":3310:3316  result */\n      dup2\n        /* \"DirectDonation.sol\":3303:3316  return result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"DirectDonation.sol\":2834:3323  function getDonation(address _donator) public view returns (DonationStruct[] memory list) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DirectDonation.sol\":2478:2776  function getDonationList() public view returns (DonationStruct[] memory list) {... */\n    tag_62:\n        /* \"DirectDonation.sol\":2526:2554  DonationStruct[] memory list */\n      0x60\n        /* \"DirectDonation.sol\":2566:2596  DonationStruct[] memory result */\n      0x00\n        /* \"DirectDonation.sol\":2620:2644  _donateCounter.current() */\n      tag_232\n        /* \"DirectDonation.sol\":2620:2634  _donateCounter */\n      0x01\n        /* \"DirectDonation.sol\":2620:2642  _donateCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":2620:2644  _donateCounter.current() */\n      jump\t// in\n    tag_232:\n        /* \"DirectDonation.sol\":2599:2645  new DonationStruct[](_donateCounter.current()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_233\n      jumpi\n      tag_234\n      tag_160\n      jump\t// in\n    tag_234:\n    tag_233:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_235\n      jumpi\n      dup2\n      0x20\n      add\n    tag_236:\n      tag_237\n      tag_197\n      jump\t// in\n    tag_237:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_236\n      jumpi\n      swap1\n      pop\n    tag_235:\n      pop\n        /* \"DirectDonation.sol\":2566:2645  DonationStruct[] memory result = new DonationStruct[](_donateCounter.current()) */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":2660:2669  uint256 i */\n      0x00\n        /* \"DirectDonation.sol\":2655:2746  for (uint256 i = 0; i < _donateCounter.current(); i++) result[i] = donation[bytes32(i + 1)] */\n    tag_238:\n        /* \"DirectDonation.sol\":2679:2703  _donateCounter.current() */\n      tag_241\n        /* \"DirectDonation.sol\":2679:2693  _donateCounter */\n      0x01\n        /* \"DirectDonation.sol\":2679:2701  _donateCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":2679:2703  _donateCounter.current() */\n      jump\t// in\n    tag_241:\n        /* \"DirectDonation.sol\":2675:2676  i */\n      dup2\n        /* \"DirectDonation.sol\":2675:2703  i < _donateCounter.current() */\n      lt\n        /* \"DirectDonation.sol\":2655:2746  for (uint256 i = 0; i < _donateCounter.current(); i++) result[i] = donation[bytes32(i + 1)] */\n      iszero\n      tag_239\n      jumpi\n        /* \"DirectDonation.sol\":2722:2730  donation */\n      0x04\n        /* \"DirectDonation.sol\":2722:2746  donation[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":2743:2744  1 */\n      0x01\n        /* \"DirectDonation.sol\":2739:2740  i */\n      dup4\n        /* \"DirectDonation.sol\":2739:2744  i + 1 */\n      tag_242\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_242:\n        /* \"DirectDonation.sol\":2731:2745  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":2722:2746  donation[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":2710:2746  result[i] = donation[bytes32(i + 1)] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"DirectDonation.sol\":2710:2716  result */\n      dup3\n        /* \"DirectDonation.sol\":2717:2718  i */\n      dup3\n        /* \"DirectDonation.sol\":2710:2719  result[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_243\n      jumpi\n      tag_244\n      tag_176\n      jump\t// in\n    tag_244:\n    tag_243:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"DirectDonation.sol\":2710:2746  result[i] = donation[bytes32(i + 1)] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"DirectDonation.sol\":2705:2708  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"DirectDonation.sol\":2655:2746  for (uint256 i = 0; i < _donateCounter.current(); i++) result[i] = donation[bytes32(i + 1)] */\n      jump(tag_238)\n    tag_239:\n      pop\n        /* \"DirectDonation.sol\":2763:2769  result */\n      dup1\n        /* \"DirectDonation.sol\":2756:2769  return result */\n      swap2\n      pop\n      pop\n        /* \"DirectDonation.sol\":2478:2776  function getDonationList() public view returns (DonationStruct[] memory list) {... */\n      swap1\n      jump\t// out\n        /* \"DirectDonation.sol\":7164:7308  function updateToken(uint8 _fee) public onlyOwner returns (bool) {... */\n    tag_68:\n        /* \"DirectDonation.sol\":7223:7227  bool */\n      0x00\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_246\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_179\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_246:\n        /* \"DirectDonation.sol\":7245:7249  _fee */\n      dup2\n        /* \"DirectDonation.sol\":7239:7242  fee */\n      0x03\n      0x00\n        /* \"DirectDonation.sol\":7239:7249  fee = _fee */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DirectDonation.sol\":7264:7280  feeUpdated(_fee) */\n      0xb5c0fbe3c7e536e86ea6d91ec04bd37128a9bf1e981e06dae9834031254831f9\n        /* \"DirectDonation.sol\":7275:7279  _fee */\n      dup3\n        /* \"DirectDonation.sol\":7264:7280  feeUpdated(_fee) */\n      mload(0x40)\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DirectDonation.sol\":7297:7301  true */\n      0x01\n        /* \"DirectDonation.sol\":7290:7301  return true */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":7164:7308  function updateToken(uint8 _fee) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DirectDonation.sol\":7670:7899  function transferBalance(address payable _to, uint256 _amount) public onlyOwner {... */\n    tag_75:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_251\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_179\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_251:\n        /* \"DirectDonation.sol\":7810:7822  bool success */\n      0x00\n        /* \"DirectDonation.sol\":7828:7831  _to */\n      dup3\n        /* \"DirectDonation.sol\":7828:7836  _to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DirectDonation.sol\":7844:7851  _amount */\n      dup3\n        /* \"DirectDonation.sol\":7828:7856  _to.call{value: _amount}(\"\") */\n      mload(0x40)\n      tag_253\n      swap1\n      tag_183\n      jump\t// in\n    tag_253:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_256\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_255)\n    tag_256:\n      0x60\n      swap2\n      pop\n    tag_255:\n      pop\n        /* \"DirectDonation.sol\":7809:7856  (bool success, ) = _to.call{value: _amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"DirectDonation.sol\":7874:7881  success */\n      dup1\n        /* \"DirectDonation.sol\":7866:7892  require(success, \"Failed\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_189\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"DirectDonation.sol\":7750:7899  {... */\n      pop\n        /* \"DirectDonation.sol\":7670:7899  function transferBalance(address payable _to, uint256 _amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DirectDonation.sol\":1991:2442  function getToken(address _addr) public view returns (TokenStruct[] memory list) {... */\n    tag_79:\n        /* \"DirectDonation.sol\":2045:2070  TokenStruct[] memory list */\n      0x60\n        /* \"DirectDonation.sol\":2082:2109  TokenStruct[] memory result */\n      0x00\n        /* \"DirectDonation.sol\":2130:2153  _tokenCounter.current() */\n      tag_260\n        /* \"DirectDonation.sol\":2130:2143  _tokenCounter */\n      0x02\n        /* \"DirectDonation.sol\":2130:2151  _tokenCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":2130:2153  _tokenCounter.current() */\n      jump\t// in\n    tag_260:\n        /* \"DirectDonation.sol\":2112:2154  new TokenStruct[](_tokenCounter.current()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_261\n      jumpi\n      tag_262\n      tag_160\n      jump\t// in\n    tag_262:\n    tag_261:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_263\n      jumpi\n      dup2\n      0x20\n      add\n    tag_264:\n      tag_265\n      tag_266\n      jump\t// in\n    tag_265:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_264\n      jumpi\n      swap1\n      pop\n    tag_263:\n      pop\n        /* \"DirectDonation.sol\":2082:2154  TokenStruct[] memory result = new TokenStruct[](_tokenCounter.current()) */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":2165:2180  uint256 counter */\n      0x00\n        /* \"DirectDonation.sol\":2199:2208  uint256 i */\n      dup1\n        /* \"DirectDonation.sol\":2194:2412  for (uint256 i = 0; i < _tokenCounter.current(); i++) {... */\n    tag_267:\n        /* \"DirectDonation.sol\":2218:2241  _tokenCounter.current() */\n      tag_270\n        /* \"DirectDonation.sol\":2218:2231  _tokenCounter */\n      0x02\n        /* \"DirectDonation.sol\":2218:2239  _tokenCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":2218:2241  _tokenCounter.current() */\n      jump\t// in\n    tag_270:\n        /* \"DirectDonation.sol\":2214:2215  i */\n      dup2\n        /* \"DirectDonation.sol\":2214:2241  i < _tokenCounter.current() */\n      lt\n        /* \"DirectDonation.sol\":2194:2412  for (uint256 i = 0; i < _tokenCounter.current(); i++) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"DirectDonation.sol\":2296:2301  _addr */\n      dup5\n        /* \"DirectDonation.sol\":2266:2301  token[bytes32(i + 1)].addr == _addr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DirectDonation.sol\":2266:2271  token */\n      0x05\n        /* \"DirectDonation.sol\":2266:2287  token[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":2284:2285  1 */\n      0x01\n        /* \"DirectDonation.sol\":2280:2281  i */\n      dup5\n        /* \"DirectDonation.sol\":2280:2285  i + 1 */\n      tag_271\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_271:\n        /* \"DirectDonation.sol\":2272:2286  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":2266:2287  token[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":2266:2292  token[bytes32(i + 1)].addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DirectDonation.sol\":2266:2301  token[bytes32(i + 1)].addr == _addr */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"DirectDonation.sol\":2262:2402  if (token[bytes32(i + 1)].addr == _addr) {... */\n      tag_272\n      jumpi\n        /* \"DirectDonation.sol\":2339:2344  token */\n      0x05\n        /* \"DirectDonation.sol\":2339:2360  token[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":2357:2358  1 */\n      0x01\n        /* \"DirectDonation.sol\":2353:2354  i */\n      dup4\n        /* \"DirectDonation.sol\":2353:2358  i + 1 */\n      tag_273\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_273:\n        /* \"DirectDonation.sol\":2345:2359  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":2339:2360  token[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":2321:2360  result[counter] = token[bytes32(i + 1)] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"DirectDonation.sol\":2321:2327  result */\n      dup4\n        /* \"DirectDonation.sol\":2328:2335  counter */\n      dup4\n        /* \"DirectDonation.sol\":2321:2336  result[counter] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_274\n      jumpi\n      tag_275\n      tag_176\n      jump\t// in\n    tag_275:\n    tag_274:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"DirectDonation.sol\":2321:2360  result[counter] = token[bytes32(i + 1)] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"DirectDonation.sol\":2378:2387  counter++ */\n      dup2\n      dup1\n      tag_276\n      swap1\n      tag_208\n      jump\t// in\n    tag_276:\n      swap3\n      pop\n      pop\n        /* \"DirectDonation.sol\":2262:2402  if (token[bytes32(i + 1)].addr == _addr) {... */\n    tag_272:\n        /* \"DirectDonation.sol\":2243:2246  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"DirectDonation.sol\":2194:2412  for (uint256 i = 0; i < _tokenCounter.current(); i++) {... */\n      jump(tag_267)\n    tag_268:\n      pop\n        /* \"DirectDonation.sol\":2429:2435  result */\n      dup2\n        /* \"DirectDonation.sol\":2422:2435  return result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"DirectDonation.sol\":1991:2442  function getToken(address _addr) public view returns (TokenStruct[] memory list) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"_pausable.sol\":1871:1955  function paused() public view virtual returns (bool) {... */\n    tag_84:\n        /* \"_pausable.sol\":1918:1922  bool */\n      0x00\n        /* \"_pausable.sol\":1941:1948  _paused */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"_pausable.sol\":1934:1948  return _paused */\n      swap1\n      pop\n        /* \"_pausable.sol\":1871:1955  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"_ownable.sol\":2314:2415  function renounceOwnership() public virtual onlyOwner {... */\n    tag_88:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_279\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_179\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_279:\n        /* \"_ownable.sol\":2378:2408  _transferOwnership(address(0)) */\n      tag_281\n        /* \"_ownable.sol\":2405:2406  0 */\n      0x00\n        /* \"_ownable.sol\":2378:2396  _transferOwnership */\n      tag_282\n        /* \"_ownable.sol\":2378:2408  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_281:\n        /* \"_ownable.sol\":2314:2415  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DirectDonation.sol\":1268:1318  mapping(bytes32 => DonationStruct) public donation */\n    tag_92:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"DirectDonation.sol\":8082:8141  function pause() public onlyOwner {... */\n    tag_97:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_284\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_179\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_284:\n        /* \"DirectDonation.sol\":8126:8134  _pause() */\n      tag_286\n        /* \"DirectDonation.sol\":8126:8132  _pause */\n      tag_287\n        /* \"DirectDonation.sol\":8126:8134  _pause() */\n      jump\t// in\n    tag_286:\n        /* \"DirectDonation.sol\":8082:8141  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"_ownable.sol\":1659:1744  function owner() public view virtual returns (address) {... */\n    tag_100:\n        /* \"_ownable.sol\":1705:1712  address */\n      0x00\n        /* \"_ownable.sol\":1731:1737  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_ownable.sol\":1724:1737  return _owner */\n      swap1\n      pop\n        /* \"_ownable.sol\":1659:1744  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"DirectDonation.sol\":819:856  Counters.Counter public _tokenCounter */\n    tag_105:\n      0x02\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"DirectDonation.sol\":6800:7131  function updateToken(... */\n    tag_111:\n        /* \"DirectDonation.sol\":6923:6927  bool */\n      0x00\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_290\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_179\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_290:\n        /* \"DirectDonation.sol\":6962:6967  _addr */\n      dup3\n        /* \"DirectDonation.sol\":6939:6944  token */\n      0x05\n        /* \"DirectDonation.sol\":6939:6954  token[_tokenId] */\n      0x00\n        /* \"DirectDonation.sol\":6945:6953  _tokenId */\n      dup7\n        /* \"DirectDonation.sol\":6939:6954  token[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":6939:6959  token[_tokenId].addr */\n      0x00\n      add\n      0x00\n        /* \"DirectDonation.sol\":6939:6967  token[_tokenId].addr = _addr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DirectDonation.sol\":7001:7007  _pause */\n      dup2\n        /* \"DirectDonation.sol\":6977:6982  token */\n      0x05\n        /* \"DirectDonation.sol\":6977:6992  token[_tokenId] */\n      0x00\n        /* \"DirectDonation.sol\":6983:6991  _tokenId */\n      dup7\n        /* \"DirectDonation.sol\":6977:6992  token[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":6977:6998  token[_tokenId].pause */\n      0x00\n      add\n      0x14\n        /* \"DirectDonation.sol\":6977:7007  token[_tokenId].pause = _pause */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DirectDonation.sol\":7073:7081  _tokenId */\n      dup4\n        /* \"DirectDonation.sol\":7060:7103  TokenUpdated(_tokenId, _addr, _msgSender()) */\n      0x0178cc6533afb1053a370099de33a8f4a6c10adf023eba537c33721e13dc1273\n        /* \"DirectDonation.sol\":7083:7088  _addr */\n      dup5\n        /* \"DirectDonation.sol\":7090:7102  _msgSender() */\n      tag_292\n        /* \"DirectDonation.sol\":7090:7100  _msgSender */\n      tag_293\n        /* \"DirectDonation.sol\":7090:7102  _msgSender() */\n      jump\t// in\n    tag_292:\n        /* \"DirectDonation.sol\":7060:7103  TokenUpdated(_tokenId, _addr, _msgSender()) */\n      mload(0x40)\n      tag_294\n      swap3\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DirectDonation.sol\":7120:7124  true */\n      0x01\n        /* \"DirectDonation.sol\":7113:7124  return true */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":6800:7131  function updateToken(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DirectDonation.sol\":5847:6014  function calcPercentage(uint256 amount, uint256 bps) public pure returns (uint256) {... */\n    tag_117:\n        /* \"DirectDonation.sol\":5921:5928  uint256 */\n      0x00\n        /* \"DirectDonation.sol\":5966:5969  100 */\n      0x64\n        /* \"DirectDonation.sol\":5958:5961  bps */\n      dup3\n        /* \"DirectDonation.sol\":5949:5955  amount */\n      dup5\n        /* \"DirectDonation.sol\":5949:5961  amount * bps */\n      tag_297\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"DirectDonation.sol\":5948:5969  (amount * bps) >= 100 */\n      lt\n      iszero\n        /* \"DirectDonation.sol\":5940:5970  require((amount * bps) >= 100) */\n      tag_299\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_299:\n        /* \"DirectDonation.sol\":6004:6007  100 */\n      0x64\n        /* \"DirectDonation.sol\":5997:6000  bps */\n      dup3\n        /* \"DirectDonation.sol\":5988:5994  amount */\n      dup5\n        /* \"DirectDonation.sol\":5988:6000  amount * bps */\n      tag_300\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_300:\n        /* \"DirectDonation.sol\":5987:6007  (amount * bps) / 100 */\n      tag_301\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n        /* \"DirectDonation.sol\":5980:6007  return (amount * bps) / 100 */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":5847:6014  function calcPercentage(uint256 amount, uint256 bps) public pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DirectDonation.sol\":4434:5703  function donate(... */\n    tag_122:\n        /* \"DirectDonation.sol\":4639:4643  bool */\n      0x00\n        /* \"_pausable.sol\":1495:1514  _requireNotPaused() */\n      tag_304\n        /* \"_pausable.sol\":1495:1512  _requireNotPaused */\n      tag_305\n        /* \"_pausable.sol\":1495:1514  _requireNotPaused() */\n      jump\t// in\n    tag_304:\n        /* \"DirectDonation.sol\":4687:4688  1 */\n      0x01\n        /* \"DirectDonation.sol\":4671:4690  bytes32(uint256(1)) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":4659:4667  _tokenId */\n      dup3\n        /* \"DirectDonation.sol\":4659:4690  _tokenId == bytes32(uint256(1)) */\n      sub\n        /* \"DirectDonation.sol\":4655:5413  if (_tokenId == bytes32(uint256(1))) {... */\n      tag_307\n      jumpi\n        /* \"DirectDonation.sol\":4723:4724  0 */\n      0x00\n        /* \"DirectDonation.sol\":4710:4719  msg.value */\n      callvalue\n        /* \"DirectDonation.sol\":4710:4724  msg.value == 0 */\n      sub\n        /* \"DirectDonation.sol\":4706:4763  if (msg.value == 0) revert InsufficientBalance(msg.value) */\n      tag_308\n      jumpi\n        /* \"DirectDonation.sol\":4753:4762  msg.value */\n      callvalue\n        /* \"DirectDonation.sol\":4733:4763  InsufficientBalance(msg.value) */\n      mload(0x40)\n      0x9266535100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DirectDonation.sol\":4706:4763  if (msg.value == 0) revert InsufficientBalance(msg.value) */\n    tag_308:\n        /* \"DirectDonation.sol\":4778:4790  bool success */\n      0x00\n        /* \"DirectDonation.sol\":4796:4799  _to */\n      dup7\n        /* \"DirectDonation.sol\":4796:4804  _to.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DirectDonation.sol\":4812:4846  calcPercentage(_amount, 100 - fee) */\n      tag_310\n        /* \"DirectDonation.sol\":4827:4834  _amount */\n      dup8\n        /* \"DirectDonation.sol\":4842:4845  fee */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"DirectDonation.sol\":4836:4839  100 */\n      0x64\n        /* \"DirectDonation.sol\":4836:4845  100 - fee */\n      tag_311\n      swap2\n      swap1\n      tag_312\n      jump\t// in\n    tag_311:\n        /* \"DirectDonation.sol\":4812:4846  calcPercentage(_amount, 100 - fee) */\n      0xff\n      and\n        /* \"DirectDonation.sol\":4812:4826  calcPercentage */\n      tag_117\n        /* \"DirectDonation.sol\":4812:4846  calcPercentage(_amount, 100 - fee) */\n      jump\t// in\n    tag_310:\n        /* \"DirectDonation.sol\":4796:4851  _to.call{value: calcPercentage(_amount, 100 - fee)}(\"\") */\n      mload(0x40)\n      tag_313\n      swap1\n      tag_183\n      jump\t// in\n    tag_313:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_316\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_315)\n    tag_316:\n      0x60\n      swap2\n      pop\n    tag_315:\n      pop\n        /* \"DirectDonation.sol\":4777:4851  (bool success, ) = _to.call{value: calcPercentage(_amount, 100 - fee)}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"DirectDonation.sol\":4873:4880  success */\n      dup1\n        /* \"DirectDonation.sol\":4865:4920  require(success, \"Failed to send Ether to the manager\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_317:\n        /* \"DirectDonation.sol\":4692:4931  {... */\n      pop\n        /* \"DirectDonation.sol\":4655:5413  if (_tokenId == bytes32(uint256(1))) {... */\n      jump(tag_320)\n    tag_307:\n        /* \"DirectDonation.sol\":4951:4975  uint256 authorizedAmount */\n      0x00\n        /* \"DirectDonation.sol\":4984:4989  token */\n      0x05\n        /* \"DirectDonation.sol\":4984:4999  token[_tokenId] */\n      0x00\n        /* \"DirectDonation.sol\":4990:4998  _tokenId */\n      dup5\n        /* \"DirectDonation.sol\":4984:4999  token[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":4984:5004  token[_tokenId].addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DirectDonation.sol\":4978:5025  ILSP7(token[_tokenId].addr).authorizedAmountFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x65aeaa95\n        /* \"DirectDonation.sol\":5034:5038  this */\n      address\n        /* \"DirectDonation.sol\":5041:5053  _msgSender() */\n      tag_321\n        /* \"DirectDonation.sol\":5041:5051  _msgSender */\n      tag_293\n        /* \"DirectDonation.sol\":5041:5053  _msgSender() */\n      jump\t// in\n    tag_321:\n        /* \"DirectDonation.sol\":4978:5054  ILSP7(token[_tokenId].addr).authorizedAmountFor(address(this), _msgSender()) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap3\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_322:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_324\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_324:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_325\n      swap2\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"DirectDonation.sol\":4951:5054  uint256 authorizedAmount = ILSP7(token[_tokenId].addr).authorizedAmountFor(address(this), _msgSender()) */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":5092:5099  _amount */\n      dup6\n        /* \"DirectDonation.sol\":5072:5088  authorizedAmount */\n      dup2\n        /* \"DirectDonation.sol\":5072:5099  authorizedAmount != _amount */\n      eq\n        /* \"DirectDonation.sol\":5068:5154  if (authorizedAmount != _amount) revert NotAuthorizedAmount(_amount, authorizedAmount) */\n      tag_327\n      jumpi\n        /* \"DirectDonation.sol\":5128:5135  _amount */\n      dup6\n        /* \"DirectDonation.sol\":5137:5153  authorizedAmount */\n      dup2\n        /* \"DirectDonation.sol\":5108:5154  NotAuthorizedAmount(_amount, authorizedAmount) */\n      mload(0x40)\n      0xa24f8be900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap3\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DirectDonation.sol\":5068:5154  if (authorizedAmount != _amount) revert NotAuthorizedAmount(_amount, authorizedAmount) */\n    tag_327:\n        /* \"DirectDonation.sol\":5175:5180  token */\n      0x05\n        /* \"DirectDonation.sol\":5175:5190  token[_tokenId] */\n      0x00\n        /* \"DirectDonation.sol\":5181:5189  _tokenId */\n      dup5\n        /* \"DirectDonation.sol\":5175:5190  token[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":5175:5195  token[_tokenId].addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DirectDonation.sol\":5169:5205  ILSP7(token[_tokenId].addr).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x760d9bba\n        /* \"DirectDonation.sol\":5206:5218  _msgSender() */\n      tag_330\n        /* \"DirectDonation.sol\":5206:5216  _msgSender */\n      tag_293\n        /* \"DirectDonation.sol\":5206:5218  _msgSender() */\n      jump\t// in\n    tag_330:\n        /* \"DirectDonation.sol\":5228:5231  _to */\n      dup10\n        /* \"DirectDonation.sol\":5234:5268  calcPercentage(_amount, 100 - fee) */\n      tag_331\n        /* \"DirectDonation.sol\":5249:5256  _amount */\n      dup11\n        /* \"DirectDonation.sol\":5264:5267  fee */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"DirectDonation.sol\":5258:5261  100 */\n      0x64\n        /* \"DirectDonation.sol\":5258:5267  100 - fee */\n      tag_332\n      swap2\n      swap1\n      tag_312\n      jump\t// in\n    tag_332:\n        /* \"DirectDonation.sol\":5234:5268  calcPercentage(_amount, 100 - fee) */\n      0xff\n      and\n        /* \"DirectDonation.sol\":5234:5248  calcPercentage */\n      tag_117\n        /* \"DirectDonation.sol\":5234:5268  calcPercentage(_amount, 100 - fee) */\n      jump\t// in\n    tag_331:\n        /* \"DirectDonation.sol\":5270:5276  _force */\n      dup10\n        /* \"DirectDonation.sol\":5278:5283  _data */\n      dup10\n        /* \"DirectDonation.sol\":5169:5284  ILSP7(token[_tokenId].addr).transfer(_msgSender(), address(_to), calcPercentage(_amount, 100 - fee), _force, _data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_335\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_335:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_337\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_337:\n      pop\n      pop\n      pop\n      pop\n        /* \"DirectDonation.sol\":5304:5309  token */\n      0x05\n        /* \"DirectDonation.sol\":5304:5319  token[_tokenId] */\n      0x00\n        /* \"DirectDonation.sol\":5310:5318  _tokenId */\n      dup5\n        /* \"DirectDonation.sol\":5304:5319  token[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":5304:5324  token[_tokenId].addr */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DirectDonation.sol\":5298:5334  ILSP7(token[_tokenId].addr).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x760d9bba\n        /* \"DirectDonation.sol\":5335:5347  _msgSender() */\n      tag_338\n        /* \"DirectDonation.sol\":5335:5345  _msgSender */\n      tag_293\n        /* \"DirectDonation.sol\":5335:5347  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"DirectDonation.sol\":5349:5356  owner() */\n      tag_339\n        /* \"DirectDonation.sol\":5349:5354  owner */\n      tag_100\n        /* \"DirectDonation.sol\":5349:5356  owner() */\n      jump\t// in\n    tag_339:\n        /* \"DirectDonation.sol\":5358:5386  calcPercentage(_amount, fee) */\n      tag_340\n        /* \"DirectDonation.sol\":5373:5380  _amount */\n      dup11\n        /* \"DirectDonation.sol\":5382:5385  fee */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"DirectDonation.sol\":5358:5386  calcPercentage(_amount, fee) */\n      0xff\n      and\n        /* \"DirectDonation.sol\":5358:5372  calcPercentage */\n      tag_117\n        /* \"DirectDonation.sol\":5358:5386  calcPercentage(_amount, fee) */\n      jump\t// in\n    tag_340:\n        /* \"DirectDonation.sol\":5388:5394  _force */\n      dup10\n        /* \"DirectDonation.sol\":5396:5401  _data */\n      dup10\n        /* \"DirectDonation.sol\":5298:5402  ILSP7(token[_tokenId].addr).transfer(_msgSender(), owner(), calcPercentage(_amount, fee), _force, _data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_341:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_342\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_342:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_344\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_344:\n      pop\n      pop\n      pop\n      pop\n        /* \"DirectDonation.sol\":4937:5413  {... */\n      pop\n        /* \"DirectDonation.sol\":4655:5413  if (_tokenId == bytes32(uint256(1))) {... */\n    tag_320:\n        /* \"DirectDonation.sol\":5423:5449  _donateCounter.increment() */\n      tag_345\n        /* \"DirectDonation.sol\":5423:5437  _donateCounter */\n      0x01\n        /* \"DirectDonation.sol\":5423:5447  _donateCounter.increment */\n      tag_346\n        /* \"DirectDonation.sol\":5423:5449  _donateCounter.increment() */\n      jump\t// in\n    tag_345:\n        /* \"DirectDonation.sol\":5505:5582  DonationStruct(_msgSender(), _tokenId, _appId, _amount, _to, block.timestamp) */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"DirectDonation.sol\":5520:5532  _msgSender() */\n      tag_347\n        /* \"DirectDonation.sol\":5520:5530  _msgSender */\n      tag_293\n        /* \"DirectDonation.sol\":5520:5532  _msgSender() */\n      jump\t// in\n    tag_347:\n        /* \"DirectDonation.sol\":5505:5582  DonationStruct(_msgSender(), _tokenId, _appId, _amount, _to, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DirectDonation.sol\":5534:5542  _tokenId */\n      dup4\n        /* \"DirectDonation.sol\":5505:5582  DonationStruct(_msgSender(), _tokenId, _appId, _amount, _to, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DirectDonation.sol\":5544:5550  _appId */\n      dup9\n        /* \"DirectDonation.sol\":5505:5582  DonationStruct(_msgSender(), _tokenId, _appId, _amount, _to, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DirectDonation.sol\":5552:5559  _amount */\n      dup7\n        /* \"DirectDonation.sol\":5505:5582  DonationStruct(_msgSender(), _tokenId, _appId, _amount, _to, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DirectDonation.sol\":5561:5564  _to */\n      dup8\n        /* \"DirectDonation.sol\":5505:5582  DonationStruct(_msgSender(), _tokenId, _appId, _amount, _to, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DirectDonation.sol\":5566:5581  block.timestamp */\n      timestamp\n        /* \"DirectDonation.sol\":5505:5582  DonationStruct(_msgSender(), _tokenId, _appId, _amount, _to, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"DirectDonation.sol\":5459:5467  donation */\n      0x04\n        /* \"DirectDonation.sol\":5459:5502  donation[bytes32(_donateCounter.current())] */\n      0x00\n        /* \"DirectDonation.sol\":5476:5500  _donateCounter.current() */\n      tag_348\n        /* \"DirectDonation.sol\":5476:5490  _donateCounter */\n      0x01\n        /* \"DirectDonation.sol\":5476:5498  _donateCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":5476:5500  _donateCounter.current() */\n      jump\t// in\n    tag_348:\n        /* \"DirectDonation.sol\":5468:5501  bytes32(_donateCounter.current()) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":5459:5502  donation[bytes32(_donateCounter.current())] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":5459:5582  donation[bytes32(_donateCounter.current())] = DonationStruct(_msgSender(), _tokenId, _appId, _amount, _to, block.timestamp) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"DirectDonation.sol\":5667:5673  _appId */\n      dup7\n        /* \"DirectDonation.sol\":5657:5665  _tokenId */\n      dup3\n        /* \"DirectDonation.sol\":5621:5674  Donated(_msgSender(), _to, _amount, _tokenId, _appId) */\n      0xd96b33cd6e9829949c7f13033f0a8230587efc5e5d0cff68861945efded28b8a\n        /* \"DirectDonation.sol\":5629:5641  _msgSender() */\n      tag_349\n        /* \"DirectDonation.sol\":5629:5639  _msgSender */\n      tag_293\n        /* \"DirectDonation.sol\":5629:5641  _msgSender() */\n      jump\t// in\n    tag_349:\n        /* \"DirectDonation.sol\":5643:5646  _to */\n      dup10\n        /* \"DirectDonation.sol\":5648:5655  _amount */\n      dup10\n        /* \"DirectDonation.sol\":5621:5674  Donated(_msgSender(), _to, _amount, _tokenId, _appId) */\n      mload(0x40)\n      tag_350\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DirectDonation.sol\":5692:5696  true */\n      0x01\n        /* \"DirectDonation.sol\":5685:5696  return true */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":4434:5703  function donate(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DirectDonation.sol\":3925:4406  function getDonationByAppId(bytes32 _appId) public view returns (DonationStruct[] memory list) {... */\n    tag_127:\n        /* \"DirectDonation.sol\":3990:4018  DonationStruct[] memory list */\n      0x60\n        /* \"DirectDonation.sol\":4030:4060  DonationStruct[] memory result */\n      0x00\n        /* \"DirectDonation.sol\":4084:4108  _donateCounter.current() */\n      tag_353\n        /* \"DirectDonation.sol\":4084:4098  _donateCounter */\n      0x01\n        /* \"DirectDonation.sol\":4084:4106  _donateCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":4084:4108  _donateCounter.current() */\n      jump\t// in\n    tag_353:\n        /* \"DirectDonation.sol\":4063:4109  new DonationStruct[](_donateCounter.current()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_354\n      jumpi\n      tag_355\n      tag_160\n      jump\t// in\n    tag_355:\n    tag_354:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_356\n      jumpi\n      dup2\n      0x20\n      add\n    tag_357:\n      tag_358\n      tag_197\n      jump\t// in\n    tag_358:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_357\n      jumpi\n      swap1\n      pop\n    tag_356:\n      pop\n        /* \"DirectDonation.sol\":4030:4109  DonationStruct[] memory result = new DonationStruct[](_donateCounter.current()) */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":4120:4135  uint256 counter */\n      0x00\n        /* \"DirectDonation.sol\":4154:4163  uint256 i */\n      dup1\n        /* \"DirectDonation.sol\":4149:4376  for (uint256 i = 0; i < _donateCounter.current(); i++) {... */\n    tag_359:\n        /* \"DirectDonation.sol\":4173:4197  _donateCounter.current() */\n      tag_362\n        /* \"DirectDonation.sol\":4173:4187  _donateCounter */\n      0x01\n        /* \"DirectDonation.sol\":4173:4195  _donateCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":4173:4197  _donateCounter.current() */\n      jump\t// in\n    tag_362:\n        /* \"DirectDonation.sol\":4169:4170  i */\n      dup2\n        /* \"DirectDonation.sol\":4169:4197  i < _donateCounter.current() */\n      lt\n        /* \"DirectDonation.sol\":4149:4376  for (uint256 i = 0; i < _donateCounter.current(); i++) {... */\n      iszero\n      tag_360\n      jumpi\n        /* \"DirectDonation.sol\":4256:4262  _appId */\n      dup5\n        /* \"DirectDonation.sol\":4222:4230  donation */\n      0x04\n        /* \"DirectDonation.sol\":4222:4246  donation[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":4243:4244  1 */\n      0x01\n        /* \"DirectDonation.sol\":4239:4240  i */\n      dup5\n        /* \"DirectDonation.sol\":4239:4244  i + 1 */\n      tag_363\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_363:\n        /* \"DirectDonation.sol\":4231:4245  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":4222:4246  donation[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":4222:4252  donation[bytes32(i + 1)].appId */\n      0x02\n      add\n      sload\n        /* \"DirectDonation.sol\":4222:4262  donation[bytes32(i + 1)].appId == _appId */\n      sub\n        /* \"DirectDonation.sol\":4218:4366  if (donation[bytes32(i + 1)].appId == _appId) {... */\n      tag_364\n      jumpi\n        /* \"DirectDonation.sol\":4300:4308  donation */\n      0x04\n        /* \"DirectDonation.sol\":4300:4324  donation[bytes32(i + 1)] */\n      0x00\n        /* \"DirectDonation.sol\":4321:4322  1 */\n      0x01\n        /* \"DirectDonation.sol\":4317:4318  i */\n      dup4\n        /* \"DirectDonation.sol\":4317:4322  i + 1 */\n      tag_365\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_365:\n        /* \"DirectDonation.sol\":4309:4323  bytes32(i + 1) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":4300:4324  donation[bytes32(i + 1)] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":4282:4324  result[counter] = donation[bytes32(i + 1)] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"DirectDonation.sol\":4282:4288  result */\n      dup4\n        /* \"DirectDonation.sol\":4289:4296  counter */\n      dup4\n        /* \"DirectDonation.sol\":4282:4297  result[counter] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_366\n      jumpi\n      tag_367\n      tag_176\n      jump\t// in\n    tag_367:\n    tag_366:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"DirectDonation.sol\":4282:4324  result[counter] = donation[bytes32(i + 1)] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"DirectDonation.sol\":4342:4351  counter++ */\n      dup2\n      dup1\n      tag_368\n      swap1\n      tag_208\n      jump\t// in\n    tag_368:\n      swap3\n      pop\n      pop\n        /* \"DirectDonation.sol\":4218:4366  if (donation[bytes32(i + 1)].appId == _appId) {... */\n    tag_364:\n        /* \"DirectDonation.sol\":4199:4202  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"DirectDonation.sol\":4149:4376  for (uint256 i = 0; i < _donateCounter.current(); i++) {... */\n      jump(tag_359)\n    tag_360:\n      pop\n        /* \"DirectDonation.sol\":4393:4399  result */\n      dup2\n        /* \"DirectDonation.sol\":4386:4399  return result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"DirectDonation.sol\":3925:4406  function getDonationByAppId(bytes32 _appId) public view returns (DonationStruct[] memory list) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DirectDonation.sol\":6048:6427  function addToken(address _addr) public onlyOwner returns (bytes32) {... */\n    tag_132:\n        /* \"DirectDonation.sol\":6107:6114  bytes32 */\n      0x00\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_370\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_179\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_370:\n        /* \"DirectDonation.sol\":6126:6151  _tokenCounter.increment() */\n      tag_372\n        /* \"DirectDonation.sol\":6126:6139  _tokenCounter */\n      0x02\n        /* \"DirectDonation.sol\":6126:6149  _tokenCounter.increment */\n      tag_346\n        /* \"DirectDonation.sol\":6126:6151  _tokenCounter.increment() */\n      jump\t// in\n    tag_372:\n        /* \"DirectDonation.sol\":6203:6254  TokenStruct(address(_addr), false, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"DirectDonation.sol\":6223:6228  _addr */\n      dup4\n        /* \"DirectDonation.sol\":6203:6254  TokenStruct(address(_addr), false, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DirectDonation.sol\":6231:6236  false */\n      0x00\n        /* \"DirectDonation.sol\":6203:6254  TokenStruct(address(_addr), false, block.timestamp) */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DirectDonation.sol\":6238:6253  block.timestamp */\n      timestamp\n        /* \"DirectDonation.sol\":6203:6254  TokenStruct(address(_addr), false, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"DirectDonation.sol\":6161:6166  token */\n      0x05\n        /* \"DirectDonation.sol\":6161:6200  token[bytes32(_tokenCounter.current())] */\n      0x00\n        /* \"DirectDonation.sol\":6175:6198  _tokenCounter.current() */\n      tag_373\n        /* \"DirectDonation.sol\":6175:6188  _tokenCounter */\n      0x02\n        /* \"DirectDonation.sol\":6175:6196  _tokenCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":6175:6198  _tokenCounter.current() */\n      jump\t// in\n    tag_373:\n        /* \"DirectDonation.sol\":6167:6199  bytes32(_tokenCounter.current()) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":6161:6200  token[bytes32(_tokenCounter.current())] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DirectDonation.sol\":6161:6254  token[bytes32(_tokenCounter.current())] = TokenStruct(address(_addr), false, block.timestamp) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"DirectDonation.sol\":6316:6339  _tokenCounter.current() */\n      tag_374\n        /* \"DirectDonation.sol\":6316:6329  _tokenCounter */\n      0x02\n        /* \"DirectDonation.sol\":6316:6337  _tokenCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":6316:6339  _tokenCounter.current() */\n      jump\t// in\n    tag_374:\n        /* \"DirectDonation.sol\":6308:6340  bytes32(_tokenCounter.current()) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":6297:6371  TokenAdded(bytes32(_tokenCounter.current()), address(_addr), _msgSender()) */\n      0x0e50ffa2b79cb01d7c5404bfe02189a4c5b297cd59bc80608efdc52e3b334616\n        /* \"DirectDonation.sol\":6350:6355  _addr */\n      dup4\n        /* \"DirectDonation.sol\":6358:6370  _msgSender() */\n      tag_375\n        /* \"DirectDonation.sol\":6358:6368  _msgSender */\n      tag_293\n        /* \"DirectDonation.sol\":6358:6370  _msgSender() */\n      jump\t// in\n    tag_375:\n        /* \"DirectDonation.sol\":6297:6371  TokenAdded(bytes32(_tokenCounter.current()), address(_addr), _msgSender()) */\n      mload(0x40)\n      tag_376\n      swap3\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_376:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DirectDonation.sol\":6396:6419  _tokenCounter.current() */\n      tag_377\n        /* \"DirectDonation.sol\":6396:6409  _tokenCounter */\n      0x02\n        /* \"DirectDonation.sol\":6396:6417  _tokenCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":6396:6419  _tokenCounter.current() */\n      jump\t// in\n    tag_377:\n        /* \"DirectDonation.sol\":6388:6420  bytes32(_tokenCounter.current()) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":6381:6420  return bytes32(_tokenCounter.current()) */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":6048:6427  function addToken(address _addr) public onlyOwner returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DirectDonation.sol\":1324:1368  mapping(bytes32 => TokenStruct) public token */\n    tag_138:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"DirectDonation.sol\":6464:6765  function deleteToken(bytes32 _tokenId) public onlyOwner returns (uint256) {... */\n    tag_144:\n        /* \"DirectDonation.sol\":6529:6536  uint256 */\n      0x00\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_379\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_179\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_379:\n        /* \"DirectDonation.sol\":6555:6560  token */\n      0x05\n        /* \"DirectDonation.sol\":6555:6570  token[_tokenId] */\n      0x00\n        /* \"DirectDonation.sol\":6561:6569  _tokenId */\n      dup4\n        /* \"DirectDonation.sol\":6555:6570  token[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DirectDonation.sol\":6548:6570  delete token[_tokenId] */\n      dup1\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x00\n      dup3\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"DirectDonation.sol\":6580:6605  _tokenCounter.decrement() */\n      tag_381\n        /* \"DirectDonation.sol\":6580:6593  _tokenCounter */\n      0x02\n        /* \"DirectDonation.sol\":6580:6603  _tokenCounter.decrement */\n      tag_382\n        /* \"DirectDonation.sol\":6580:6605  _tokenCounter.decrement() */\n      jump\t// in\n    tag_381:\n        /* \"DirectDonation.sol\":6679:6702  _tokenCounter.current() */\n      tag_383\n        /* \"DirectDonation.sol\":6679:6692  _tokenCounter */\n      0x02\n        /* \"DirectDonation.sol\":6679:6700  _tokenCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":6679:6702  _tokenCounter.current() */\n      jump\t// in\n    tag_383:\n        /* \"DirectDonation.sol\":6671:6703  bytes32(_tokenCounter.current()) */\n      0x00\n      shl\n        /* \"DirectDonation.sol\":6658:6718  TokenRemoved(bytes32(_tokenCounter.current()), _msgSender()) */\n      0x3afbc119e23990903d2ef3fdf9210a7b06b5f6f85438b0edfcfbf630ad594fcc\n        /* \"DirectDonation.sol\":6705:6717  _msgSender() */\n      tag_384\n        /* \"DirectDonation.sol\":6705:6715  _msgSender */\n      tag_293\n        /* \"DirectDonation.sol\":6705:6717  _msgSender() */\n      jump\t// in\n    tag_384:\n        /* \"DirectDonation.sol\":6658:6718  TokenRemoved(bytes32(_tokenCounter.current()), _msgSender()) */\n      mload(0x40)\n      tag_385\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_385:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DirectDonation.sol\":6735:6758  _tokenCounter.current() */\n      tag_386\n        /* \"DirectDonation.sol\":6735:6748  _tokenCounter */\n      0x02\n        /* \"DirectDonation.sol\":6735:6756  _tokenCounter.current */\n      tag_157\n        /* \"DirectDonation.sol\":6735:6758  _tokenCounter.current() */\n      jump\t// in\n    tag_386:\n        /* \"DirectDonation.sol\":6728:6758  return _tokenCounter.current() */\n      swap1\n      pop\n        /* \"DirectDonation.sol\":6464:6765  function deleteToken(bytes32 _tokenId) public onlyOwner returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"_ownable.sol\":2564:2779  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_149:\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      tag_388\n        /* \"_ownable.sol\":1552:1563  _checkOwner */\n      tag_179\n        /* \"_ownable.sol\":1552:1565  _checkOwner() */\n      jump\t// in\n    tag_388:\n        /* \"_ownable.sol\":2668:2669  0 */\n      0x00\n        /* \"_ownable.sol\":2648:2670  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_ownable.sol\":2648:2656  newOwner */\n      dup2\n        /* \"_ownable.sol\":2648:2670  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"_ownable.sol\":2644:2735  if (newOwner == address(0)) {... */\n      tag_390\n      jumpi\n        /* \"_ownable.sol\":2721:2722  0 */\n      0x00\n        /* \"_ownable.sol\":2693:2724  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_391\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_391:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"_ownable.sol\":2644:2735  if (newOwner == address(0)) {... */\n    tag_390:\n        /* \"_ownable.sol\":2744:2772  _transferOwnership(newOwner) */\n      tag_392\n        /* \"_ownable.sol\":2763:2771  newOwner */\n      dup2\n        /* \"_ownable.sol\":2744:2762  _transferOwnership */\n      tag_282\n        /* \"_ownable.sol\":2744:2772  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_392:\n        /* \"_ownable.sol\":2564:2779  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"DirectDonation.sol\":775:813  Counters.Counter public _donateCounter */\n    tag_152:\n      0x01\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"_ownable.sol\":1817:1979  function _checkOwner() internal view virtual {... */\n    tag_179:\n        /* \"_ownable.sol\":1887:1899  _msgSender() */\n      tag_395\n        /* \"_ownable.sol\":1887:1897  _msgSender */\n      tag_293\n        /* \"_ownable.sol\":1887:1899  _msgSender() */\n      jump\t// in\n    tag_395:\n        /* \"_ownable.sol\":1876:1899  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_ownable.sol\":1876:1883  owner() */\n      tag_396\n        /* \"_ownable.sol\":1876:1881  owner */\n      tag_100\n        /* \"_ownable.sol\":1876:1883  owner() */\n      jump\t// in\n    tag_396:\n        /* \"_ownable.sol\":1876:1899  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"_ownable.sol\":1872:1973  if (owner() != _msgSender()) {... */\n      tag_397\n      jumpi\n        /* \"_ownable.sol\":1949:1961  _msgSender() */\n      tag_398\n        /* \"_ownable.sol\":1949:1959  _msgSender */\n      tag_293\n        /* \"_ownable.sol\":1949:1961  _msgSender() */\n      jump\t// in\n    tag_398:\n        /* \"_ownable.sol\":1922:1962  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_399\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_399:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"_ownable.sol\":1872:1973  if (owner() != _msgSender()) {... */\n    tag_397:\n        /* \"_ownable.sol\":1817:1979  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"_pausable.sol\":2731:2848  function _unpause() internal virtual whenPaused {... */\n    tag_213:\n        /* \"_pausable.sol\":1742:1758  _requirePaused() */\n      tag_401\n        /* \"_pausable.sol\":1742:1756  _requirePaused */\n      tag_402\n        /* \"_pausable.sol\":1742:1758  _requirePaused() */\n      jump\t// in\n    tag_401:\n        /* \"_pausable.sol\":2799:2804  false */\n      0x00\n        /* \"_pausable.sol\":2789:2796  _paused */\n      dup1\n      0x14\n        /* \"_pausable.sol\":2789:2804  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"_pausable.sol\":2819:2841  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"_pausable.sol\":2828:2840  _msgSender() */\n      tag_404\n        /* \"_pausable.sol\":2828:2838  _msgSender */\n      tag_293\n        /* \"_pausable.sol\":2828:2840  _msgSender() */\n      jump\t// in\n    tag_404:\n        /* \"_pausable.sol\":2819:2841  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_405\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_405:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"_pausable.sol\":2731:2848  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"_ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_282:\n        /* \"_ownable.sol\":3006:3022  address oldOwner */\n      0x00\n        /* \"_ownable.sol\":3025:3031  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_ownable.sol\":3006:3031  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"_ownable.sol\":3050:3058  newOwner */\n      dup2\n        /* \"_ownable.sol\":3041:3047  _owner */\n      0x00\n      dup1\n        /* \"_ownable.sol\":3041:3058  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"_ownable.sol\":3104:3112  newOwner */\n      dup2\n        /* \"_ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_ownable.sol\":3094:3102  oldOwner */\n      dup2\n        /* \"_ownable.sol\":3073:3113  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_ownable.sol\":2996:3120  {... */\n      pop\n        /* \"_ownable.sol\":2933:3120  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"_pausable.sol\":2484:2599  function _pause() internal virtual whenNotPaused {... */\n    tag_287:\n        /* \"_pausable.sol\":1495:1514  _requireNotPaused() */\n      tag_408\n        /* \"_pausable.sol\":1495:1512  _requireNotPaused */\n      tag_305\n        /* \"_pausable.sol\":1495:1514  _requireNotPaused() */\n      jump\t// in\n    tag_408:\n        /* \"_pausable.sol\":2553:2557  true */\n      0x01\n        /* \"_pausable.sol\":2543:2550  _paused */\n      0x00\n      0x14\n        /* \"_pausable.sol\":2543:2557  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"_pausable.sol\":2572:2592  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"_pausable.sol\":2579:2591  _msgSender() */\n      tag_410\n        /* \"_pausable.sol\":2579:2589  _msgSender */\n      tag_293\n        /* \"_pausable.sol\":2579:2591  _msgSender() */\n      jump\t// in\n    tag_410:\n        /* \"_pausable.sol\":2572:2592  Paused(_msgSender()) */\n      mload(0x40)\n      tag_411\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_411:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"_pausable.sol\":2484:2599  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"_pausable.sol\":2023:2151  function _requireNotPaused() internal view virtual {... */\n    tag_305:\n        /* \"_pausable.sol\":2088:2096  paused() */\n      tag_414\n        /* \"_pausable.sol\":2088:2094  paused */\n      tag_84\n        /* \"_pausable.sol\":2088:2096  paused() */\n      jump\t// in\n    tag_414:\n        /* \"_pausable.sol\":2084:2145  if (paused()) {... */\n      iszero\n      tag_415\n      jumpi\n        /* \"_pausable.sol\":2119:2134  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"_pausable.sol\":2084:2145  if (paused()) {... */\n    tag_415:\n        /* \"_pausable.sol\":2023:2151  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_382:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1137:1150  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1153:1160  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1153:1167  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1137:1167  uint256 value = counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1193:1194  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1185:1190  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1185:1194  value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_418\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_419\n      swap1\n      tag_420\n      jump\t// in\n    tag_419:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_418:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1285:1286  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1277:1282  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1277:1286  value - 1 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1260:1267  counter */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1260:1274  counter._value */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1127:1303  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"_pausable.sol\":2223:2349  function _requirePaused() internal view virtual {... */\n    tag_402:\n        /* \"_pausable.sol\":2286:2294  paused() */\n      tag_422\n        /* \"_pausable.sol\":2286:2292  paused */\n      tag_84\n        /* \"_pausable.sol\":2286:2294  paused() */\n      jump\t// in\n    tag_422:\n        /* \"_pausable.sol\":2281:2343  if (!paused()) {... */\n      tag_423\n      jumpi\n        /* \"_pausable.sol\":2317:2332  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"_pausable.sol\":2281:2343  if (!paused()) {... */\n    tag_423:\n        /* \"_pausable.sol\":2223:2349  function _requirePaused() internal view virtual {... */\n      jump\t// out\n    tag_164:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup1\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_197:\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup1\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup1\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_266:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_424:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_425:\n        /* \"#utility.yul\":177:201   */\n      tag_505\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_424\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_35:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_507\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_425\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:591   */\n    tag_426:\n        /* \"#utility.yul\":544:550   */\n      0x00\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":572:584   */\n      mload\n        /* \"#utility.yul\":562:584   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":597:816   */\n    tag_427:\n        /* \"#utility.yul\":731:742   */\n      0x00\n        /* \"#utility.yul\":765:771   */\n      dup3\n        /* \"#utility.yul\":760:763   */\n      dup3\n        /* \"#utility.yul\":753:772   */\n      mstore\n        /* \"#utility.yul\":805:809   */\n      0x20\n        /* \"#utility.yul\":800:803   */\n      dup3\n        /* \"#utility.yul\":796:810   */\n      add\n        /* \"#utility.yul\":781:810   */\n      swap1\n      pop\n        /* \"#utility.yul\":597:816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:989   */\n    tag_428:\n        /* \"#utility.yul\":924:928   */\n      0x00\n        /* \"#utility.yul\":947:950   */\n      dup2\n        /* \"#utility.yul\":939:950   */\n      swap1\n      pop\n        /* \"#utility.yul\":977:981   */\n      0x20\n        /* \"#utility.yul\":972:975   */\n      dup3\n        /* \"#utility.yul\":968:982   */\n      add\n        /* \"#utility.yul\":960:982   */\n      swap1\n      pop\n        /* \"#utility.yul\":822:989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":995:1072   */\n    tag_429:\n        /* \"#utility.yul\":1032:1039   */\n      0x00\n        /* \"#utility.yul\":1061:1066   */\n      dup2\n        /* \"#utility.yul\":1050:1066   */\n      swap1\n      pop\n        /* \"#utility.yul\":995:1072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1186   */\n    tag_430:\n        /* \"#utility.yul\":1155:1179   */\n      tag_513\n        /* \"#utility.yul\":1173:1178   */\n      dup2\n        /* \"#utility.yul\":1155:1179   */\n      tag_429\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":1150:1153   */\n      dup3\n        /* \"#utility.yul\":1143:1180   */\n      mstore\n        /* \"#utility.yul\":1078:1186   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1192:1318   */\n    tag_431:\n        /* \"#utility.yul\":1229:1236   */\n      0x00\n        /* \"#utility.yul\":1269:1311   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1262:1267   */\n      dup3\n        /* \"#utility.yul\":1258:1312   */\n      and\n        /* \"#utility.yul\":1247:1312   */\n      swap1\n      pop\n        /* \"#utility.yul\":1192:1318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1324:1420   */\n    tag_432:\n        /* \"#utility.yul\":1361:1368   */\n      0x00\n        /* \"#utility.yul\":1390:1414   */\n      tag_516\n        /* \"#utility.yul\":1408:1413   */\n      dup3\n        /* \"#utility.yul\":1390:1414   */\n      tag_431\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":1379:1414   */\n      swap1\n      pop\n        /* \"#utility.yul\":1324:1420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1426:1534   */\n    tag_433:\n        /* \"#utility.yul\":1503:1527   */\n      tag_518\n        /* \"#utility.yul\":1521:1526   */\n      dup2\n        /* \"#utility.yul\":1503:1527   */\n      tag_432\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":1498:1501   */\n      dup3\n        /* \"#utility.yul\":1491:1528   */\n      mstore\n        /* \"#utility.yul\":1426:1534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1540:1630   */\n    tag_434:\n        /* \"#utility.yul\":1574:1581   */\n      0x00\n        /* \"#utility.yul\":1617:1622   */\n      dup2\n        /* \"#utility.yul\":1610:1623   */\n      iszero\n        /* \"#utility.yul\":1603:1624   */\n      iszero\n        /* \"#utility.yul\":1592:1624   */\n      swap1\n      pop\n        /* \"#utility.yul\":1540:1630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1636:1735   */\n    tag_435:\n        /* \"#utility.yul\":1707:1728   */\n      tag_521\n        /* \"#utility.yul\":1722:1727   */\n      dup2\n        /* \"#utility.yul\":1707:1728   */\n      tag_434\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":1702:1705   */\n      dup3\n        /* \"#utility.yul\":1695:1729   */\n      mstore\n        /* \"#utility.yul\":1636:1735   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1849   */\n    tag_436:\n        /* \"#utility.yul\":1818:1842   */\n      tag_523\n        /* \"#utility.yul\":1836:1841   */\n      dup2\n        /* \"#utility.yul\":1818:1842   */\n      tag_424\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":1813:1816   */\n      dup3\n        /* \"#utility.yul\":1806:1843   */\n      mstore\n        /* \"#utility.yul\":1741:1849   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1945:2801   */\n    tag_437:\n        /* \"#utility.yul\":2102:2106   */\n      0x80\n        /* \"#utility.yul\":2097:2100   */\n      dup3\n        /* \"#utility.yul\":2093:2107   */\n      add\n        /* \"#utility.yul\":2187:2191   */\n      0x00\n        /* \"#utility.yul\":2180:2185   */\n      dup3\n        /* \"#utility.yul\":2176:2192   */\n      add\n        /* \"#utility.yul\":2170:2193   */\n      mload\n        /* \"#utility.yul\":2206:2269   */\n      tag_525\n        /* \"#utility.yul\":2263:2267   */\n      0x00\n        /* \"#utility.yul\":2258:2261   */\n      dup6\n        /* \"#utility.yul\":2254:2268   */\n      add\n        /* \"#utility.yul\":2240:2252   */\n      dup3\n        /* \"#utility.yul\":2206:2269   */\n      tag_430\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":2117:2279   */\n      pop\n        /* \"#utility.yul\":2361:2365   */\n      0x20\n        /* \"#utility.yul\":2354:2359   */\n      dup3\n        /* \"#utility.yul\":2350:2366   */\n      add\n        /* \"#utility.yul\":2344:2367   */\n      mload\n        /* \"#utility.yul\":2380:2443   */\n      tag_526\n        /* \"#utility.yul\":2437:2441   */\n      0x20\n        /* \"#utility.yul\":2432:2435   */\n      dup6\n        /* \"#utility.yul\":2428:2442   */\n      add\n        /* \"#utility.yul\":2414:2426   */\n      dup3\n        /* \"#utility.yul\":2380:2443   */\n      tag_433\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":2289:2453   */\n      pop\n        /* \"#utility.yul\":2536:2540   */\n      0x40\n        /* \"#utility.yul\":2529:2534   */\n      dup3\n        /* \"#utility.yul\":2525:2541   */\n      add\n        /* \"#utility.yul\":2519:2542   */\n      mload\n        /* \"#utility.yul\":2555:2612   */\n      tag_527\n        /* \"#utility.yul\":2606:2610   */\n      0x40\n        /* \"#utility.yul\":2601:2604   */\n      dup6\n        /* \"#utility.yul\":2597:2611   */\n      add\n        /* \"#utility.yul\":2583:2595   */\n      dup3\n        /* \"#utility.yul\":2555:2612   */\n      tag_435\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":2463:2622   */\n      pop\n        /* \"#utility.yul\":2702:2706   */\n      0x60\n        /* \"#utility.yul\":2695:2700   */\n      dup3\n        /* \"#utility.yul\":2691:2707   */\n      add\n        /* \"#utility.yul\":2685:2708   */\n      mload\n        /* \"#utility.yul\":2721:2784   */\n      tag_528\n        /* \"#utility.yul\":2778:2782   */\n      0x60\n        /* \"#utility.yul\":2773:2776   */\n      dup6\n        /* \"#utility.yul\":2769:2783   */\n      add\n        /* \"#utility.yul\":2755:2767   */\n      dup3\n        /* \"#utility.yul\":2721:2784   */\n      tag_436\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2632:2794   */\n      pop\n        /* \"#utility.yul\":2071:2801   */\n      pop\n        /* \"#utility.yul\":1945:2801   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2807:3126   */\n    tag_438:\n        /* \"#utility.yul\":2946:2956   */\n      0x00\n        /* \"#utility.yul\":2967:3083   */\n      tag_530\n        /* \"#utility.yul\":3079:3082   */\n      dup4\n        /* \"#utility.yul\":3071:3077   */\n      dup4\n        /* \"#utility.yul\":2967:3083   */\n      tag_437\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":3115:3119   */\n      0x80\n        /* \"#utility.yul\":3110:3113   */\n      dup4\n        /* \"#utility.yul\":3106:3120   */\n      add\n        /* \"#utility.yul\":3092:3120   */\n      swap1\n      pop\n        /* \"#utility.yul\":2807:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3280   */\n    tag_439:\n        /* \"#utility.yul\":3237:3241   */\n      0x00\n        /* \"#utility.yul\":3269:3273   */\n      0x20\n        /* \"#utility.yul\":3264:3267   */\n      dup3\n        /* \"#utility.yul\":3260:3274   */\n      add\n        /* \"#utility.yul\":3252:3274   */\n      swap1\n      pop\n        /* \"#utility.yul\":3132:3280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3380:4392   */\n    tag_440:\n        /* \"#utility.yul\":3569:3572   */\n      0x00\n        /* \"#utility.yul\":3598:3687   */\n      tag_533\n        /* \"#utility.yul\":3681:3686   */\n      dup3\n        /* \"#utility.yul\":3598:3687   */\n      tag_426\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3703:3824   */\n      tag_534\n        /* \"#utility.yul\":3817:3823   */\n      dup2\n        /* \"#utility.yul\":3812:3815   */\n      dup6\n        /* \"#utility.yul\":3703:3824   */\n      tag_427\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":3696:3824   */\n      swap4\n      pop\n        /* \"#utility.yul\":3848:3939   */\n      tag_535\n        /* \"#utility.yul\":3933:3938   */\n      dup4\n        /* \"#utility.yul\":3848:3939   */\n      tag_428\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":3962:3969   */\n      dup1\n        /* \"#utility.yul\":3993:3994   */\n      0x00\n        /* \"#utility.yul\":3978:4367   */\n    tag_536:\n        /* \"#utility.yul\":4003:4009   */\n      dup4\n        /* \"#utility.yul\":4000:4001   */\n      dup2\n        /* \"#utility.yul\":3997:4010   */\n      lt\n        /* \"#utility.yul\":3978:4367   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":4079:4085   */\n      dup2\n        /* \"#utility.yul\":4073:4086   */\n      mload\n        /* \"#utility.yul\":4106:4239   */\n      tag_539\n        /* \"#utility.yul\":4235:4238   */\n      dup9\n        /* \"#utility.yul\":4220:4233   */\n      dup3\n        /* \"#utility.yul\":4106:4239   */\n      tag_438\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":4099:4239   */\n      swap8\n      pop\n        /* \"#utility.yul\":4262:4357   */\n      tag_540\n        /* \"#utility.yul\":4350:4356   */\n      dup4\n        /* \"#utility.yul\":4262:4357   */\n      tag_439\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":4252:4357   */\n      swap3\n      pop\n        /* \"#utility.yul\":4038:4367   */\n      pop\n        /* \"#utility.yul\":4025:4026   */\n      0x01\n        /* \"#utility.yul\":4022:4023   */\n      dup2\n        /* \"#utility.yul\":4018:4027   */\n      add\n        /* \"#utility.yul\":4013:4027   */\n      swap1\n      pop\n        /* \"#utility.yul\":3978:4367   */\n      jump(tag_536)\n    tag_538:\n        /* \"#utility.yul\":3982:3996   */\n      pop\n        /* \"#utility.yul\":4383:4386   */\n      dup6\n        /* \"#utility.yul\":4376:4386   */\n      swap4\n      pop\n        /* \"#utility.yul\":3574:4392   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3380:4392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4398:4911   */\n    tag_40:\n        /* \"#utility.yul\":4611:4615   */\n      0x00\n        /* \"#utility.yul\":4649:4651   */\n      0x20\n        /* \"#utility.yul\":4638:4647   */\n      dup3\n        /* \"#utility.yul\":4634:4652   */\n      add\n        /* \"#utility.yul\":4626:4652   */\n      swap1\n      pop\n        /* \"#utility.yul\":4698:4707   */\n      dup2\n        /* \"#utility.yul\":4692:4696   */\n      dup2\n        /* \"#utility.yul\":4688:4708   */\n      sub\n        /* \"#utility.yul\":4684:4685   */\n      0x00\n        /* \"#utility.yul\":4673:4682   */\n      dup4\n        /* \"#utility.yul\":4669:4686   */\n      add\n        /* \"#utility.yul\":4662:4709   */\n      mstore\n        /* \"#utility.yul\":4726:4904   */\n      tag_542\n        /* \"#utility.yul\":4899:4903   */\n      dup2\n        /* \"#utility.yul\":4890:4896   */\n      dup5\n        /* \"#utility.yul\":4726:4904   */\n      tag_440\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":4718:4904   */\n      swap1\n      pop\n        /* \"#utility.yul\":4398:4911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4917:4992   */\n    tag_441:\n        /* \"#utility.yul\":4950:4956   */\n      0x00\n        /* \"#utility.yul\":4983:4985   */\n      0x40\n        /* \"#utility.yul\":4977:4986   */\n      mload\n        /* \"#utility.yul\":4967:4986   */\n      swap1\n      pop\n        /* \"#utility.yul\":4917:4992   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":4998:5115   */\n    tag_442:\n        /* \"#utility.yul\":5107:5108   */\n      0x00\n        /* \"#utility.yul\":5104:5105   */\n      dup1\n        /* \"#utility.yul\":5097:5109   */\n      revert\n        /* \"#utility.yul\":5121:5238   */\n    tag_443:\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5227:5228   */\n      dup1\n        /* \"#utility.yul\":5220:5232   */\n      revert\n        /* \"#utility.yul\":5244:5366   */\n    tag_444:\n        /* \"#utility.yul\":5317:5341   */\n      tag_547\n        /* \"#utility.yul\":5335:5340   */\n      dup2\n        /* \"#utility.yul\":5317:5341   */\n      tag_429\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":5310:5315   */\n      dup2\n        /* \"#utility.yul\":5307:5342   */\n      eq\n        /* \"#utility.yul\":5297:5360   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":5356:5357   */\n      0x00\n        /* \"#utility.yul\":5353:5354   */\n      dup1\n        /* \"#utility.yul\":5346:5358   */\n      revert\n        /* \"#utility.yul\":5297:5360   */\n    tag_548:\n        /* \"#utility.yul\":5244:5366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5372:5511   */\n    tag_445:\n        /* \"#utility.yul\":5418:5423   */\n      0x00\n        /* \"#utility.yul\":5456:5462   */\n      dup2\n        /* \"#utility.yul\":5443:5463   */\n      calldataload\n        /* \"#utility.yul\":5434:5463   */\n      swap1\n      pop\n        /* \"#utility.yul\":5472:5505   */\n      tag_550\n        /* \"#utility.yul\":5499:5504   */\n      dup2\n        /* \"#utility.yul\":5472:5505   */\n      tag_444\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":5372:5511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5517:5846   */\n    tag_47:\n        /* \"#utility.yul\":5576:5582   */\n      0x00\n        /* \"#utility.yul\":5625:5627   */\n      0x20\n        /* \"#utility.yul\":5613:5622   */\n      dup3\n        /* \"#utility.yul\":5604:5611   */\n      dup5\n        /* \"#utility.yul\":5600:5623   */\n      sub\n        /* \"#utility.yul\":5596:5628   */\n      slt\n        /* \"#utility.yul\":5593:5712   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":5631:5710   */\n      tag_553\n      tag_442\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":5593:5712   */\n    tag_552:\n        /* \"#utility.yul\":5751:5752   */\n      0x00\n        /* \"#utility.yul\":5776:5829   */\n      tag_554\n        /* \"#utility.yul\":5821:5828   */\n      dup5\n        /* \"#utility.yul\":5812:5818   */\n      dup3\n        /* \"#utility.yul\":5801:5810   */\n      dup6\n        /* \"#utility.yul\":5797:5819   */\n      add\n        /* \"#utility.yul\":5776:5829   */\n      tag_445\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":5766:5829   */\n      swap2\n      pop\n        /* \"#utility.yul\":5722:5839   */\n      pop\n        /* \"#utility.yul\":5517:5846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5852:5998   */\n    tag_446:\n        /* \"#utility.yul\":5951:5957   */\n      0x00\n        /* \"#utility.yul\":5985:5990   */\n      dup2\n        /* \"#utility.yul\":5979:5991   */\n      mload\n        /* \"#utility.yul\":5969:5991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5852:5998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6004:6220   */\n    tag_447:\n        /* \"#utility.yul\":6135:6146   */\n      0x00\n        /* \"#utility.yul\":6169:6175   */\n      dup3\n        /* \"#utility.yul\":6164:6167   */\n      dup3\n        /* \"#utility.yul\":6157:6176   */\n      mstore\n        /* \"#utility.yul\":6209:6213   */\n      0x20\n        /* \"#utility.yul\":6204:6207   */\n      dup3\n        /* \"#utility.yul\":6200:6214   */\n      add\n        /* \"#utility.yul\":6185:6214   */\n      swap1\n      pop\n        /* \"#utility.yul\":6004:6220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6226:6390   */\n    tag_448:\n        /* \"#utility.yul\":6325:6329   */\n      0x00\n        /* \"#utility.yul\":6348:6351   */\n      dup2\n        /* \"#utility.yul\":6340:6351   */\n      swap1\n      pop\n        /* \"#utility.yul\":6378:6382   */\n      0x20\n        /* \"#utility.yul\":6373:6376   */\n      dup3\n        /* \"#utility.yul\":6369:6383   */\n      add\n        /* \"#utility.yul\":6361:6383   */\n      swap1\n      pop\n        /* \"#utility.yul\":6226:6390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6480:7692   */\n    tag_449:\n        /* \"#utility.yul\":6631:6635   */\n      0xc0\n        /* \"#utility.yul\":6626:6629   */\n      dup3\n        /* \"#utility.yul\":6622:6636   */\n      add\n        /* \"#utility.yul\":6721:6725   */\n      0x00\n        /* \"#utility.yul\":6714:6719   */\n      dup3\n        /* \"#utility.yul\":6710:6726   */\n      add\n        /* \"#utility.yul\":6704:6727   */\n      mload\n        /* \"#utility.yul\":6740:6803   */\n      tag_559\n        /* \"#utility.yul\":6797:6801   */\n      0x00\n        /* \"#utility.yul\":6792:6795   */\n      dup6\n        /* \"#utility.yul\":6788:6802   */\n      add\n        /* \"#utility.yul\":6774:6786   */\n      dup3\n        /* \"#utility.yul\":6740:6803   */\n      tag_433\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":6646:6813   */\n      pop\n        /* \"#utility.yul\":6898:6902   */\n      0x20\n        /* \"#utility.yul\":6891:6896   */\n      dup3\n        /* \"#utility.yul\":6887:6903   */\n      add\n        /* \"#utility.yul\":6881:6904   */\n      mload\n        /* \"#utility.yul\":6917:6980   */\n      tag_560\n        /* \"#utility.yul\":6974:6978   */\n      0x20\n        /* \"#utility.yul\":6969:6972   */\n      dup6\n        /* \"#utility.yul\":6965:6979   */\n      add\n        /* \"#utility.yul\":6951:6963   */\n      dup3\n        /* \"#utility.yul\":6917:6980   */\n      tag_430\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":6823:6990   */\n      pop\n        /* \"#utility.yul\":7073:7077   */\n      0x40\n        /* \"#utility.yul\":7066:7071   */\n      dup3\n        /* \"#utility.yul\":7062:7078   */\n      add\n        /* \"#utility.yul\":7056:7079   */\n      mload\n        /* \"#utility.yul\":7092:7155   */\n      tag_561\n        /* \"#utility.yul\":7149:7153   */\n      0x40\n        /* \"#utility.yul\":7144:7147   */\n      dup6\n        /* \"#utility.yul\":7140:7154   */\n      add\n        /* \"#utility.yul\":7126:7138   */\n      dup3\n        /* \"#utility.yul\":7092:7155   */\n      tag_430\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":7000:7165   */\n      pop\n        /* \"#utility.yul\":7249:7253   */\n      0x60\n        /* \"#utility.yul\":7242:7247   */\n      dup3\n        /* \"#utility.yul\":7238:7254   */\n      add\n        /* \"#utility.yul\":7232:7255   */\n      mload\n        /* \"#utility.yul\":7268:7331   */\n      tag_562\n        /* \"#utility.yul\":7325:7329   */\n      0x60\n        /* \"#utility.yul\":7320:7323   */\n      dup6\n        /* \"#utility.yul\":7316:7330   */\n      add\n        /* \"#utility.yul\":7302:7314   */\n      dup3\n        /* \"#utility.yul\":7268:7331   */\n      tag_436\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":7175:7341   */\n      pop\n        /* \"#utility.yul\":7421:7425   */\n      0x80\n        /* \"#utility.yul\":7414:7419   */\n      dup3\n        /* \"#utility.yul\":7410:7426   */\n      add\n        /* \"#utility.yul\":7404:7427   */\n      mload\n        /* \"#utility.yul\":7440:7503   */\n      tag_563\n        /* \"#utility.yul\":7497:7501   */\n      0x80\n        /* \"#utility.yul\":7492:7495   */\n      dup6\n        /* \"#utility.yul\":7488:7502   */\n      add\n        /* \"#utility.yul\":7474:7486   */\n      dup3\n        /* \"#utility.yul\":7440:7503   */\n      tag_433\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":7351:7513   */\n      pop\n        /* \"#utility.yul\":7593:7597   */\n      0xa0\n        /* \"#utility.yul\":7586:7591   */\n      dup3\n        /* \"#utility.yul\":7582:7598   */\n      add\n        /* \"#utility.yul\":7576:7599   */\n      mload\n        /* \"#utility.yul\":7612:7675   */\n      tag_564\n        /* \"#utility.yul\":7669:7673   */\n      0xa0\n        /* \"#utility.yul\":7664:7667   */\n      dup6\n        /* \"#utility.yul\":7660:7674   */\n      add\n        /* \"#utility.yul\":7646:7658   */\n      dup3\n        /* \"#utility.yul\":7612:7675   */\n      tag_436\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":7523:7685   */\n      pop\n        /* \"#utility.yul\":6600:7692   */\n      pop\n        /* \"#utility.yul\":6480:7692   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7698:8005   */\n    tag_450:\n        /* \"#utility.yul\":7831:7841   */\n      0x00\n        /* \"#utility.yul\":7852:7962   */\n      tag_566\n        /* \"#utility.yul\":7958:7961   */\n      dup4\n        /* \"#utility.yul\":7950:7956   */\n      dup4\n        /* \"#utility.yul\":7852:7962   */\n      tag_449\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":7994:7998   */\n      0xc0\n        /* \"#utility.yul\":7989:7992   */\n      dup4\n        /* \"#utility.yul\":7985:7999   */\n      add\n        /* \"#utility.yul\":7971:7999   */\n      swap1\n      pop\n        /* \"#utility.yul\":7698:8005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8011:8156   */\n    tag_451:\n        /* \"#utility.yul\":8113:8117   */\n      0x00\n        /* \"#utility.yul\":8145:8149   */\n      0x20\n        /* \"#utility.yul\":8140:8143   */\n      dup3\n        /* \"#utility.yul\":8136:8150   */\n      add\n        /* \"#utility.yul\":8128:8150   */\n      swap1\n      pop\n        /* \"#utility.yul\":8011:8156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8250:9238   */\n    tag_452:\n        /* \"#utility.yul\":8433:8436   */\n      0x00\n        /* \"#utility.yul\":8462:8548   */\n      tag_569\n        /* \"#utility.yul\":8542:8547   */\n      dup3\n        /* \"#utility.yul\":8462:8548   */\n      tag_446\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":8564:8682   */\n      tag_570\n        /* \"#utility.yul\":8675:8681   */\n      dup2\n        /* \"#utility.yul\":8670:8673   */\n      dup6\n        /* \"#utility.yul\":8564:8682   */\n      tag_447\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":8557:8682   */\n      swap4\n      pop\n        /* \"#utility.yul\":8706:8794   */\n      tag_571\n        /* \"#utility.yul\":8788:8793   */\n      dup4\n        /* \"#utility.yul\":8706:8794   */\n      tag_448\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":8817:8824   */\n      dup1\n        /* \"#utility.yul\":8848:8849   */\n      0x00\n        /* \"#utility.yul\":8833:9213   */\n    tag_572:\n        /* \"#utility.yul\":8858:8864   */\n      dup4\n        /* \"#utility.yul\":8855:8856   */\n      dup2\n        /* \"#utility.yul\":8852:8865   */\n      lt\n        /* \"#utility.yul\":8833:9213   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":8934:8940   */\n      dup2\n        /* \"#utility.yul\":8928:8941   */\n      mload\n        /* \"#utility.yul\":8961:9088   */\n      tag_575\n        /* \"#utility.yul\":9084:9087   */\n      dup9\n        /* \"#utility.yul\":9069:9082   */\n      dup3\n        /* \"#utility.yul\":8961:9088   */\n      tag_450\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":8954:9088   */\n      swap8\n      pop\n        /* \"#utility.yul\":9111:9203   */\n      tag_576\n        /* \"#utility.yul\":9196:9202   */\n      dup4\n        /* \"#utility.yul\":9111:9203   */\n      tag_451\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":9101:9203   */\n      swap3\n      pop\n        /* \"#utility.yul\":8893:9213   */\n      pop\n        /* \"#utility.yul\":8880:8881   */\n      0x01\n        /* \"#utility.yul\":8877:8878   */\n      dup2\n        /* \"#utility.yul\":8873:8882   */\n      add\n        /* \"#utility.yul\":8868:8882   */\n      swap1\n      pop\n        /* \"#utility.yul\":8833:9213   */\n      jump(tag_572)\n    tag_574:\n        /* \"#utility.yul\":8837:8851   */\n      pop\n        /* \"#utility.yul\":9229:9232   */\n      dup6\n        /* \"#utility.yul\":9222:9232   */\n      swap4\n      pop\n        /* \"#utility.yul\":8438:9238   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8250:9238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9244:9745   */\n    tag_50:\n        /* \"#utility.yul\":9451:9455   */\n      0x00\n        /* \"#utility.yul\":9489:9491   */\n      0x20\n        /* \"#utility.yul\":9478:9487   */\n      dup3\n        /* \"#utility.yul\":9474:9492   */\n      add\n        /* \"#utility.yul\":9466:9492   */\n      swap1\n      pop\n        /* \"#utility.yul\":9538:9547   */\n      dup2\n        /* \"#utility.yul\":9532:9536   */\n      dup2\n        /* \"#utility.yul\":9528:9548   */\n      sub\n        /* \"#utility.yul\":9524:9525   */\n      0x00\n        /* \"#utility.yul\":9513:9522   */\n      dup4\n        /* \"#utility.yul\":9509:9526   */\n      add\n        /* \"#utility.yul\":9502:9549   */\n      mstore\n        /* \"#utility.yul\":9566:9738   */\n      tag_578\n        /* \"#utility.yul\":9733:9737   */\n      dup2\n        /* \"#utility.yul\":9724:9730   */\n      dup5\n        /* \"#utility.yul\":9566:9738   */\n      tag_452\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":9558:9738   */\n      swap1\n      pop\n        /* \"#utility.yul\":9244:9745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9751:9873   */\n    tag_453:\n        /* \"#utility.yul\":9824:9848   */\n      tag_580\n        /* \"#utility.yul\":9842:9847   */\n      dup2\n        /* \"#utility.yul\":9824:9848   */\n      tag_432\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":9817:9822   */\n      dup2\n        /* \"#utility.yul\":9814:9849   */\n      eq\n        /* \"#utility.yul\":9804:9867   */\n      tag_581\n      jumpi\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9860:9861   */\n      dup1\n        /* \"#utility.yul\":9853:9865   */\n      revert\n        /* \"#utility.yul\":9804:9867   */\n    tag_581:\n        /* \"#utility.yul\":9751:9873   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9879:10018   */\n    tag_454:\n        /* \"#utility.yul\":9925:9930   */\n      0x00\n        /* \"#utility.yul\":9963:9969   */\n      dup2\n        /* \"#utility.yul\":9950:9970   */\n      calldataload\n        /* \"#utility.yul\":9941:9970   */\n      swap1\n      pop\n        /* \"#utility.yul\":9979:10012   */\n      tag_583\n        /* \"#utility.yul\":10006:10011   */\n      dup2\n        /* \"#utility.yul\":9979:10012   */\n      tag_453\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":9879:10018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10024:10353   */\n    tag_57:\n        /* \"#utility.yul\":10083:10089   */\n      0x00\n        /* \"#utility.yul\":10132:10134   */\n      0x20\n        /* \"#utility.yul\":10120:10129   */\n      dup3\n        /* \"#utility.yul\":10111:10118   */\n      dup5\n        /* \"#utility.yul\":10107:10130   */\n      sub\n        /* \"#utility.yul\":10103:10135   */\n      slt\n        /* \"#utility.yul\":10100:10219   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":10138:10217   */\n      tag_586\n      tag_442\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":10100:10219   */\n    tag_585:\n        /* \"#utility.yul\":10258:10259   */\n      0x00\n        /* \"#utility.yul\":10283:10336   */\n      tag_587\n        /* \"#utility.yul\":10328:10335   */\n      dup5\n        /* \"#utility.yul\":10319:10325   */\n      dup3\n        /* \"#utility.yul\":10308:10317   */\n      dup6\n        /* \"#utility.yul\":10304:10326   */\n      add\n        /* \"#utility.yul\":10283:10336   */\n      tag_454\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":10273:10336   */\n      swap2\n      pop\n        /* \"#utility.yul\":10229:10346   */\n      pop\n        /* \"#utility.yul\":10024:10353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10359:10445   */\n    tag_455:\n        /* \"#utility.yul\":10394:10401   */\n      0x00\n        /* \"#utility.yul\":10434:10438   */\n      0xff\n        /* \"#utility.yul\":10427:10432   */\n      dup3\n        /* \"#utility.yul\":10423:10439   */\n      and\n        /* \"#utility.yul\":10412:10439   */\n      swap1\n      pop\n        /* \"#utility.yul\":10359:10445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10451:10569   */\n    tag_456:\n        /* \"#utility.yul\":10522:10544   */\n      tag_590\n        /* \"#utility.yul\":10538:10543   */\n      dup2\n        /* \"#utility.yul\":10522:10544   */\n      tag_455\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":10515:10520   */\n      dup2\n        /* \"#utility.yul\":10512:10545   */\n      eq\n        /* \"#utility.yul\":10502:10563   */\n      tag_591\n      jumpi\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10556:10557   */\n      dup1\n        /* \"#utility.yul\":10549:10561   */\n      revert\n        /* \"#utility.yul\":10502:10563   */\n    tag_591:\n        /* \"#utility.yul\":10451:10569   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10575:10710   */\n    tag_457:\n        /* \"#utility.yul\":10619:10624   */\n      0x00\n        /* \"#utility.yul\":10657:10663   */\n      dup2\n        /* \"#utility.yul\":10644:10664   */\n      calldataload\n        /* \"#utility.yul\":10635:10664   */\n      swap1\n      pop\n        /* \"#utility.yul\":10673:10704   */\n      tag_593\n        /* \"#utility.yul\":10698:10703   */\n      dup2\n        /* \"#utility.yul\":10673:10704   */\n      tag_456\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":10575:10710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10716:11041   */\n    tag_67:\n        /* \"#utility.yul\":10773:10779   */\n      0x00\n        /* \"#utility.yul\":10822:10824   */\n      0x20\n        /* \"#utility.yul\":10810:10819   */\n      dup3\n        /* \"#utility.yul\":10801:10808   */\n      dup5\n        /* \"#utility.yul\":10797:10820   */\n      sub\n        /* \"#utility.yul\":10793:10825   */\n      slt\n        /* \"#utility.yul\":10790:10909   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":10828:10907   */\n      tag_596\n      tag_442\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":10790:10909   */\n    tag_595:\n        /* \"#utility.yul\":10948:10949   */\n      0x00\n        /* \"#utility.yul\":10973:11024   */\n      tag_597\n        /* \"#utility.yul\":11016:11023   */\n      dup5\n        /* \"#utility.yul\":11007:11013   */\n      dup3\n        /* \"#utility.yul\":10996:11005   */\n      dup6\n        /* \"#utility.yul\":10992:11014   */\n      add\n        /* \"#utility.yul\":10973:11024   */\n      tag_457\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":10963:11024   */\n      swap2\n      pop\n        /* \"#utility.yul\":10919:11034   */\n      pop\n        /* \"#utility.yul\":10716:11041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11047:11156   */\n    tag_458:\n        /* \"#utility.yul\":11128:11149   */\n      tag_599\n        /* \"#utility.yul\":11143:11148   */\n      dup2\n        /* \"#utility.yul\":11128:11149   */\n      tag_434\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":11123:11126   */\n      dup3\n        /* \"#utility.yul\":11116:11150   */\n      mstore\n        /* \"#utility.yul\":11047:11156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11162:11372   */\n    tag_70:\n        /* \"#utility.yul\":11249:11253   */\n      0x00\n        /* \"#utility.yul\":11287:11289   */\n      0x20\n        /* \"#utility.yul\":11276:11285   */\n      dup3\n        /* \"#utility.yul\":11272:11290   */\n      add\n        /* \"#utility.yul\":11264:11290   */\n      swap1\n      pop\n        /* \"#utility.yul\":11300:11365   */\n      tag_601\n        /* \"#utility.yul\":11362:11363   */\n      0x00\n        /* \"#utility.yul\":11351:11360   */\n      dup4\n        /* \"#utility.yul\":11347:11364   */\n      add\n        /* \"#utility.yul\":11338:11344   */\n      dup5\n        /* \"#utility.yul\":11300:11365   */\n      tag_458\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":11162:11372   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11378:11482   */\n    tag_459:\n        /* \"#utility.yul\":11423:11430   */\n      0x00\n        /* \"#utility.yul\":11452:11476   */\n      tag_603\n        /* \"#utility.yul\":11470:11475   */\n      dup3\n        /* \"#utility.yul\":11452:11476   */\n      tag_431\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":11441:11476   */\n      swap1\n      pop\n        /* \"#utility.yul\":11378:11482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11488:11626   */\n    tag_460:\n        /* \"#utility.yul\":11569:11601   */\n      tag_605\n        /* \"#utility.yul\":11595:11600   */\n      dup2\n        /* \"#utility.yul\":11569:11601   */\n      tag_459\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":11562:11567   */\n      dup2\n        /* \"#utility.yul\":11559:11602   */\n      eq\n        /* \"#utility.yul\":11549:11620   */\n      tag_606\n      jumpi\n        /* \"#utility.yul\":11616:11617   */\n      0x00\n        /* \"#utility.yul\":11613:11614   */\n      dup1\n        /* \"#utility.yul\":11606:11618   */\n      revert\n        /* \"#utility.yul\":11549:11620   */\n    tag_606:\n        /* \"#utility.yul\":11488:11626   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11632:11787   */\n    tag_461:\n        /* \"#utility.yul\":11686:11691   */\n      0x00\n        /* \"#utility.yul\":11724:11730   */\n      dup2\n        /* \"#utility.yul\":11711:11731   */\n      calldataload\n        /* \"#utility.yul\":11702:11731   */\n      swap1\n      pop\n        /* \"#utility.yul\":11740:11781   */\n      tag_608\n        /* \"#utility.yul\":11775:11780   */\n      dup2\n        /* \"#utility.yul\":11740:11781   */\n      tag_460\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":11632:11787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11793:11915   */\n    tag_462:\n        /* \"#utility.yul\":11866:11890   */\n      tag_610\n        /* \"#utility.yul\":11884:11889   */\n      dup2\n        /* \"#utility.yul\":11866:11890   */\n      tag_424\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":11859:11864   */\n      dup2\n        /* \"#utility.yul\":11856:11891   */\n      eq\n        /* \"#utility.yul\":11846:11909   */\n      tag_611\n      jumpi\n        /* \"#utility.yul\":11905:11906   */\n      0x00\n        /* \"#utility.yul\":11902:11903   */\n      dup1\n        /* \"#utility.yul\":11895:11907   */\n      revert\n        /* \"#utility.yul\":11846:11909   */\n    tag_611:\n        /* \"#utility.yul\":11793:11915   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11921:12060   */\n    tag_463:\n        /* \"#utility.yul\":11967:11972   */\n      0x00\n        /* \"#utility.yul\":12005:12011   */\n      dup2\n        /* \"#utility.yul\":11992:12012   */\n      calldataload\n        /* \"#utility.yul\":11983:12012   */\n      swap1\n      pop\n        /* \"#utility.yul\":12021:12054   */\n      tag_613\n        /* \"#utility.yul\":12048:12053   */\n      dup2\n        /* \"#utility.yul\":12021:12054   */\n      tag_462\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":11921:12060   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12066:12556   */\n    tag_74:\n        /* \"#utility.yul\":12142:12148   */\n      0x00\n        /* \"#utility.yul\":12150:12156   */\n      dup1\n        /* \"#utility.yul\":12199:12201   */\n      0x40\n        /* \"#utility.yul\":12187:12196   */\n      dup4\n        /* \"#utility.yul\":12178:12185   */\n      dup6\n        /* \"#utility.yul\":12174:12197   */\n      sub\n        /* \"#utility.yul\":12170:12202   */\n      slt\n        /* \"#utility.yul\":12167:12286   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":12205:12284   */\n      tag_616\n      tag_442\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":12167:12286   */\n    tag_615:\n        /* \"#utility.yul\":12325:12326   */\n      0x00\n        /* \"#utility.yul\":12350:12411   */\n      tag_617\n        /* \"#utility.yul\":12403:12410   */\n      dup6\n        /* \"#utility.yul\":12394:12400   */\n      dup3\n        /* \"#utility.yul\":12383:12392   */\n      dup7\n        /* \"#utility.yul\":12379:12401   */\n      add\n        /* \"#utility.yul\":12350:12411   */\n      tag_461\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":12340:12411   */\n      swap3\n      pop\n        /* \"#utility.yul\":12296:12421   */\n      pop\n        /* \"#utility.yul\":12460:12462   */\n      0x20\n        /* \"#utility.yul\":12486:12539   */\n      tag_618\n        /* \"#utility.yul\":12531:12538   */\n      dup6\n        /* \"#utility.yul\":12522:12528   */\n      dup3\n        /* \"#utility.yul\":12511:12520   */\n      dup7\n        /* \"#utility.yul\":12507:12529   */\n      add\n        /* \"#utility.yul\":12486:12539   */\n      tag_463\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":12476:12539   */\n      swap2\n      pop\n        /* \"#utility.yul\":12431:12549   */\n      pop\n        /* \"#utility.yul\":12066:12556   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12562:12705   */\n    tag_464:\n        /* \"#utility.yul\":12658:12664   */\n      0x00\n        /* \"#utility.yul\":12692:12697   */\n      dup2\n        /* \"#utility.yul\":12686:12698   */\n      mload\n        /* \"#utility.yul\":12676:12698   */\n      swap1\n      pop\n        /* \"#utility.yul\":12562:12705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12711:12924   */\n    tag_465:\n        /* \"#utility.yul\":12839:12850   */\n      0x00\n        /* \"#utility.yul\":12873:12879   */\n      dup3\n        /* \"#utility.yul\":12868:12871   */\n      dup3\n        /* \"#utility.yul\":12861:12880   */\n      mstore\n        /* \"#utility.yul\":12913:12917   */\n      0x20\n        /* \"#utility.yul\":12908:12911   */\n      dup3\n        /* \"#utility.yul\":12904:12918   */\n      add\n        /* \"#utility.yul\":12889:12918   */\n      swap1\n      pop\n        /* \"#utility.yul\":12711:12924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12930:13091   */\n    tag_466:\n        /* \"#utility.yul\":13026:13030   */\n      0x00\n        /* \"#utility.yul\":13049:13052   */\n      dup2\n        /* \"#utility.yul\":13041:13052   */\n      swap1\n      pop\n        /* \"#utility.yul\":13079:13083   */\n      0x20\n        /* \"#utility.yul\":13074:13077   */\n      dup3\n        /* \"#utility.yul\":13070:13084   */\n      add\n        /* \"#utility.yul\":13062:13084   */\n      swap1\n      pop\n        /* \"#utility.yul\":12930:13091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13175:13847   */\n    tag_467:\n        /* \"#utility.yul\":13320:13324   */\n      0x60\n        /* \"#utility.yul\":13315:13318   */\n      dup3\n        /* \"#utility.yul\":13311:13325   */\n      add\n        /* \"#utility.yul\":13407:13411   */\n      0x00\n        /* \"#utility.yul\":13400:13405   */\n      dup3\n        /* \"#utility.yul\":13396:13412   */\n      add\n        /* \"#utility.yul\":13390:13413   */\n      mload\n        /* \"#utility.yul\":13426:13489   */\n      tag_623\n        /* \"#utility.yul\":13483:13487   */\n      0x00\n        /* \"#utility.yul\":13478:13481   */\n      dup6\n        /* \"#utility.yul\":13474:13488   */\n      add\n        /* \"#utility.yul\":13460:13472   */\n      dup3\n        /* \"#utility.yul\":13426:13489   */\n      tag_433\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":13335:13499   */\n      pop\n        /* \"#utility.yul\":13582:13586   */\n      0x20\n        /* \"#utility.yul\":13575:13580   */\n      dup3\n        /* \"#utility.yul\":13571:13587   */\n      add\n        /* \"#utility.yul\":13565:13588   */\n      mload\n        /* \"#utility.yul\":13601:13658   */\n      tag_624\n        /* \"#utility.yul\":13652:13656   */\n      0x20\n        /* \"#utility.yul\":13647:13650   */\n      dup6\n        /* \"#utility.yul\":13643:13657   */\n      add\n        /* \"#utility.yul\":13629:13641   */\n      dup3\n        /* \"#utility.yul\":13601:13658   */\n      tag_435\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":13509:13668   */\n      pop\n        /* \"#utility.yul\":13748:13752   */\n      0x40\n        /* \"#utility.yul\":13741:13746   */\n      dup3\n        /* \"#utility.yul\":13737:13753   */\n      add\n        /* \"#utility.yul\":13731:13754   */\n      mload\n        /* \"#utility.yul\":13767:13830   */\n      tag_625\n        /* \"#utility.yul\":13824:13828   */\n      0x40\n        /* \"#utility.yul\":13819:13822   */\n      dup6\n        /* \"#utility.yul\":13815:13829   */\n      add\n        /* \"#utility.yul\":13801:13813   */\n      dup3\n        /* \"#utility.yul\":13767:13830   */\n      tag_436\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":13678:13840   */\n      pop\n        /* \"#utility.yul\":13289:13847   */\n      pop\n        /* \"#utility.yul\":13175:13847   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13853:14148   */\n    tag_468:\n        /* \"#utility.yul\":13980:13990   */\n      0x00\n        /* \"#utility.yul\":14001:14105   */\n      tag_627\n        /* \"#utility.yul\":14101:14104   */\n      dup4\n        /* \"#utility.yul\":14093:14099   */\n      dup4\n        /* \"#utility.yul\":14001:14105   */\n      tag_467\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":14137:14141   */\n      0x60\n        /* \"#utility.yul\":14132:14135   */\n      dup4\n        /* \"#utility.yul\":14128:14142   */\n      add\n        /* \"#utility.yul\":14114:14142   */\n      swap1\n      pop\n        /* \"#utility.yul\":13853:14148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14154:14296   */\n    tag_469:\n        /* \"#utility.yul\":14253:14257   */\n      0x00\n        /* \"#utility.yul\":14285:14289   */\n      0x20\n        /* \"#utility.yul\":14280:14283   */\n      dup3\n        /* \"#utility.yul\":14276:14290   */\n      add\n        /* \"#utility.yul\":14268:14290   */\n      swap1\n      pop\n        /* \"#utility.yul\":14154:14296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14384:15348   */\n    tag_470:\n        /* \"#utility.yul\":14561:14564   */\n      0x00\n        /* \"#utility.yul\":14590:14673   */\n      tag_630\n        /* \"#utility.yul\":14667:14672   */\n      dup3\n        /* \"#utility.yul\":14590:14673   */\n      tag_464\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":14689:14804   */\n      tag_631\n        /* \"#utility.yul\":14797:14803   */\n      dup2\n        /* \"#utility.yul\":14792:14795   */\n      dup6\n        /* \"#utility.yul\":14689:14804   */\n      tag_465\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":14682:14804   */\n      swap4\n      pop\n        /* \"#utility.yul\":14828:14913   */\n      tag_632\n        /* \"#utility.yul\":14907:14912   */\n      dup4\n        /* \"#utility.yul\":14828:14913   */\n      tag_466\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":14936:14943   */\n      dup1\n        /* \"#utility.yul\":14967:14968   */\n      0x00\n        /* \"#utility.yul\":14952:15323   */\n    tag_633:\n        /* \"#utility.yul\":14977:14983   */\n      dup4\n        /* \"#utility.yul\":14974:14975   */\n      dup2\n        /* \"#utility.yul\":14971:14984   */\n      lt\n        /* \"#utility.yul\":14952:15323   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":15053:15059   */\n      dup2\n        /* \"#utility.yul\":15047:15060   */\n      mload\n        /* \"#utility.yul\":15080:15201   */\n      tag_636\n        /* \"#utility.yul\":15197:15200   */\n      dup9\n        /* \"#utility.yul\":15182:15195   */\n      dup3\n        /* \"#utility.yul\":15080:15201   */\n      tag_468\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":15073:15201   */\n      swap8\n      pop\n        /* \"#utility.yul\":15224:15313   */\n      tag_637\n        /* \"#utility.yul\":15306:15312   */\n      dup4\n        /* \"#utility.yul\":15224:15313   */\n      tag_469\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":15214:15313   */\n      swap3\n      pop\n        /* \"#utility.yul\":15012:15323   */\n      pop\n        /* \"#utility.yul\":14999:15000   */\n      0x01\n        /* \"#utility.yul\":14996:14997   */\n      dup2\n        /* \"#utility.yul\":14992:15001   */\n      add\n        /* \"#utility.yul\":14987:15001   */\n      swap1\n      pop\n        /* \"#utility.yul\":14952:15323   */\n      jump(tag_633)\n    tag_635:\n        /* \"#utility.yul\":14956:14970   */\n      pop\n        /* \"#utility.yul\":15339:15342   */\n      dup6\n        /* \"#utility.yul\":15332:15342   */\n      swap4\n      pop\n        /* \"#utility.yul\":14566:15348   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14384:15348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15354:15843   */\n    tag_81:\n        /* \"#utility.yul\":15555:15559   */\n      0x00\n        /* \"#utility.yul\":15593:15595   */\n      0x20\n        /* \"#utility.yul\":15582:15591   */\n      dup3\n        /* \"#utility.yul\":15578:15596   */\n      add\n        /* \"#utility.yul\":15570:15596   */\n      swap1\n      pop\n        /* \"#utility.yul\":15642:15651   */\n      dup2\n        /* \"#utility.yul\":15636:15640   */\n      dup2\n        /* \"#utility.yul\":15632:15652   */\n      sub\n        /* \"#utility.yul\":15628:15629   */\n      0x00\n        /* \"#utility.yul\":15617:15626   */\n      dup4\n        /* \"#utility.yul\":15613:15630   */\n      add\n        /* \"#utility.yul\":15606:15653   */\n      mstore\n        /* \"#utility.yul\":15670:15836   */\n      tag_639\n        /* \"#utility.yul\":15831:15835   */\n      dup2\n        /* \"#utility.yul\":15822:15828   */\n      dup5\n        /* \"#utility.yul\":15670:15836   */\n      tag_470\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":15662:15836   */\n      swap1\n      pop\n        /* \"#utility.yul\":15354:15843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15849:15967   */\n    tag_471:\n        /* \"#utility.yul\":15936:15960   */\n      tag_641\n        /* \"#utility.yul\":15954:15959   */\n      dup2\n        /* \"#utility.yul\":15936:15960   */\n      tag_432\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":15931:15934   */\n      dup3\n        /* \"#utility.yul\":15924:15961   */\n      mstore\n        /* \"#utility.yul\":15849:15967   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15973:16091   */\n    tag_472:\n        /* \"#utility.yul\":16060:16084   */\n      tag_643\n        /* \"#utility.yul\":16078:16083   */\n      dup2\n        /* \"#utility.yul\":16060:16084   */\n      tag_429\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":16055:16058   */\n      dup3\n        /* \"#utility.yul\":16048:16085   */\n      mstore\n        /* \"#utility.yul\":15973:16091   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16097:16872   */\n    tag_94:\n        /* \"#utility.yul\":16330:16334   */\n      0x00\n        /* \"#utility.yul\":16368:16371   */\n      0xc0\n        /* \"#utility.yul\":16357:16366   */\n      dup3\n        /* \"#utility.yul\":16353:16372   */\n      add\n        /* \"#utility.yul\":16345:16372   */\n      swap1\n      pop\n        /* \"#utility.yul\":16382:16453   */\n      tag_645\n        /* \"#utility.yul\":16450:16451   */\n      0x00\n        /* \"#utility.yul\":16439:16448   */\n      dup4\n        /* \"#utility.yul\":16435:16452   */\n      add\n        /* \"#utility.yul\":16426:16432   */\n      dup10\n        /* \"#utility.yul\":16382:16453   */\n      tag_471\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":16463:16535   */\n      tag_646\n        /* \"#utility.yul\":16531:16533   */\n      0x20\n        /* \"#utility.yul\":16520:16529   */\n      dup4\n        /* \"#utility.yul\":16516:16534   */\n      add\n        /* \"#utility.yul\":16507:16513   */\n      dup9\n        /* \"#utility.yul\":16463:16535   */\n      tag_472\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":16545:16617   */\n      tag_647\n        /* \"#utility.yul\":16613:16615   */\n      0x40\n        /* \"#utility.yul\":16602:16611   */\n      dup4\n        /* \"#utility.yul\":16598:16616   */\n      add\n        /* \"#utility.yul\":16589:16595   */\n      dup8\n        /* \"#utility.yul\":16545:16617   */\n      tag_472\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":16627:16699   */\n      tag_648\n        /* \"#utility.yul\":16695:16697   */\n      0x60\n        /* \"#utility.yul\":16684:16693   */\n      dup4\n        /* \"#utility.yul\":16680:16698   */\n      add\n        /* \"#utility.yul\":16671:16677   */\n      dup7\n        /* \"#utility.yul\":16627:16699   */\n      tag_425\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":16709:16782   */\n      tag_649\n        /* \"#utility.yul\":16777:16780   */\n      0x80\n        /* \"#utility.yul\":16766:16775   */\n      dup4\n        /* \"#utility.yul\":16762:16781   */\n      add\n        /* \"#utility.yul\":16753:16759   */\n      dup6\n        /* \"#utility.yul\":16709:16782   */\n      tag_471\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":16792:16865   */\n      tag_650\n        /* \"#utility.yul\":16860:16863   */\n      0xa0\n        /* \"#utility.yul\":16849:16858   */\n      dup4\n        /* \"#utility.yul\":16845:16864   */\n      add\n        /* \"#utility.yul\":16836:16842   */\n      dup5\n        /* \"#utility.yul\":16792:16865   */\n      tag_425\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":16097:16872   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16878:17100   */\n    tag_102:\n        /* \"#utility.yul\":16971:16975   */\n      0x00\n        /* \"#utility.yul\":17009:17011   */\n      0x20\n        /* \"#utility.yul\":16998:17007   */\n      dup3\n        /* \"#utility.yul\":16994:17012   */\n      add\n        /* \"#utility.yul\":16986:17012   */\n      swap1\n      pop\n        /* \"#utility.yul\":17022:17093   */\n      tag_652\n        /* \"#utility.yul\":17090:17091   */\n      0x00\n        /* \"#utility.yul\":17079:17088   */\n      dup4\n        /* \"#utility.yul\":17075:17092   */\n      add\n        /* \"#utility.yul\":17066:17072   */\n      dup5\n        /* \"#utility.yul\":17022:17093   */\n      tag_471\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":16878:17100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17106:17222   */\n    tag_473:\n        /* \"#utility.yul\":17176:17197   */\n      tag_654\n        /* \"#utility.yul\":17191:17196   */\n      dup2\n        /* \"#utility.yul\":17176:17197   */\n      tag_434\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":17169:17174   */\n      dup2\n        /* \"#utility.yul\":17166:17198   */\n      eq\n        /* \"#utility.yul\":17156:17216   */\n      tag_655\n      jumpi\n        /* \"#utility.yul\":17212:17213   */\n      0x00\n        /* \"#utility.yul\":17209:17210   */\n      dup1\n        /* \"#utility.yul\":17202:17214   */\n      revert\n        /* \"#utility.yul\":17156:17216   */\n    tag_655:\n        /* \"#utility.yul\":17106:17222   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17228:17361   */\n    tag_474:\n        /* \"#utility.yul\":17271:17276   */\n      0x00\n        /* \"#utility.yul\":17309:17315   */\n      dup2\n        /* \"#utility.yul\":17296:17316   */\n      calldataload\n        /* \"#utility.yul\":17287:17316   */\n      swap1\n      pop\n        /* \"#utility.yul\":17325:17355   */\n      tag_657\n        /* \"#utility.yul\":17349:17354   */\n      dup2\n        /* \"#utility.yul\":17325:17355   */\n      tag_473\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":17228:17361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17367:17980   */\n    tag_110:\n        /* \"#utility.yul\":17441:17447   */\n      0x00\n        /* \"#utility.yul\":17449:17455   */\n      dup1\n        /* \"#utility.yul\":17457:17463   */\n      0x00\n        /* \"#utility.yul\":17506:17508   */\n      0x60\n        /* \"#utility.yul\":17494:17503   */\n      dup5\n        /* \"#utility.yul\":17485:17492   */\n      dup7\n        /* \"#utility.yul\":17481:17504   */\n      sub\n        /* \"#utility.yul\":17477:17509   */\n      slt\n        /* \"#utility.yul\":17474:17593   */\n      iszero\n      tag_659\n      jumpi\n        /* \"#utility.yul\":17512:17591   */\n      tag_660\n      tag_442\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":17474:17593   */\n    tag_659:\n        /* \"#utility.yul\":17632:17633   */\n      0x00\n        /* \"#utility.yul\":17657:17710   */\n      tag_661\n        /* \"#utility.yul\":17702:17709   */\n      dup7\n        /* \"#utility.yul\":17693:17699   */\n      dup3\n        /* \"#utility.yul\":17682:17691   */\n      dup8\n        /* \"#utility.yul\":17678:17700   */\n      add\n        /* \"#utility.yul\":17657:17710   */\n      tag_445\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":17647:17710   */\n      swap4\n      pop\n        /* \"#utility.yul\":17603:17720   */\n      pop\n        /* \"#utility.yul\":17759:17761   */\n      0x20\n        /* \"#utility.yul\":17785:17838   */\n      tag_662\n        /* \"#utility.yul\":17830:17837   */\n      dup7\n        /* \"#utility.yul\":17821:17827   */\n      dup3\n        /* \"#utility.yul\":17810:17819   */\n      dup8\n        /* \"#utility.yul\":17806:17828   */\n      add\n        /* \"#utility.yul\":17785:17838   */\n      tag_454\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":17775:17838   */\n      swap3\n      pop\n        /* \"#utility.yul\":17730:17848   */\n      pop\n        /* \"#utility.yul\":17887:17889   */\n      0x40\n        /* \"#utility.yul\":17913:17963   */\n      tag_663\n        /* \"#utility.yul\":17955:17962   */\n      dup7\n        /* \"#utility.yul\":17946:17952   */\n      dup3\n        /* \"#utility.yul\":17935:17944   */\n      dup8\n        /* \"#utility.yul\":17931:17953   */\n      add\n        /* \"#utility.yul\":17913:17963   */\n      tag_474\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":17903:17963   */\n      swap2\n      pop\n        /* \"#utility.yul\":17858:17973   */\n      pop\n        /* \"#utility.yul\":17367:17980   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":17986:18460   */\n    tag_116:\n        /* \"#utility.yul\":18054:18060   */\n      0x00\n        /* \"#utility.yul\":18062:18068   */\n      dup1\n        /* \"#utility.yul\":18111:18113   */\n      0x40\n        /* \"#utility.yul\":18099:18108   */\n      dup4\n        /* \"#utility.yul\":18090:18097   */\n      dup6\n        /* \"#utility.yul\":18086:18109   */\n      sub\n        /* \"#utility.yul\":18082:18114   */\n      slt\n        /* \"#utility.yul\":18079:18198   */\n      iszero\n      tag_665\n      jumpi\n        /* \"#utility.yul\":18117:18196   */\n      tag_666\n      tag_442\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":18079:18198   */\n    tag_665:\n        /* \"#utility.yul\":18237:18238   */\n      0x00\n        /* \"#utility.yul\":18262:18315   */\n      tag_667\n        /* \"#utility.yul\":18307:18314   */\n      dup6\n        /* \"#utility.yul\":18298:18304   */\n      dup3\n        /* \"#utility.yul\":18287:18296   */\n      dup7\n        /* \"#utility.yul\":18283:18305   */\n      add\n        /* \"#utility.yul\":18262:18315   */\n      tag_463\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":18252:18315   */\n      swap3\n      pop\n        /* \"#utility.yul\":18208:18325   */\n      pop\n        /* \"#utility.yul\":18364:18366   */\n      0x20\n        /* \"#utility.yul\":18390:18443   */\n      tag_668\n        /* \"#utility.yul\":18435:18442   */\n      dup6\n        /* \"#utility.yul\":18426:18432   */\n      dup3\n        /* \"#utility.yul\":18415:18424   */\n      dup7\n        /* \"#utility.yul\":18411:18433   */\n      add\n        /* \"#utility.yul\":18390:18443   */\n      tag_463\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":18380:18443   */\n      swap2\n      pop\n        /* \"#utility.yul\":18335:18453   */\n      pop\n        /* \"#utility.yul\":17986:18460   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18466:18583   */\n    tag_475:\n        /* \"#utility.yul\":18575:18576   */\n      0x00\n        /* \"#utility.yul\":18572:18573   */\n      dup1\n        /* \"#utility.yul\":18565:18577   */\n      revert\n        /* \"#utility.yul\":18589:18706   */\n    tag_476:\n        /* \"#utility.yul\":18698:18699   */\n      0x00\n        /* \"#utility.yul\":18695:18696   */\n      dup1\n        /* \"#utility.yul\":18688:18700   */\n      revert\n        /* \"#utility.yul\":18712:18814   */\n    tag_477:\n        /* \"#utility.yul\":18753:18759   */\n      0x00\n        /* \"#utility.yul\":18804:18806   */\n      0x1f\n        /* \"#utility.yul\":18800:18807   */\n      not\n        /* \"#utility.yul\":18795:18797   */\n      0x1f\n        /* \"#utility.yul\":18788:18793   */\n      dup4\n        /* \"#utility.yul\":18784:18798   */\n      add\n        /* \"#utility.yul\":18780:18808   */\n      and\n        /* \"#utility.yul\":18770:18808   */\n      swap1\n      pop\n        /* \"#utility.yul\":18712:18814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18820:19000   */\n    tag_160:\n        /* \"#utility.yul\":18868:18945   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18865:18866   */\n      0x00\n        /* \"#utility.yul\":18858:18946   */\n      mstore\n        /* \"#utility.yul\":18965:18969   */\n      0x41\n        /* \"#utility.yul\":18962:18963   */\n      0x04\n        /* \"#utility.yul\":18955:18970   */\n      mstore\n        /* \"#utility.yul\":18989:18993   */\n      0x24\n        /* \"#utility.yul\":18986:18987   */\n      0x00\n        /* \"#utility.yul\":18979:18994   */\n      revert\n        /* \"#utility.yul\":19006:19287   */\n    tag_478:\n        /* \"#utility.yul\":19089:19116   */\n      tag_674\n        /* \"#utility.yul\":19111:19115   */\n      dup3\n        /* \"#utility.yul\":19089:19116   */\n      tag_477\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":19081:19087   */\n      dup2\n        /* \"#utility.yul\":19077:19117   */\n      add\n        /* \"#utility.yul\":19219:19225   */\n      dup2\n        /* \"#utility.yul\":19207:19217   */\n      dup2\n        /* \"#utility.yul\":19204:19226   */\n      lt\n        /* \"#utility.yul\":19183:19201   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19171:19181   */\n      dup3\n        /* \"#utility.yul\":19168:19202   */\n      gt\n        /* \"#utility.yul\":19165:19227   */\n      or\n        /* \"#utility.yul\":19162:19250   */\n      iszero\n      tag_675\n      jumpi\n        /* \"#utility.yul\":19230:19248   */\n      tag_676\n      tag_160\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":19162:19250   */\n    tag_675:\n        /* \"#utility.yul\":19270:19280   */\n      dup1\n        /* \"#utility.yul\":19266:19268   */\n      0x40\n        /* \"#utility.yul\":19259:19281   */\n      mstore\n        /* \"#utility.yul\":19049:19287   */\n      pop\n        /* \"#utility.yul\":19006:19287   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19293:19422   */\n    tag_479:\n        /* \"#utility.yul\":19327:19333   */\n      0x00\n        /* \"#utility.yul\":19354:19374   */\n      tag_678\n      tag_441\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":19344:19374   */\n      swap1\n      pop\n        /* \"#utility.yul\":19383:19416   */\n      tag_679\n        /* \"#utility.yul\":19411:19415   */\n      dup3\n        /* \"#utility.yul\":19403:19409   */\n      dup3\n        /* \"#utility.yul\":19383:19416   */\n      tag_478\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":19293:19422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19428:19735   */\n    tag_480:\n        /* \"#utility.yul\":19489:19493   */\n      0x00\n        /* \"#utility.yul\":19579:19597   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19571:19577   */\n      dup3\n        /* \"#utility.yul\":19568:19598   */\n      gt\n        /* \"#utility.yul\":19565:19621   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":19601:19619   */\n      tag_682\n      tag_160\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":19565:19621   */\n    tag_681:\n        /* \"#utility.yul\":19639:19668   */\n      tag_683\n        /* \"#utility.yul\":19661:19667   */\n      dup3\n        /* \"#utility.yul\":19639:19668   */\n      tag_477\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":19631:19668   */\n      swap1\n      pop\n        /* \"#utility.yul\":19723:19727   */\n      0x20\n        /* \"#utility.yul\":19717:19721   */\n      dup2\n        /* \"#utility.yul\":19713:19728   */\n      add\n        /* \"#utility.yul\":19705:19728   */\n      swap1\n      pop\n        /* \"#utility.yul\":19428:19735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19741:19887   */\n    tag_481:\n        /* \"#utility.yul\":19838:19844   */\n      dup3\n        /* \"#utility.yul\":19833:19836   */\n      dup2\n        /* \"#utility.yul\":19828:19831   */\n      dup4\n        /* \"#utility.yul\":19815:19845   */\n      calldatacopy\n        /* \"#utility.yul\":19879:19880   */\n      0x00\n        /* \"#utility.yul\":19870:19876   */\n      dup4\n        /* \"#utility.yul\":19865:19868   */\n      dup4\n        /* \"#utility.yul\":19861:19877   */\n      add\n        /* \"#utility.yul\":19854:19881   */\n      mstore\n        /* \"#utility.yul\":19741:19887   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19893:20316   */\n    tag_482:\n        /* \"#utility.yul\":19970:19975   */\n      0x00\n        /* \"#utility.yul\":19995:20060   */\n      tag_686\n        /* \"#utility.yul\":20011:20059   */\n      tag_687\n        /* \"#utility.yul\":20052:20058   */\n      dup5\n        /* \"#utility.yul\":20011:20059   */\n      tag_480\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":19995:20060   */\n      tag_479\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":19986:20060   */\n      swap1\n      pop\n        /* \"#utility.yul\":20083:20089   */\n      dup3\n        /* \"#utility.yul\":20076:20081   */\n      dup2\n        /* \"#utility.yul\":20069:20090   */\n      mstore\n        /* \"#utility.yul\":20121:20125   */\n      0x20\n        /* \"#utility.yul\":20114:20119   */\n      dup2\n        /* \"#utility.yul\":20110:20126   */\n      add\n        /* \"#utility.yul\":20159:20162   */\n      dup5\n        /* \"#utility.yul\":20150:20156   */\n      dup5\n        /* \"#utility.yul\":20145:20148   */\n      dup5\n        /* \"#utility.yul\":20141:20157   */\n      add\n        /* \"#utility.yul\":20138:20163   */\n      gt\n        /* \"#utility.yul\":20135:20247   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":20166:20245   */\n      tag_689\n      tag_476\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":20135:20247   */\n    tag_688:\n        /* \"#utility.yul\":20256:20310   */\n      tag_690\n        /* \"#utility.yul\":20303:20309   */\n      dup5\n        /* \"#utility.yul\":20298:20301   */\n      dup3\n        /* \"#utility.yul\":20293:20296   */\n      dup6\n        /* \"#utility.yul\":20256:20310   */\n      tag_481\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":19976:20316   */\n      pop\n        /* \"#utility.yul\":19893:20316   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20335:20673   */\n    tag_483:\n        /* \"#utility.yul\":20390:20395   */\n      0x00\n        /* \"#utility.yul\":20439:20442   */\n      dup3\n        /* \"#utility.yul\":20432:20436   */\n      0x1f\n        /* \"#utility.yul\":20424:20430   */\n      dup4\n        /* \"#utility.yul\":20420:20437   */\n      add\n        /* \"#utility.yul\":20416:20443   */\n      slt\n        /* \"#utility.yul\":20406:20528   */\n      tag_692\n      jumpi\n        /* \"#utility.yul\":20447:20526   */\n      tag_693\n      tag_475\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":20406:20528   */\n    tag_692:\n        /* \"#utility.yul\":20564:20570   */\n      dup2\n        /* \"#utility.yul\":20551:20571   */\n      calldataload\n        /* \"#utility.yul\":20589:20667   */\n      tag_694\n        /* \"#utility.yul\":20663:20666   */\n      dup5\n        /* \"#utility.yul\":20655:20661   */\n      dup3\n        /* \"#utility.yul\":20648:20652   */\n      0x20\n        /* \"#utility.yul\":20640:20646   */\n      dup7\n        /* \"#utility.yul\":20636:20653   */\n      add\n        /* \"#utility.yul\":20589:20667   */\n      tag_482\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":20580:20667   */\n      swap2\n      pop\n        /* \"#utility.yul\":20396:20673   */\n      pop\n        /* \"#utility.yul\":20335:20673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20679:21908   */\n    tag_121:\n        /* \"#utility.yul\":20789:20795   */\n      0x00\n        /* \"#utility.yul\":20797:20803   */\n      dup1\n        /* \"#utility.yul\":20805:20811   */\n      0x00\n        /* \"#utility.yul\":20813:20819   */\n      dup1\n        /* \"#utility.yul\":20821:20827   */\n      0x00\n        /* \"#utility.yul\":20829:20835   */\n      dup1\n        /* \"#utility.yul\":20878:20881   */\n      0xc0\n        /* \"#utility.yul\":20866:20875   */\n      dup8\n        /* \"#utility.yul\":20857:20864   */\n      dup10\n        /* \"#utility.yul\":20853:20876   */\n      sub\n        /* \"#utility.yul\":20849:20882   */\n      slt\n        /* \"#utility.yul\":20846:20966   */\n      iszero\n      tag_696\n      jumpi\n        /* \"#utility.yul\":20885:20964   */\n      tag_697\n      tag_442\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":20846:20966   */\n    tag_696:\n        /* \"#utility.yul\":21005:21006   */\n      0x00\n        /* \"#utility.yul\":21030:21083   */\n      tag_698\n        /* \"#utility.yul\":21075:21082   */\n      dup10\n        /* \"#utility.yul\":21066:21072   */\n      dup3\n        /* \"#utility.yul\":21055:21064   */\n      dup11\n        /* \"#utility.yul\":21051:21073   */\n      add\n        /* \"#utility.yul\":21030:21083   */\n      tag_445\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":21020:21083   */\n      swap7\n      pop\n        /* \"#utility.yul\":20976:21093   */\n      pop\n        /* \"#utility.yul\":21132:21134   */\n      0x20\n        /* \"#utility.yul\":21158:21211   */\n      tag_699\n        /* \"#utility.yul\":21203:21210   */\n      dup10\n        /* \"#utility.yul\":21194:21200   */\n      dup3\n        /* \"#utility.yul\":21183:21192   */\n      dup11\n        /* \"#utility.yul\":21179:21201   */\n      add\n        /* \"#utility.yul\":21158:21211   */\n      tag_454\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":21148:21211   */\n      swap6\n      pop\n        /* \"#utility.yul\":21103:21221   */\n      pop\n        /* \"#utility.yul\":21260:21262   */\n      0x40\n        /* \"#utility.yul\":21286:21339   */\n      tag_700\n        /* \"#utility.yul\":21331:21338   */\n      dup10\n        /* \"#utility.yul\":21322:21328   */\n      dup3\n        /* \"#utility.yul\":21311:21320   */\n      dup11\n        /* \"#utility.yul\":21307:21329   */\n      add\n        /* \"#utility.yul\":21286:21339   */\n      tag_463\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":21276:21339   */\n      swap5\n      pop\n        /* \"#utility.yul\":21231:21349   */\n      pop\n        /* \"#utility.yul\":21388:21390   */\n      0x60\n        /* \"#utility.yul\":21414:21464   */\n      tag_701\n        /* \"#utility.yul\":21456:21463   */\n      dup10\n        /* \"#utility.yul\":21447:21453   */\n      dup3\n        /* \"#utility.yul\":21436:21445   */\n      dup11\n        /* \"#utility.yul\":21432:21454   */\n      add\n        /* \"#utility.yul\":21414:21464   */\n      tag_474\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":21404:21464   */\n      swap4\n      pop\n        /* \"#utility.yul\":21359:21474   */\n      pop\n        /* \"#utility.yul\":21541:21544   */\n      0x80\n        /* \"#utility.yul\":21530:21539   */\n      dup8\n        /* \"#utility.yul\":21526:21545   */\n      add\n        /* \"#utility.yul\":21513:21546   */\n      calldataload\n        /* \"#utility.yul\":21573:21591   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":21565:21571   */\n      dup2\n        /* \"#utility.yul\":21562:21592   */\n      gt\n        /* \"#utility.yul\":21559:21676   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":21595:21674   */\n      tag_703\n      tag_443\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":21559:21676   */\n    tag_702:\n        /* \"#utility.yul\":21700:21762   */\n      tag_704\n        /* \"#utility.yul\":21754:21761   */\n      dup10\n        /* \"#utility.yul\":21745:21751   */\n      dup3\n        /* \"#utility.yul\":21734:21743   */\n      dup11\n        /* \"#utility.yul\":21730:21752   */\n      add\n        /* \"#utility.yul\":21700:21762   */\n      tag_483\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":21690:21762   */\n      swap3\n      pop\n        /* \"#utility.yul\":21484:21772   */\n      pop\n        /* \"#utility.yul\":21811:21814   */\n      0xa0\n        /* \"#utility.yul\":21838:21891   */\n      tag_705\n        /* \"#utility.yul\":21883:21890   */\n      dup10\n        /* \"#utility.yul\":21874:21880   */\n      dup3\n        /* \"#utility.yul\":21863:21872   */\n      dup11\n        /* \"#utility.yul\":21859:21881   */\n      add\n        /* \"#utility.yul\":21838:21891   */\n      tag_445\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":21828:21891   */\n      swap2\n      pop\n        /* \"#utility.yul\":21782:21901   */\n      pop\n        /* \"#utility.yul\":20679:21908   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":21914:22136   */\n    tag_134:\n        /* \"#utility.yul\":22007:22011   */\n      0x00\n        /* \"#utility.yul\":22045:22047   */\n      0x20\n        /* \"#utility.yul\":22034:22043   */\n      dup3\n        /* \"#utility.yul\":22030:22048   */\n      add\n        /* \"#utility.yul\":22022:22048   */\n      swap1\n      pop\n        /* \"#utility.yul\":22058:22129   */\n      tag_707\n        /* \"#utility.yul\":22126:22127   */\n      0x00\n        /* \"#utility.yul\":22115:22124   */\n      dup4\n        /* \"#utility.yul\":22111:22128   */\n      add\n        /* \"#utility.yul\":22102:22108   */\n      dup5\n        /* \"#utility.yul\":22058:22129   */\n      tag_472\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":21914:22136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22142:22572   */\n    tag_140:\n        /* \"#utility.yul\":22285:22289   */\n      0x00\n        /* \"#utility.yul\":22323:22325   */\n      0x60\n        /* \"#utility.yul\":22312:22321   */\n      dup3\n        /* \"#utility.yul\":22308:22326   */\n      add\n        /* \"#utility.yul\":22300:22326   */\n      swap1\n      pop\n        /* \"#utility.yul\":22336:22407   */\n      tag_709\n        /* \"#utility.yul\":22404:22405   */\n      0x00\n        /* \"#utility.yul\":22393:22402   */\n      dup4\n        /* \"#utility.yul\":22389:22406   */\n      add\n        /* \"#utility.yul\":22380:22386   */\n      dup7\n        /* \"#utility.yul\":22336:22407   */\n      tag_471\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":22417:22483   */\n      tag_710\n        /* \"#utility.yul\":22479:22481   */\n      0x20\n        /* \"#utility.yul\":22468:22477   */\n      dup4\n        /* \"#utility.yul\":22464:22482   */\n      add\n        /* \"#utility.yul\":22455:22461   */\n      dup6\n        /* \"#utility.yul\":22417:22483   */\n      tag_458\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":22493:22565   */\n      tag_711\n        /* \"#utility.yul\":22561:22563   */\n      0x40\n        /* \"#utility.yul\":22550:22559   */\n      dup4\n        /* \"#utility.yul\":22546:22564   */\n      add\n        /* \"#utility.yul\":22537:22543   */\n      dup5\n        /* \"#utility.yul\":22493:22565   */\n      tag_425\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":22142:22572   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22578:22758   */\n    tag_484:\n        /* \"#utility.yul\":22626:22703   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22623:22624   */\n      0x00\n        /* \"#utility.yul\":22616:22704   */\n      mstore\n        /* \"#utility.yul\":22723:22727   */\n      0x11\n        /* \"#utility.yul\":22720:22721   */\n      0x04\n        /* \"#utility.yul\":22713:22728   */\n      mstore\n        /* \"#utility.yul\":22747:22751   */\n      0x24\n        /* \"#utility.yul\":22744:22745   */\n      0x00\n        /* \"#utility.yul\":22737:22752   */\n      revert\n        /* \"#utility.yul\":22764:22955   */\n    tag_170:\n        /* \"#utility.yul\":22804:22807   */\n      0x00\n        /* \"#utility.yul\":22823:22843   */\n      tag_714\n        /* \"#utility.yul\":22841:22842   */\n      dup3\n        /* \"#utility.yul\":22823:22843   */\n      tag_424\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":22818:22843   */\n      swap2\n      pop\n        /* \"#utility.yul\":22857:22877   */\n      tag_715\n        /* \"#utility.yul\":22875:22876   */\n      dup4\n        /* \"#utility.yul\":22857:22877   */\n      tag_424\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":22852:22877   */\n      swap3\n      pop\n        /* \"#utility.yul\":22900:22901   */\n      dup3\n        /* \"#utility.yul\":22897:22898   */\n      dup3\n        /* \"#utility.yul\":22893:22902   */\n      add\n        /* \"#utility.yul\":22886:22902   */\n      swap1\n      pop\n        /* \"#utility.yul\":22921:22924   */\n      dup1\n        /* \"#utility.yul\":22918:22919   */\n      dup3\n        /* \"#utility.yul\":22915:22925   */\n      gt\n        /* \"#utility.yul\":22912:22948   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":22928:22946   */\n      tag_717\n      tag_484\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":22912:22948   */\n    tag_716:\n        /* \"#utility.yul\":22764:22955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22961:23141   */\n    tag_176:\n        /* \"#utility.yul\":23009:23086   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23006:23007   */\n      0x00\n        /* \"#utility.yul\":22999:23087   */\n      mstore\n        /* \"#utility.yul\":23106:23110   */\n      0x32\n        /* \"#utility.yul\":23103:23104   */\n      0x04\n        /* \"#utility.yul\":23096:23111   */\n      mstore\n        /* \"#utility.yul\":23130:23134   */\n      0x24\n        /* \"#utility.yul\":23127:23128   */\n      0x00\n        /* \"#utility.yul\":23120:23135   */\n      revert\n        /* \"#utility.yul\":23147:23294   */\n    tag_485:\n        /* \"#utility.yul\":23248:23259   */\n      0x00\n        /* \"#utility.yul\":23285:23288   */\n      dup2\n        /* \"#utility.yul\":23270:23288   */\n      swap1\n      pop\n        /* \"#utility.yul\":23147:23294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23300:23414   */\n    tag_486:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23420:23818   */\n    tag_487:\n        /* \"#utility.yul\":23579:23582   */\n      0x00\n        /* \"#utility.yul\":23600:23683   */\n      tag_722\n        /* \"#utility.yul\":23681:23682   */\n      0x00\n        /* \"#utility.yul\":23676:23679   */\n      dup4\n        /* \"#utility.yul\":23600:23683   */\n      tag_485\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":23593:23683   */\n      swap2\n      pop\n        /* \"#utility.yul\":23692:23785   */\n      tag_723\n        /* \"#utility.yul\":23781:23784   */\n      dup3\n        /* \"#utility.yul\":23692:23785   */\n      tag_486\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":23810:23811   */\n      0x00\n        /* \"#utility.yul\":23805:23808   */\n      dup3\n        /* \"#utility.yul\":23801:23812   */\n      add\n        /* \"#utility.yul\":23794:23812   */\n      swap1\n      pop\n        /* \"#utility.yul\":23420:23818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23824:24203   */\n    tag_183:\n        /* \"#utility.yul\":24008:24011   */\n      0x00\n        /* \"#utility.yul\":24030:24177   */\n      tag_725\n        /* \"#utility.yul\":24173:24176   */\n      dup3\n        /* \"#utility.yul\":24030:24177   */\n      tag_487\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":24023:24177   */\n      swap2\n      pop\n        /* \"#utility.yul\":24194:24197   */\n      dup2\n        /* \"#utility.yul\":24187:24197   */\n      swap1\n      pop\n        /* \"#utility.yul\":23824:24203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24209:24378   */\n    tag_488:\n        /* \"#utility.yul\":24293:24304   */\n      0x00\n        /* \"#utility.yul\":24327:24333   */\n      dup3\n        /* \"#utility.yul\":24322:24325   */\n      dup3\n        /* \"#utility.yul\":24315:24334   */\n      mstore\n        /* \"#utility.yul\":24367:24371   */\n      0x20\n        /* \"#utility.yul\":24362:24365   */\n      dup3\n        /* \"#utility.yul\":24358:24372   */\n      add\n        /* \"#utility.yul\":24343:24372   */\n      swap1\n      pop\n        /* \"#utility.yul\":24209:24378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24384:24540   */\n    tag_489:\n        /* \"#utility.yul\":24524:24532   */\n      0x4661696c65640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24520:24521   */\n      0x00\n        /* \"#utility.yul\":24512:24518   */\n      dup3\n        /* \"#utility.yul\":24508:24522   */\n      add\n        /* \"#utility.yul\":24501:24533   */\n      mstore\n        /* \"#utility.yul\":24384:24540   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24546:24911   */\n    tag_490:\n        /* \"#utility.yul\":24688:24691   */\n      0x00\n        /* \"#utility.yul\":24709:24775   */\n      tag_729\n        /* \"#utility.yul\":24773:24774   */\n      0x06\n        /* \"#utility.yul\":24768:24771   */\n      dup4\n        /* \"#utility.yul\":24709:24775   */\n      tag_488\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":24702:24775   */\n      swap2\n      pop\n        /* \"#utility.yul\":24784:24877   */\n      tag_730\n        /* \"#utility.yul\":24873:24876   */\n      dup3\n        /* \"#utility.yul\":24784:24877   */\n      tag_489\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":24902:24904   */\n      0x20\n        /* \"#utility.yul\":24897:24900   */\n      dup3\n        /* \"#utility.yul\":24893:24905   */\n      add\n        /* \"#utility.yul\":24886:24905   */\n      swap1\n      pop\n        /* \"#utility.yul\":24546:24911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24917:25336   */\n    tag_189:\n        /* \"#utility.yul\":25083:25087   */\n      0x00\n        /* \"#utility.yul\":25121:25123   */\n      0x20\n        /* \"#utility.yul\":25110:25119   */\n      dup3\n        /* \"#utility.yul\":25106:25124   */\n      add\n        /* \"#utility.yul\":25098:25124   */\n      swap1\n      pop\n        /* \"#utility.yul\":25170:25179   */\n      dup2\n        /* \"#utility.yul\":25164:25168   */\n      dup2\n        /* \"#utility.yul\":25160:25180   */\n      sub\n        /* \"#utility.yul\":25156:25157   */\n      0x00\n        /* \"#utility.yul\":25145:25154   */\n      dup4\n        /* \"#utility.yul\":25141:25158   */\n      add\n        /* \"#utility.yul\":25134:25181   */\n      mstore\n        /* \"#utility.yul\":25198:25329   */\n      tag_732\n        /* \"#utility.yul\":25324:25328   */\n      dup2\n        /* \"#utility.yul\":25198:25329   */\n      tag_490\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":25190:25329   */\n      swap1\n      pop\n        /* \"#utility.yul\":24917:25336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25342:25575   */\n    tag_208:\n        /* \"#utility.yul\":25381:25384   */\n      0x00\n        /* \"#utility.yul\":25404:25428   */\n      tag_734\n        /* \"#utility.yul\":25422:25427   */\n      dup3\n        /* \"#utility.yul\":25404:25428   */\n      tag_424\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":25395:25428   */\n      swap2\n      pop\n        /* \"#utility.yul\":25450:25516   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25443:25448   */\n      dup3\n        /* \"#utility.yul\":25440:25517   */\n      sub\n        /* \"#utility.yul\":25437:25540   */\n      tag_735\n      jumpi\n        /* \"#utility.yul\":25520:25538   */\n      tag_736\n      tag_484\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":25437:25540   */\n    tag_735:\n        /* \"#utility.yul\":25567:25568   */\n      0x01\n        /* \"#utility.yul\":25560:25565   */\n      dup3\n        /* \"#utility.yul\":25556:25569   */\n      add\n        /* \"#utility.yul\":25549:25569   */\n      swap1\n      pop\n        /* \"#utility.yul\":25342:25575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25581:25693   */\n    tag_491:\n        /* \"#utility.yul\":25664:25686   */\n      tag_738\n        /* \"#utility.yul\":25680:25685   */\n      dup2\n        /* \"#utility.yul\":25664:25686   */\n      tag_455\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":25659:25662   */\n      dup3\n        /* \"#utility.yul\":25652:25687   */\n      mstore\n        /* \"#utility.yul\":25581:25693   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25699:25913   */\n    tag_249:\n        /* \"#utility.yul\":25788:25792   */\n      0x00\n        /* \"#utility.yul\":25826:25828   */\n      0x20\n        /* \"#utility.yul\":25815:25824   */\n      dup3\n        /* \"#utility.yul\":25811:25829   */\n      add\n        /* \"#utility.yul\":25803:25829   */\n      swap1\n      pop\n        /* \"#utility.yul\":25839:25906   */\n      tag_740\n        /* \"#utility.yul\":25903:25904   */\n      0x00\n        /* \"#utility.yul\":25892:25901   */\n      dup4\n        /* \"#utility.yul\":25888:25905   */\n      add\n        /* \"#utility.yul\":25879:25885   */\n      dup5\n        /* \"#utility.yul\":25839:25906   */\n      tag_491\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":25699:25913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25919:26251   */\n    tag_295:\n        /* \"#utility.yul\":26040:26044   */\n      0x00\n        /* \"#utility.yul\":26078:26080   */\n      0x40\n        /* \"#utility.yul\":26067:26076   */\n      dup3\n        /* \"#utility.yul\":26063:26081   */\n      add\n        /* \"#utility.yul\":26055:26081   */\n      swap1\n      pop\n        /* \"#utility.yul\":26091:26162   */\n      tag_742\n        /* \"#utility.yul\":26159:26160   */\n      0x00\n        /* \"#utility.yul\":26148:26157   */\n      dup4\n        /* \"#utility.yul\":26144:26161   */\n      add\n        /* \"#utility.yul\":26135:26141   */\n      dup6\n        /* \"#utility.yul\":26091:26162   */\n      tag_471\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":26172:26244   */\n      tag_743\n        /* \"#utility.yul\":26240:26242   */\n      0x20\n        /* \"#utility.yul\":26229:26238   */\n      dup4\n        /* \"#utility.yul\":26225:26243   */\n      add\n        /* \"#utility.yul\":26216:26222   */\n      dup5\n        /* \"#utility.yul\":26172:26244   */\n      tag_471\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":25919:26251   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26257:26667   */\n    tag_298:\n        /* \"#utility.yul\":26297:26304   */\n      0x00\n        /* \"#utility.yul\":26320:26340   */\n      tag_745\n        /* \"#utility.yul\":26338:26339   */\n      dup3\n        /* \"#utility.yul\":26320:26340   */\n      tag_424\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":26315:26340   */\n      swap2\n      pop\n        /* \"#utility.yul\":26354:26374   */\n      tag_746\n        /* \"#utility.yul\":26372:26373   */\n      dup4\n        /* \"#utility.yul\":26354:26374   */\n      tag_424\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":26349:26374   */\n      swap3\n      pop\n        /* \"#utility.yul\":26409:26410   */\n      dup3\n        /* \"#utility.yul\":26406:26407   */\n      dup3\n        /* \"#utility.yul\":26402:26411   */\n      mul\n        /* \"#utility.yul\":26431:26461   */\n      tag_747\n        /* \"#utility.yul\":26449:26460   */\n      dup2\n        /* \"#utility.yul\":26431:26461   */\n      tag_424\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":26420:26461   */\n      swap2\n      pop\n        /* \"#utility.yul\":26610:26611   */\n      dup3\n        /* \"#utility.yul\":26601:26608   */\n      dup3\n        /* \"#utility.yul\":26597:26612   */\n      div\n        /* \"#utility.yul\":26594:26595   */\n      dup5\n        /* \"#utility.yul\":26591:26613   */\n      eq\n        /* \"#utility.yul\":26571:26572   */\n      dup4\n        /* \"#utility.yul\":26564:26573   */\n      iszero\n        /* \"#utility.yul\":26544:26627   */\n      or\n        /* \"#utility.yul\":26521:26660   */\n      tag_748\n      jumpi\n        /* \"#utility.yul\":26640:26658   */\n      tag_749\n      tag_484\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":26521:26660   */\n    tag_748:\n        /* \"#utility.yul\":26305:26667   */\n      pop\n        /* \"#utility.yul\":26257:26667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26673:26853   */\n    tag_492:\n        /* \"#utility.yul\":26721:26798   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26718:26719   */\n      0x00\n        /* \"#utility.yul\":26711:26799   */\n      mstore\n        /* \"#utility.yul\":26818:26822   */\n      0x12\n        /* \"#utility.yul\":26815:26816   */\n      0x04\n        /* \"#utility.yul\":26808:26823   */\n      mstore\n        /* \"#utility.yul\":26842:26846   */\n      0x24\n        /* \"#utility.yul\":26839:26840   */\n      0x00\n        /* \"#utility.yul\":26832:26847   */\n      revert\n        /* \"#utility.yul\":26859:27044   */\n    tag_302:\n        /* \"#utility.yul\":26899:26900   */\n      0x00\n        /* \"#utility.yul\":26916:26936   */\n      tag_752\n        /* \"#utility.yul\":26934:26935   */\n      dup3\n        /* \"#utility.yul\":26916:26936   */\n      tag_424\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":26911:26936   */\n      swap2\n      pop\n        /* \"#utility.yul\":26950:26970   */\n      tag_753\n        /* \"#utility.yul\":26968:26969   */\n      dup4\n        /* \"#utility.yul\":26950:26970   */\n      tag_424\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":26945:26970   */\n      swap3\n      pop\n        /* \"#utility.yul\":26989:26990   */\n      dup3\n        /* \"#utility.yul\":26979:27014   */\n      tag_754\n      jumpi\n        /* \"#utility.yul\":26994:27012   */\n      tag_755\n      tag_492\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":26979:27014   */\n    tag_754:\n        /* \"#utility.yul\":27036:27037   */\n      dup3\n        /* \"#utility.yul\":27033:27034   */\n      dup3\n        /* \"#utility.yul\":27029:27038   */\n      div\n        /* \"#utility.yul\":27024:27038   */\n      swap1\n      pop\n        /* \"#utility.yul\":26859:27044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27050:27241   */\n    tag_312:\n        /* \"#utility.yul\":27088:27092   */\n      0x00\n        /* \"#utility.yul\":27108:27126   */\n      tag_757\n        /* \"#utility.yul\":27124:27125   */\n      dup3\n        /* \"#utility.yul\":27108:27126   */\n      tag_455\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":27103:27126   */\n      swap2\n      pop\n        /* \"#utility.yul\":27140:27158   */\n      tag_758\n        /* \"#utility.yul\":27156:27157   */\n      dup4\n        /* \"#utility.yul\":27140:27158   */\n      tag_455\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":27135:27158   */\n      swap3\n      pop\n        /* \"#utility.yul\":27182:27183   */\n      dup3\n        /* \"#utility.yul\":27179:27180   */\n      dup3\n        /* \"#utility.yul\":27175:27184   */\n      sub\n        /* \"#utility.yul\":27167:27184   */\n      swap1\n      pop\n        /* \"#utility.yul\":27206:27210   */\n      0xff\n        /* \"#utility.yul\":27200:27204   */\n      dup2\n        /* \"#utility.yul\":27197:27211   */\n      gt\n        /* \"#utility.yul\":27194:27234   */\n      iszero\n      tag_759\n      jumpi\n        /* \"#utility.yul\":27214:27232   */\n      tag_760\n      tag_484\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":27194:27234   */\n    tag_759:\n        /* \"#utility.yul\":27050:27241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27247:27469   */\n    tag_493:\n        /* \"#utility.yul\":27387:27421   */\n      0x4661696c656420746f2073656e6420457468657220746f20746865206d616e61\n        /* \"#utility.yul\":27383:27384   */\n      0x00\n        /* \"#utility.yul\":27375:27381   */\n      dup3\n        /* \"#utility.yul\":27371:27385   */\n      add\n        /* \"#utility.yul\":27364:27422   */\n      mstore\n        /* \"#utility.yul\":27456:27461   */\n      0x6765720000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27451:27453   */\n      0x20\n        /* \"#utility.yul\":27443:27449   */\n      dup3\n        /* \"#utility.yul\":27439:27454   */\n      add\n        /* \"#utility.yul\":27432:27462   */\n      mstore\n        /* \"#utility.yul\":27247:27469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27475:27841   */\n    tag_494:\n        /* \"#utility.yul\":27617:27620   */\n      0x00\n        /* \"#utility.yul\":27638:27705   */\n      tag_763\n        /* \"#utility.yul\":27702:27704   */\n      0x23\n        /* \"#utility.yul\":27697:27700   */\n      dup4\n        /* \"#utility.yul\":27638:27705   */\n      tag_488\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":27631:27705   */\n      swap2\n      pop\n        /* \"#utility.yul\":27714:27807   */\n      tag_764\n        /* \"#utility.yul\":27803:27806   */\n      dup3\n        /* \"#utility.yul\":27714:27807   */\n      tag_493\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":27832:27834   */\n      0x40\n        /* \"#utility.yul\":27827:27830   */\n      dup3\n        /* \"#utility.yul\":27823:27835   */\n      add\n        /* \"#utility.yul\":27816:27835   */\n      swap1\n      pop\n        /* \"#utility.yul\":27475:27841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27847:28266   */\n    tag_319:\n        /* \"#utility.yul\":28013:28017   */\n      0x00\n        /* \"#utility.yul\":28051:28053   */\n      0x20\n        /* \"#utility.yul\":28040:28049   */\n      dup3\n        /* \"#utility.yul\":28036:28054   */\n      add\n        /* \"#utility.yul\":28028:28054   */\n      swap1\n      pop\n        /* \"#utility.yul\":28100:28109   */\n      dup2\n        /* \"#utility.yul\":28094:28098   */\n      dup2\n        /* \"#utility.yul\":28090:28110   */\n      sub\n        /* \"#utility.yul\":28086:28087   */\n      0x00\n        /* \"#utility.yul\":28075:28084   */\n      dup4\n        /* \"#utility.yul\":28071:28088   */\n      add\n        /* \"#utility.yul\":28064:28111   */\n      mstore\n        /* \"#utility.yul\":28128:28259   */\n      tag_766\n        /* \"#utility.yul\":28254:28258   */\n      dup2\n        /* \"#utility.yul\":28128:28259   */\n      tag_494\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":28120:28259   */\n      swap1\n      pop\n        /* \"#utility.yul\":27847:28266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28272:28415   */\n    tag_495:\n        /* \"#utility.yul\":28329:28334   */\n      0x00\n        /* \"#utility.yul\":28360:28366   */\n      dup2\n        /* \"#utility.yul\":28354:28367   */\n      mload\n        /* \"#utility.yul\":28345:28367   */\n      swap1\n      pop\n        /* \"#utility.yul\":28376:28409   */\n      tag_768\n        /* \"#utility.yul\":28403:28408   */\n      dup2\n        /* \"#utility.yul\":28376:28409   */\n      tag_462\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":28272:28415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28421:28772   */\n    tag_326:\n        /* \"#utility.yul\":28491:28497   */\n      0x00\n        /* \"#utility.yul\":28540:28542   */\n      0x20\n        /* \"#utility.yul\":28528:28537   */\n      dup3\n        /* \"#utility.yul\":28519:28526   */\n      dup5\n        /* \"#utility.yul\":28515:28538   */\n      sub\n        /* \"#utility.yul\":28511:28543   */\n      slt\n        /* \"#utility.yul\":28508:28627   */\n      iszero\n      tag_770\n      jumpi\n        /* \"#utility.yul\":28546:28625   */\n      tag_771\n      tag_442\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":28508:28627   */\n    tag_770:\n        /* \"#utility.yul\":28666:28667   */\n      0x00\n        /* \"#utility.yul\":28691:28755   */\n      tag_772\n        /* \"#utility.yul\":28747:28754   */\n      dup5\n        /* \"#utility.yul\":28738:28744   */\n      dup3\n        /* \"#utility.yul\":28727:28736   */\n      dup6\n        /* \"#utility.yul\":28723:28745   */\n      add\n        /* \"#utility.yul\":28691:28755   */\n      tag_495\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":28681:28755   */\n      swap2\n      pop\n        /* \"#utility.yul\":28637:28765   */\n      pop\n        /* \"#utility.yul\":28421:28772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28778:29110   */\n    tag_329:\n        /* \"#utility.yul\":28899:28903   */\n      0x00\n        /* \"#utility.yul\":28937:28939   */\n      0x40\n        /* \"#utility.yul\":28926:28935   */\n      dup3\n        /* \"#utility.yul\":28922:28940   */\n      add\n        /* \"#utility.yul\":28914:28940   */\n      swap1\n      pop\n        /* \"#utility.yul\":28950:29021   */\n      tag_774\n        /* \"#utility.yul\":29018:29019   */\n      0x00\n        /* \"#utility.yul\":29007:29016   */\n      dup4\n        /* \"#utility.yul\":29003:29020   */\n      add\n        /* \"#utility.yul\":28994:29000   */\n      dup6\n        /* \"#utility.yul\":28950:29021   */\n      tag_425\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":29031:29103   */\n      tag_775\n        /* \"#utility.yul\":29099:29101   */\n      0x20\n        /* \"#utility.yul\":29088:29097   */\n      dup4\n        /* \"#utility.yul\":29084:29102   */\n      add\n        /* \"#utility.yul\":29075:29081   */\n      dup5\n        /* \"#utility.yul\":29031:29103   */\n      tag_425\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":28778:29110   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29116:29214   */\n    tag_496:\n        /* \"#utility.yul\":29167:29173   */\n      0x00\n        /* \"#utility.yul\":29201:29206   */\n      dup2\n        /* \"#utility.yul\":29195:29207   */\n      mload\n        /* \"#utility.yul\":29185:29207   */\n      swap1\n      pop\n        /* \"#utility.yul\":29116:29214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29220:29388   */\n    tag_497:\n        /* \"#utility.yul\":29303:29314   */\n      0x00\n        /* \"#utility.yul\":29337:29343   */\n      dup3\n        /* \"#utility.yul\":29332:29335   */\n      dup3\n        /* \"#utility.yul\":29325:29344   */\n      mstore\n        /* \"#utility.yul\":29377:29381   */\n      0x20\n        /* \"#utility.yul\":29372:29375   */\n      dup3\n        /* \"#utility.yul\":29368:29382   */\n      add\n        /* \"#utility.yul\":29353:29382   */\n      swap1\n      pop\n        /* \"#utility.yul\":29220:29388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29394:29640   */\n    tag_498:\n        /* \"#utility.yul\":29475:29476   */\n      0x00\n        /* \"#utility.yul\":29485:29598   */\n    tag_779:\n        /* \"#utility.yul\":29499:29505   */\n      dup4\n        /* \"#utility.yul\":29496:29497   */\n      dup2\n        /* \"#utility.yul\":29493:29506   */\n      lt\n        /* \"#utility.yul\":29485:29598   */\n      iszero\n      tag_781\n      jumpi\n        /* \"#utility.yul\":29584:29585   */\n      dup1\n        /* \"#utility.yul\":29579:29582   */\n      dup3\n        /* \"#utility.yul\":29575:29586   */\n      add\n        /* \"#utility.yul\":29569:29587   */\n      mload\n        /* \"#utility.yul\":29565:29566   */\n      dup2\n        /* \"#utility.yul\":29560:29563   */\n      dup5\n        /* \"#utility.yul\":29556:29567   */\n      add\n        /* \"#utility.yul\":29549:29588   */\n      mstore\n        /* \"#utility.yul\":29521:29523   */\n      0x20\n        /* \"#utility.yul\":29518:29519   */\n      dup2\n        /* \"#utility.yul\":29514:29524   */\n      add\n        /* \"#utility.yul\":29509:29524   */\n      swap1\n      pop\n        /* \"#utility.yul\":29485:29598   */\n      jump(tag_779)\n    tag_781:\n        /* \"#utility.yul\":29632:29633   */\n      0x00\n        /* \"#utility.yul\":29623:29629   */\n      dup5\n        /* \"#utility.yul\":29618:29621   */\n      dup5\n        /* \"#utility.yul\":29614:29630   */\n      add\n        /* \"#utility.yul\":29607:29634   */\n      mstore\n        /* \"#utility.yul\":29456:29640   */\n      pop\n        /* \"#utility.yul\":29394:29640   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29646:30019   */\n    tag_499:\n        /* \"#utility.yul\":29732:29735   */\n      0x00\n        /* \"#utility.yul\":29760:29798   */\n      tag_783\n        /* \"#utility.yul\":29792:29797   */\n      dup3\n        /* \"#utility.yul\":29760:29798   */\n      tag_496\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":29814:29884   */\n      tag_784\n        /* \"#utility.yul\":29877:29883   */\n      dup2\n        /* \"#utility.yul\":29872:29875   */\n      dup6\n        /* \"#utility.yul\":29814:29884   */\n      tag_497\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":29807:29884   */\n      swap4\n      pop\n        /* \"#utility.yul\":29893:29958   */\n      tag_785\n        /* \"#utility.yul\":29951:29957   */\n      dup2\n        /* \"#utility.yul\":29946:29949   */\n      dup6\n        /* \"#utility.yul\":29939:29943   */\n      0x20\n        /* \"#utility.yul\":29932:29937   */\n      dup7\n        /* \"#utility.yul\":29928:29944   */\n      add\n        /* \"#utility.yul\":29893:29958   */\n      tag_498\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":29983:30012   */\n      tag_786\n        /* \"#utility.yul\":30005:30011   */\n      dup2\n        /* \"#utility.yul\":29983:30012   */\n      tag_477\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":29978:29981   */\n      dup5\n        /* \"#utility.yul\":29974:30013   */\n      add\n        /* \"#utility.yul\":29967:30013   */\n      swap2\n      pop\n        /* \"#utility.yul\":29736:30019   */\n      pop\n        /* \"#utility.yul\":29646:30019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30025:30764   */\n    tag_334:\n        /* \"#utility.yul\":30242:30246   */\n      0x00\n        /* \"#utility.yul\":30280:30283   */\n      0xa0\n        /* \"#utility.yul\":30269:30278   */\n      dup3\n        /* \"#utility.yul\":30265:30284   */\n      add\n        /* \"#utility.yul\":30257:30284   */\n      swap1\n      pop\n        /* \"#utility.yul\":30294:30365   */\n      tag_788\n        /* \"#utility.yul\":30362:30363   */\n      0x00\n        /* \"#utility.yul\":30351:30360   */\n      dup4\n        /* \"#utility.yul\":30347:30364   */\n      add\n        /* \"#utility.yul\":30338:30344   */\n      dup9\n        /* \"#utility.yul\":30294:30365   */\n      tag_471\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":30375:30447   */\n      tag_789\n        /* \"#utility.yul\":30443:30445   */\n      0x20\n        /* \"#utility.yul\":30432:30441   */\n      dup4\n        /* \"#utility.yul\":30428:30446   */\n      add\n        /* \"#utility.yul\":30419:30425   */\n      dup8\n        /* \"#utility.yul\":30375:30447   */\n      tag_471\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":30457:30529   */\n      tag_790\n        /* \"#utility.yul\":30525:30527   */\n      0x40\n        /* \"#utility.yul\":30514:30523   */\n      dup4\n        /* \"#utility.yul\":30510:30528   */\n      add\n        /* \"#utility.yul\":30501:30507   */\n      dup7\n        /* \"#utility.yul\":30457:30529   */\n      tag_425\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":30539:30605   */\n      tag_791\n        /* \"#utility.yul\":30601:30603   */\n      0x60\n        /* \"#utility.yul\":30590:30599   */\n      dup4\n        /* \"#utility.yul\":30586:30604   */\n      add\n        /* \"#utility.yul\":30577:30583   */\n      dup6\n        /* \"#utility.yul\":30539:30605   */\n      tag_458\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":30653:30662   */\n      dup2\n        /* \"#utility.yul\":30647:30651   */\n      dup2\n        /* \"#utility.yul\":30643:30663   */\n      sub\n        /* \"#utility.yul\":30637:30640   */\n      0x80\n        /* \"#utility.yul\":30626:30635   */\n      dup4\n        /* \"#utility.yul\":30622:30641   */\n      add\n        /* \"#utility.yul\":30615:30664   */\n      mstore\n        /* \"#utility.yul\":30681:30757   */\n      tag_792\n        /* \"#utility.yul\":30752:30756   */\n      dup2\n        /* \"#utility.yul\":30743:30749   */\n      dup5\n        /* \"#utility.yul\":30681:30757   */\n      tag_499\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":30673:30757   */\n      swap1\n      pop\n        /* \"#utility.yul\":30025:30764   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30770:31212   */\n    tag_351:\n        /* \"#utility.yul\":30919:30923   */\n      0x00\n        /* \"#utility.yul\":30957:30959   */\n      0x60\n        /* \"#utility.yul\":30946:30955   */\n      dup3\n        /* \"#utility.yul\":30942:30960   */\n      add\n        /* \"#utility.yul\":30934:30960   */\n      swap1\n      pop\n        /* \"#utility.yul\":30970:31041   */\n      tag_794\n        /* \"#utility.yul\":31038:31039   */\n      0x00\n        /* \"#utility.yul\":31027:31036   */\n      dup4\n        /* \"#utility.yul\":31023:31040   */\n      add\n        /* \"#utility.yul\":31014:31020   */\n      dup7\n        /* \"#utility.yul\":30970:31041   */\n      tag_471\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":31051:31123   */\n      tag_795\n        /* \"#utility.yul\":31119:31121   */\n      0x20\n        /* \"#utility.yul\":31108:31117   */\n      dup4\n        /* \"#utility.yul\":31104:31122   */\n      add\n        /* \"#utility.yul\":31095:31101   */\n      dup6\n        /* \"#utility.yul\":31051:31123   */\n      tag_471\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":31133:31205   */\n      tag_796\n        /* \"#utility.yul\":31201:31203   */\n      0x40\n        /* \"#utility.yul\":31190:31199   */\n      dup4\n        /* \"#utility.yul\":31186:31204   */\n      add\n        /* \"#utility.yul\":31177:31183   */\n      dup5\n        /* \"#utility.yul\":31133:31205   */\n      tag_425\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":30770:31212   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31218:31395   */\n    tag_500:\n        /* \"#utility.yul\":31358:31387   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":31354:31355   */\n      0x00\n        /* \"#utility.yul\":31346:31352   */\n      dup3\n        /* \"#utility.yul\":31342:31356   */\n      add\n        /* \"#utility.yul\":31335:31388   */\n      mstore\n        /* \"#utility.yul\":31218:31395   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31401:31767   */\n    tag_501:\n        /* \"#utility.yul\":31543:31546   */\n      0x00\n        /* \"#utility.yul\":31564:31631   */\n      tag_799\n        /* \"#utility.yul\":31628:31630   */\n      0x1b\n        /* \"#utility.yul\":31623:31626   */\n      dup4\n        /* \"#utility.yul\":31564:31631   */\n      tag_488\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":31557:31631   */\n      swap2\n      pop\n        /* \"#utility.yul\":31640:31733   */\n      tag_800\n        /* \"#utility.yul\":31729:31732   */\n      dup3\n        /* \"#utility.yul\":31640:31733   */\n      tag_500\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":31758:31760   */\n      0x20\n        /* \"#utility.yul\":31753:31756   */\n      dup3\n        /* \"#utility.yul\":31749:31761   */\n      add\n        /* \"#utility.yul\":31742:31761   */\n      swap1\n      pop\n        /* \"#utility.yul\":31401:31767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31773:32192   */\n    tag_420:\n        /* \"#utility.yul\":31939:31943   */\n      0x00\n        /* \"#utility.yul\":31977:31979   */\n      0x20\n        /* \"#utility.yul\":31966:31975   */\n      dup3\n        /* \"#utility.yul\":31962:31980   */\n      add\n        /* \"#utility.yul\":31954:31980   */\n      swap1\n      pop\n        /* \"#utility.yul\":32026:32035   */\n      dup2\n        /* \"#utility.yul\":32020:32024   */\n      dup2\n        /* \"#utility.yul\":32016:32036   */\n      sub\n        /* \"#utility.yul\":32012:32013   */\n      0x00\n        /* \"#utility.yul\":32001:32010   */\n      dup4\n        /* \"#utility.yul\":31997:32014   */\n      add\n        /* \"#utility.yul\":31990:32037   */\n      mstore\n        /* \"#utility.yul\":32054:32185   */\n      tag_802\n        /* \"#utility.yul\":32180:32184   */\n      dup2\n        /* \"#utility.yul\":32054:32185   */\n      tag_501\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":32046:32185   */\n      swap1\n      pop\n        /* \"#utility.yul\":31773:32192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fbe700276f2d99e495cbad5d5faa8c5c21e783c5363adbf45213b4ac37c8e13a64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1904": {
									"entryPoint": null,
									"id": 1904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2877": {
									"entryPoint": null,
									"id": 2877,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3008": {
									"entryPoint": null,
									"id": 3008,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_2973": {
									"entryPoint": 426,
									"id": 2973,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_323": {
									"entryPoint": 639,
									"id": 323,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_337": {
									"entryPoint": 619,
									"id": 337,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:15",
										"nodeType": "YulBlock",
										"src": "0:590:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:15",
													"nodeType": "YulBlock",
													"src": "52:81:15",
													"statements": [
														{
															"nativeSrc": "62:65:15",
															"nodeType": "YulAssignment",
															"src": "62:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:15",
																		"nodeType": "YulLiteral",
																		"src": "84:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:15"
																},
																"nativeSrc": "73:54:15",
																"nodeType": "YulFunctionCall",
																"src": "73:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:15",
														"nodeType": "YulTypedName",
														"src": "34:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:15",
														"nodeType": "YulTypedName",
														"src": "44:7:15",
														"type": ""
													}
												],
												"src": "7:126:15"
											},
											{
												"body": {
													"nativeSrc": "184:51:15",
													"nodeType": "YulBlock",
													"src": "184:51:15",
													"statements": [
														{
															"nativeSrc": "194:35:15",
															"nodeType": "YulAssignment",
															"src": "194:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:15"
																},
																"nativeSrc": "205:24:15",
																"nodeType": "YulFunctionCall",
																"src": "205:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:15",
														"nodeType": "YulTypedName",
														"src": "166:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:15",
														"nodeType": "YulTypedName",
														"src": "176:7:15",
														"type": ""
													}
												],
												"src": "139:96:15"
											},
											{
												"body": {
													"nativeSrc": "306:53:15",
													"nodeType": "YulBlock",
													"src": "306:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:15"
																		},
																		"nativeSrc": "328:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:15"
																},
																"nativeSrc": "316:37:15",
																"nodeType": "YulFunctionCall",
																"src": "316:37:15"
															},
															"nativeSrc": "316:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:15",
														"nodeType": "YulTypedName",
														"src": "294:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:15",
														"nodeType": "YulTypedName",
														"src": "301:3:15",
														"type": ""
													}
												],
												"src": "241:118:15"
											},
											{
												"body": {
													"nativeSrc": "463:124:15",
													"nodeType": "YulBlock",
													"src": "463:124:15",
													"statements": [
														{
															"nativeSrc": "473:26:15",
															"nodeType": "YulAssignment",
															"src": "473:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:15",
																		"nodeType": "YulLiteral",
																		"src": "496:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:15"
																},
																"nativeSrc": "481:18:15",
																"nodeType": "YulFunctionCall",
																"src": "481:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:15",
																				"nodeType": "YulLiteral",
																				"src": "577:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:15"
																		},
																		"nativeSrc": "562:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:15"
																},
																"nativeSrc": "509:71:15",
																"nodeType": "YulFunctionCall",
																"src": "509:71:15"
															},
															"nativeSrc": "509:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:15",
														"nodeType": "YulTypedName",
														"src": "435:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:15",
														"nodeType": "YulTypedName",
														"src": "447:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:15",
														"nodeType": "YulTypedName",
														"src": "458:4:15",
														"type": ""
													}
												],
												"src": "365:222:15"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600260035f6101000a81548160ff021916908360ff1602179055503480156200002b575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000a0575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000979190620002ce565b60405180910390fd5b620000b181620001aa60201b60201c565b505f8060146101000a81548160ff021916908315150217905550620000dd60026200026b60201b60201c565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f151581526020014281525060055f6200012560026200027f60201b60201c565b5f1b81526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548160ff02191690831515021790555060408201518160010155905050620002e9565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001815f015f828254019250508190555050565b5f815f01549050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002b6826200028b565b9050919050565b620002c881620002aa565b82525050565b5f602082019050620002e35f830184620002bd565b92915050565b612f7680620002f75f395ff3fe608060405260043610610165575f3560e01c806375e6e600116100d0578063b2f7c6e011610089578063e6062e1a11610063578063e6062e1a14610536578063f1a3b94314610574578063f2fde38b146105b0578063f7edbbac146105d857610165565b8063b2f7c6e01461048e578063cacf11e7146104be578063d48bfca7146104fa57610165565b806375e6e6001461036b5780638456cb59146103ac5780638da5cb5b146103c25780639230b2bc146103ec57806395a7a95314610416578063a37b06d41461045257610165565b8063443910e011610122578063443910e0146102615780634df712121461028b57806356a6d9ef146102c757806359770438146102ef5780635c975abb1461032b578063715018a61461035557610165565b806312065fe014610169578063273cbaa0146101935780633ccfd60b146101bd5780633d496362146101d35780633f4ba83a1461020f578063410a1d3214610225575b5f80fd5b348015610174575f80fd5b5061017d610602565b60405161018a91906120ce565b60405180910390f35b34801561019e575f80fd5b506101a7610609565b6040516101b49190612262565b60405180910390f35b3480156101c8575f80fd5b506101d1610788565b005b3480156101de575f80fd5b506101f960048036038101906101f491906122bd565b610847565b6040516102069190612409565b60405180910390f35b34801561021a575f80fd5b50610223610a26565b005b348015610230575f80fd5b5061024b60048036038101906102469190612453565b610a38565b6040516102589190612409565b60405180910390f35b34801561026c575f80fd5b50610275610c61565b6040516102829190612409565b60405180910390f35b348015610296575f80fd5b506102b160048036038101906102ac91906124b4565b610e04565b6040516102be91906124ee565b60405180910390f35b3480156102d2575f80fd5b506102ed60048036038101906102e8919061256c565b610e67565b005b3480156102fa575f80fd5b5061031560048036038101906103109190612453565b610f1c565b6040516103229190612692565b60405180910390f35b348015610336575f80fd5b5061033f6110ec565b60405161034c91906124ee565b60405180910390f35b348015610360575f80fd5b50610369611101565b005b348015610376575f80fd5b50610391600480360381019061038c91906122bd565b611114565b6040516103a3969594939291906126d0565b60405180910390f35b3480156103b7575f80fd5b506103c061118a565b005b3480156103cd575f80fd5b506103d661119c565b6040516103e3919061272f565b60405180910390f35b3480156103f7575f80fd5b506104006111c3565b60405161040d91906120ce565b60405180910390f35b348015610421575f80fd5b5061043c60048036038101906104379190612772565b6111ce565b60405161044991906124ee565b60405180910390f35b34801561045d575f80fd5b50610478600480360381019061047391906127c2565b61129f565b60405161048591906120ce565b60405180910390f35b6104a860048036038101906104a3919061293c565b6112d8565b6040516104b591906124ee565b60405180910390f35b3480156104c9575f80fd5b506104e460048036038101906104df91906122bd565b611823565b6040516104f19190612409565b60405180910390f35b348015610505575f80fd5b50610520600480360381019061051b9190612453565b611a02565b60405161052d91906129e1565b60405180910390f35b348015610541575f80fd5b5061055c600480360381019061055791906122bd565b611b33565b60405161056b939291906129fa565b60405180910390f35b34801561057f575f80fd5b5061059a600480360381019061059591906122bd565b611b84565b6040516105a791906120ce565b60405180910390f35b3480156105bb575f80fd5b506105d660048036038101906105d19190612453565b611c45565b005b3480156105e3575f80fd5b506105ec611cc9565b6040516105f991906120ce565b60405180910390f35b5f47905090565b60605f6106166002611cd4565b67ffffffffffffffff81111561062f5761062e612818565b5b60405190808252806020026020018201604052801561066857816020015b610655611fdf565b81526020019060019003908161064d5790505b5090505f5b6106776002611cd4565b8110156107805760405180608001604052806001836106969190612a5c565b5f1b815260200160055f6001856106ad9190612a5c565b5f1b81526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160055f6001856107099190612a5c565b5f1b81526020019081526020015f205f0160149054906101000a900460ff161515815260200160055f60018561073f9190612a5c565b5f1b81526020019081526020015f206001015481525082828151811061076857610767612a8f565b5b6020026020010181905250808060010191505061066d565b508091505090565b610790611ce0565b5f4790505f61079d61119c565b73ffffffffffffffffffffffffffffffffffffffff16826040516107c090612ae9565b5f6040518083038185875af1925050503d805f81146107fa576040519150601f19603f3d011682016040523d82523d5f602084013e6107ff565b606091505b5050905080610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90612b57565b60405180910390fd5b5050565b60605f6108546001611cd4565b67ffffffffffffffff81111561086d5761086c612818565b5b6040519080825280602002602001820160405280156108a657816020015b61089361201e565b81526020019060019003908161088b5790505b5090505f805b6108b66001611cd4565b811015610a1b578460045f6001846108ce9190612a5c565b5f1b81526020019081526020015f206001015403610a0e5760045f6001836108f69190612a5c565b5f1b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815250508383815181106109f4576109f3612a8f565b5b60200260200101819052508180610a0a90612b75565b9250505b80806001019150506108ac565b508192505050919050565b610a2e611ce0565b610a36611d67565b565b60605f610a456001611cd4565b67ffffffffffffffff811115610a5e57610a5d612818565b5b604051908082528060200260200182016040528015610a9757816020015b610a8461201e565b815260200190600190039081610a7c5790505b5090505f805b610aa76001611cd4565b811015610c56578473ffffffffffffffffffffffffffffffffffffffff1660045f600184610ad59190612a5c565b5f1b81526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c495760045f600183610b319190612a5c565b5f1b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481525050838381518110610c2f57610c2e612a8f565b5b60200260200101819052508180610c4590612b75565b9250505b8080600101915050610a9d565b508192505050919050565b60605f610c6e6001611cd4565b67ffffffffffffffff811115610c8757610c86612818565b5b604051908082528060200260200182016040528015610cc057816020015b610cad61201e565b815260200190600190039081610ca55790505b5090505f5b610ccf6001611cd4565b811015610dfc5760045f600183610ce69190612a5c565b5f1b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481525050828281518110610de457610de3612a8f565b5b60200260200101819052508080600101915050610cc5565b508091505090565b5f610e0d611ce0565b8160035f6101000a81548160ff021916908360ff1602179055507fb5c0fbe3c7e536e86ea6d91ec04bd37128a9bf1e981e06dae9834031254831f982604051610e569190612bcb565b60405180910390a160019050919050565b610e6f611ce0565b5f8273ffffffffffffffffffffffffffffffffffffffff1682604051610e9490612ae9565b5f6040518083038185875af1925050503d805f8114610ece576040519150601f19603f3d011682016040523d82523d5f602084013e610ed3565b606091505b5050905080610f17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0e90612b57565b60405180910390fd5b505050565b60605f610f296002611cd4565b67ffffffffffffffff811115610f4257610f41612818565b5b604051908082528060200260200182016040528015610f7b57816020015b610f68612080565b815260200190600190039081610f605790505b5090505f805b610f8b6002611cd4565b8110156110e1578473ffffffffffffffffffffffffffffffffffffffff1660055f600184610fb99190612a5c565b5f1b81526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036110d45760055f6001836110159190612a5c565b5f1b81526020019081526020015f206040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460ff161515151581526020016001820154815250508383815181106110ba576110b9612a8f565b5b602002602001018190525081806110d090612b75565b9250505b8080600101915050610f81565b508192505050919050565b5f8060149054906101000a900460ff16905090565b611109611ce0565b6111125f611dc8565b565b6004602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154905086565b611192611ce0565b61119a611e89565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002805f0154905081565b5f6111d7611ce0565b8260055f8681526020019081526020015f205f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160055f8681526020019081526020015f205f0160146101000a81548160ff021916908315150217905550837f0178cc6533afb1053a370099de33a8f4a6c10adf023eba537c33721e13dc12738461127e611eeb565b60405161128c929190612be4565b60405180910390a2600190509392505050565b5f606482846112ae9190612c0b565b10156112b8575f80fd5b606482846112c69190612c0b565b6112d09190612c79565b905092915050565b5f6112e1611ef2565b60015f1b8203611403575f340361132f57346040517f9266535100000000000000000000000000000000000000000000000000000000815260040161132691906120ce565b60405180910390fd5b5f8673ffffffffffffffffffffffffffffffffffffffff1661136e8760035f9054906101000a900460ff1660646113669190612ca9565b60ff1661129f565b60405161137a90612ae9565b5f6040518083038185875af1925050503d805f81146113b4576040519150601f19603f3d011682016040523d82523d5f602084013e6113b9565b606091505b50509050806113fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f490612d4d565b60405180910390fd5b50611696565b5f60055f8481526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166365aeaa953061145b611eeb565b6040518363ffffffff1660e01b8152600401611478929190612be4565b602060405180830381865afa158015611493573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114b79190612d7f565b90508581146114ff5785816040517fa24f8be90000000000000000000000000000000000000000000000000000000081526004016114f6929190612daa565b60405180910390fd5b60055f8481526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663760d9bba611555611eeb565b8961157d8a60035f9054906101000a900460ff1660646115759190612ca9565b60ff1661129f565b89896040518663ffffffff1660e01b815260040161159f959493929190612e4b565b5f604051808303815f87803b1580156115b6575f80fd5b505af11580156115c8573d5f803e3d5ffd5b5050505060055f8481526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663760d9bba611622611eeb565b61162a61119c565b6116458a60035f9054906101000a900460ff1660ff1661129f565b89896040518663ffffffff1660e01b8152600401611667959493929190612e4b565b5f604051808303815f87803b15801561167e575f80fd5b505af1158015611690573d5f803e3d5ffd5b50505050505b6116a06001611f33565b6040518060c001604052806116b3611eeb565b73ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018881526020018681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020014281525060045f61170d6001611cd4565b5f1b81526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015590505086827fd96b33cd6e9829949c7f13033f0a8230587efc5e5d0cff68861945efded28b8a6117fc611eeb565b898960405161180d93929190612ea3565b60405180910390a3600190509695505050505050565b60605f6118306001611cd4565b67ffffffffffffffff81111561184957611848612818565b5b60405190808252806020026020018201604052801561188257816020015b61186f61201e565b8152602001906001900390816118675790505b5090505f805b6118926001611cd4565b8110156119f7578460045f6001846118aa9190612a5c565b5f1b81526020019081526020015f2060020154036119ea5760045f6001836118d29190612a5c565b5f1b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815250508383815181106119d0576119cf612a8f565b5b602002602001018190525081806119e690612b75565b9250505b8080600101915050611888565b508192505050919050565b5f611a0b611ce0565b611a156002611f33565b60405180606001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020015f151581526020014281525060055f611a556002611cd4565b5f1b81526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548160ff02191690831515021790555060408201518160010155905050611ade6002611cd4565b5f1b7f0e50ffa2b79cb01d7c5404bfe02189a4c5b297cd59bc80608efdc52e3b33461683611b0a611eeb565b604051611b18929190612be4565b60405180910390a2611b2a6002611cd4565b5f1b9050919050565b6005602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460ff16908060010154905083565b5f611b8d611ce0565b60055f8381526020019081526020015f205f8082015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555f820160146101000a81549060ff0219169055600182015f90555050611bea6002611f47565b611bf46002611cd4565b5f1b7f3afbc119e23990903d2ef3fdf9210a7b06b5f6f85438b0edfcfbf630ad594fcc611c1f611eeb565b604051611c2c919061272f565b60405180910390a2611c3e6002611cd4565b9050919050565b611c4d611ce0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611cbd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611cb4919061272f565b60405180910390fd5b611cc681611dc8565b50565b6001805f0154905081565b5f815f01549050919050565b611ce8611eeb565b73ffffffffffffffffffffffffffffffffffffffff16611d0661119c565b73ffffffffffffffffffffffffffffffffffffffff1614611d6557611d29611eeb565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611d5c919061272f565b60405180910390fd5b565b611d6f611f9f565b5f8060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611db1611eeb565b604051611dbe919061272f565b60405180910390a1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611e91611ef2565b60015f60146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611ed4611eeb565b604051611ee1919061272f565b60405180910390a1565b5f33905090565b611efa6110ec565b15611f31576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6001815f015f828254019250508190555050565b5f815f015490505f8111611f90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f8790612f22565b60405180910390fd5b60018103825f01819055505050565b611fa76110ec565b611fdd576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60405180608001604052805f80191681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f151581526020015f81525090565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f80191681526020015f80191681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81525090565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f151581526020015f81525090565b5f819050919050565b6120c8816120b6565b82525050565b5f6020820190506120e15f8301846120bf565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b61212281612110565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61215182612128565b9050919050565b61216181612147565b82525050565b5f8115159050919050565b61217b81612167565b82525050565b61218a816120b6565b82525050565b608082015f8201516121a45f850182612119565b5060208201516121b76020850182612158565b5060408201516121ca6040850182612172565b5060608201516121dd6060850182612181565b50505050565b5f6121ee8383612190565b60808301905092915050565b5f602082019050919050565b5f612210826120e7565b61221a81856120f1565b935061222583612101565b805f5b8381101561225557815161223c88826121e3565b9750612247836121fa565b925050600181019050612228565b5085935050505092915050565b5f6020820190508181035f83015261227a8184612206565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b61229c81612110565b81146122a6575f80fd5b50565b5f813590506122b781612293565b92915050565b5f602082840312156122d2576122d161228b565b5b5f6122df848285016122a9565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60c082015f8201516123255f850182612158565b5060208201516123386020850182612119565b50604082015161234b6040850182612119565b50606082015161235e6060850182612181565b5060808201516123716080850182612158565b5060a082015161238460a0850182612181565b50505050565b5f6123958383612311565b60c08301905092915050565b5f602082019050919050565b5f6123b7826122e8565b6123c181856122f2565b93506123cc83612302565b805f5b838110156123fc5781516123e3888261238a565b97506123ee836123a1565b9250506001810190506123cf565b5085935050505092915050565b5f6020820190508181035f83015261242181846123ad565b905092915050565b61243281612147565b811461243c575f80fd5b50565b5f8135905061244d81612429565b92915050565b5f602082840312156124685761246761228b565b5b5f6124758482850161243f565b91505092915050565b5f60ff82169050919050565b6124938161247e565b811461249d575f80fd5b50565b5f813590506124ae8161248a565b92915050565b5f602082840312156124c9576124c861228b565b5b5f6124d6848285016124a0565b91505092915050565b6124e881612167565b82525050565b5f6020820190506125015f8301846124df565b92915050565b5f61251182612128565b9050919050565b61252181612507565b811461252b575f80fd5b50565b5f8135905061253c81612518565b92915050565b61254b816120b6565b8114612555575f80fd5b50565b5f8135905061256681612542565b92915050565b5f80604083850312156125825761258161228b565b5b5f61258f8582860161252e565b92505060206125a085828601612558565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b606082015f8201516125e75f850182612158565b5060208201516125fa6020850182612172565b50604082015161260d6040850182612181565b50505050565b5f61261e83836125d3565b60608301905092915050565b5f602082019050919050565b5f612640826125aa565b61264a81856125b4565b9350612655836125c4565b805f5b8381101561268557815161266c8882612613565b97506126778361262a565b925050600181019050612658565b5085935050505092915050565b5f6020820190508181035f8301526126aa8184612636565b905092915050565b6126bb81612147565b82525050565b6126ca81612110565b82525050565b5f60c0820190506126e35f8301896126b2565b6126f060208301886126c1565b6126fd60408301876126c1565b61270a60608301866120bf565b61271760808301856126b2565b61272460a08301846120bf565b979650505050505050565b5f6020820190506127425f8301846126b2565b92915050565b61275181612167565b811461275b575f80fd5b50565b5f8135905061276c81612748565b92915050565b5f805f606084860312156127895761278861228b565b5b5f612796868287016122a9565b93505060206127a78682870161243f565b92505060406127b88682870161275e565b9150509250925092565b5f80604083850312156127d8576127d761228b565b5b5f6127e585828601612558565b92505060206127f685828601612558565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61284e82612808565b810181811067ffffffffffffffff8211171561286d5761286c612818565b5b80604052505050565b5f61287f612282565b905061288b8282612845565b919050565b5f67ffffffffffffffff8211156128aa576128a9612818565b5b6128b382612808565b9050602081019050919050565b828183375f83830152505050565b5f6128e06128db84612890565b612876565b9050828152602081018484840111156128fc576128fb612804565b5b6129078482856128c0565b509392505050565b5f82601f83011261292357612922612800565b5b81356129338482602086016128ce565b91505092915050565b5f805f805f8060c087890312156129565761295561228b565b5b5f61296389828a016122a9565b965050602061297489828a0161243f565b955050604061298589828a01612558565b945050606061299689828a0161275e565b935050608087013567ffffffffffffffff8111156129b7576129b661228f565b5b6129c389828a0161290f565b92505060a06129d489828a016122a9565b9150509295509295509295565b5f6020820190506129f45f8301846126c1565b92915050565b5f606082019050612a0d5f8301866126b2565b612a1a60208301856124df565b612a2760408301846120bf565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612a66826120b6565b9150612a71836120b6565b9250828201905080821115612a8957612a88612a2f565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81905092915050565b50565b5f612ad45f83612abc565b9150612adf82612ac6565b5f82019050919050565b5f612af382612ac9565b9150819050919050565b5f82825260208201905092915050565b7f4661696c656400000000000000000000000000000000000000000000000000005f82015250565b5f612b41600683612afd565b9150612b4c82612b0d565b602082019050919050565b5f6020820190508181035f830152612b6e81612b35565b9050919050565b5f612b7f826120b6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612bb157612bb0612a2f565b5b600182019050919050565b612bc58161247e565b82525050565b5f602082019050612bde5f830184612bbc565b92915050565b5f604082019050612bf75f8301856126b2565b612c0460208301846126b2565b9392505050565b5f612c15826120b6565b9150612c20836120b6565b9250828202612c2e816120b6565b91508282048414831517612c4557612c44612a2f565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612c83826120b6565b9150612c8e836120b6565b925082612c9e57612c9d612c4c565b5b828204905092915050565b5f612cb38261247e565b9150612cbe8361247e565b9250828203905060ff811115612cd757612cd6612a2f565b5b92915050565b7f4661696c656420746f2073656e6420457468657220746f20746865206d616e615f8201527f6765720000000000000000000000000000000000000000000000000000000000602082015250565b5f612d37602383612afd565b9150612d4282612cdd565b604082019050919050565b5f6020820190508181035f830152612d6481612d2b565b9050919050565b5f81519050612d7981612542565b92915050565b5f60208284031215612d9457612d9361228b565b5b5f612da184828501612d6b565b91505092915050565b5f604082019050612dbd5f8301856120bf565b612dca60208301846120bf565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612e08578082015181840152602081019050612ded565b5f8484015250505050565b5f612e1d82612dd1565b612e278185612ddb565b9350612e37818560208601612deb565b612e4081612808565b840191505092915050565b5f60a082019050612e5e5f8301886126b2565b612e6b60208301876126b2565b612e7860408301866120bf565b612e8560608301856124df565b8181036080830152612e978184612e13565b90509695505050505050565b5f606082019050612eb65f8301866126b2565b612ec360208301856126b2565b612ed060408301846120bf565b949350505050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f7700000000005f82015250565b5f612f0c601b83612afd565b9150612f1782612ed8565b602082019050919050565b5f6020820190508181035f830152612f3981612f00565b905091905056fea2646970667358221220fbe700276f2d99e495cbad5d5faa8c5c21e783c5363adbf45213b4ac37c8e13a64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x2B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xA0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x97 SWAP2 SWAP1 PUSH3 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xB1 DUP2 PUSH3 0x1AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xDD PUSH1 0x2 PUSH3 0x26B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x5 PUSH0 PUSH3 0x125 PUSH1 0x2 PUSH3 0x27F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH3 0x2E9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2B6 DUP3 PUSH3 0x28B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C8 DUP2 PUSH3 0x2AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2E3 PUSH0 DUP4 ADD DUP5 PUSH3 0x2BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F76 DUP1 PUSH3 0x2F7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x165 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75E6E600 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xB2F7C6E0 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xE6062E1A GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE6062E1A EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF1A3B943 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xF7EDBBAC EQ PUSH2 0x5D8 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0xB2F7C6E0 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xCACF11E7 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xD48BFCA7 EQ PUSH2 0x4FA JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x75E6E600 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x9230B2BC EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x95A7A953 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xA37B06D4 EQ PUSH2 0x452 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x443910E0 GT PUSH2 0x122 JUMPI DUP1 PUSH4 0x443910E0 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x4DF71212 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x56A6D9EF EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x59770438 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x355 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x273CBAA0 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x3D496362 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x225 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH2 0xA26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH2 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH2 0xE67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x10EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH2 0x1101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH2 0x118A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x400 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x478 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x27C2 JUMP JUMPDEST PUSH2 0x129F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x520 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x29E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x59A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH2 0x1C45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EC PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x616 PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x668 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x655 PUSH2 0x1FDF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x64D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH2 0x677 PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP4 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 PUSH1 0x1 DUP6 PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 PUSH1 0x1 DUP6 PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 PUSH1 0x1 DUP6 PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x768 JUMPI PUSH2 0x767 PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x66D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x790 PUSH2 0x1CE0 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 PUSH2 0x79D PUSH2 0x119C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7C0 SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7FA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83A SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x854 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x86D JUMPI PUSH2 0x86C PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8A6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x893 PUSH2 0x201E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x88B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0x8B6 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA1B JUMPI DUP5 PUSH1 0x4 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0xA0E JUMPI PUSH1 0x4 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9F4 JUMPI PUSH2 0x9F3 PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xA0A SWAP1 PUSH2 0x2B75 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x8AC JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2E PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0xA36 PUSH2 0x1D67 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA45 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5D PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA97 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA84 PUSH2 0x201E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA7C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0xAA7 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC56 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 PUSH1 0x1 DUP5 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC49 JUMPI PUSH1 0x4 PUSH0 PUSH1 0x1 DUP4 PUSH2 0xB31 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC2F JUMPI PUSH2 0xC2E PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xC45 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA9D JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xC6E PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC87 JUMPI PUSH2 0xC86 PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCC0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xCAD PUSH2 0x201E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCA5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH2 0xCCF PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x4 PUSH0 PUSH1 0x1 DUP4 PUSH2 0xCE6 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDE4 JUMPI PUSH2 0xDE3 PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xCC5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xE0D PUSH2 0x1CE0 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB5C0FBE3C7E536E86EA6D91EC04BD37128A9BF1E981E06DAE9834031254831F9 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE56 SWAP2 SWAP1 PUSH2 0x2BCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6F PUSH2 0x1CE0 JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xE94 SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xECE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0E SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xF29 PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF42 JUMPI PUSH2 0xF41 PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF7B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xF68 PUSH2 0x2080 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF60 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0xF8B PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x10E1 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 PUSH1 0x1 DUP5 PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D4 JUMPI PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x1015 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10BA JUMPI PUSH2 0x10B9 PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x10D0 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF81 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1109 PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0x1112 PUSH0 PUSH2 0x1DC8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x1192 PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0x119A PUSH2 0x1E89 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x11D7 PUSH2 0x1CE0 JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH32 0x178CC6533AFB1053A370099DE33A8F4A6C10ADF023EBA537C33721E13DC1273 DUP5 PUSH2 0x127E PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128C SWAP3 SWAP2 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 DUP3 DUP5 PUSH2 0x12AE SWAP2 SWAP1 PUSH2 0x2C0B JUMP JUMPDEST LT ISZERO PUSH2 0x12B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x64 DUP3 DUP5 PUSH2 0x12C6 SWAP2 SWAP1 PUSH2 0x2C0B JUMP JUMPDEST PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x2C79 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12E1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SHL DUP3 SUB PUSH2 0x1403 JUMPI PUSH0 CALLVALUE SUB PUSH2 0x132F JUMPI CALLVALUE PUSH1 0x40 MLOAD PUSH32 0x9266535100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x136E DUP8 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x64 PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x129F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137A SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F4 SWAP1 PUSH2 0x2D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1696 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65AEAA95 ADDRESS PUSH2 0x145B PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1478 SWAP3 SWAP2 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1493 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B7 SWAP2 SWAP1 PUSH2 0x2D7F JUMP JUMPDEST SWAP1 POP DUP6 DUP2 EQ PUSH2 0x14FF JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH32 0xA24F8BE900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F6 SWAP3 SWAP2 SWAP1 PUSH2 0x2DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x760D9BBA PUSH2 0x1555 PUSH2 0x1EEB JUMP JUMPDEST DUP10 PUSH2 0x157D DUP11 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x64 PUSH2 0x1575 SWAP2 SWAP1 PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x129F JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E4B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x760D9BBA PUSH2 0x1622 PUSH2 0x1EEB JUMP JUMPDEST PUSH2 0x162A PUSH2 0x119C JUMP JUMPDEST PUSH2 0x1645 DUP11 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH2 0x129F JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1667 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E4B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x167E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1690 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH2 0x16A0 PUSH1 0x1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x16B3 PUSH2 0x1EEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x4 PUSH0 PUSH2 0x170D PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP DUP7 DUP3 PUSH32 0xD96B33CD6E9829949C7F13033F0A8230587EFC5E5D0CFF68861945EFDED28B8A PUSH2 0x17FC PUSH2 0x1EEB JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x180D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1830 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1848 PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1882 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x186F PUSH2 0x201E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1867 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0x1892 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x19F7 JUMPI DUP5 PUSH1 0x4 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x18AA SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x19EA JUMPI PUSH1 0x4 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x18D2 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x19D0 JUMPI PUSH2 0x19CF PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x19E6 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1888 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0B PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0x1A15 PUSH1 0x2 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x5 PUSH0 PUSH2 0x1A55 PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0x1ADE PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH0 SHL PUSH32 0xE50FFA2B79CB01D7C5404BFE02189A4C5B297CD59BC80608EFDC52E3B334616 DUP4 PUSH2 0x1B0A PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B18 SWAP3 SWAP2 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1B2A PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH2 0x1B8D PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP PUSH2 0x1BEA PUSH1 0x2 PUSH2 0x1F47 JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH0 SHL PUSH32 0x3AFBC119E23990903D2EF3FDF9210A7B06B5F6F85438B0EDFCFBF630AD594FCC PUSH2 0x1C1F PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2C SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1C3E PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C4D PUSH2 0x1CE0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB4 SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CC6 DUP2 PUSH2 0x1DC8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE8 PUSH2 0x1EEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D06 PUSH2 0x119C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D65 JUMPI PUSH2 0x1D29 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5C SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1D6F PUSH2 0x1F9F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1DB1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DBE SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1E91 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1ED4 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE1 SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1EFA PUSH2 0x10EC JUMP JUMPDEST ISZERO PUSH2 0x1F31 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1F90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F87 SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1FA7 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x1FDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C8 DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x20BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2122 DUP2 PUSH2 0x2110 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2151 DUP3 PUSH2 0x2128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2161 DUP2 PUSH2 0x2147 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x217B DUP2 PUSH2 0x2167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x218A DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x21A4 PUSH0 DUP6 ADD DUP3 PUSH2 0x2119 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x21B7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2158 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x21CA PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2172 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x21DD PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2181 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21EE DUP4 DUP4 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2210 DUP3 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x221A DUP2 DUP6 PUSH2 0x20F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2225 DUP4 PUSH2 0x2101 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2255 JUMPI DUP2 MLOAD PUSH2 0x223C DUP9 DUP3 PUSH2 0x21E3 JUMP JUMPDEST SWAP8 POP PUSH2 0x2247 DUP4 PUSH2 0x21FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2228 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x227A DUP2 DUP5 PUSH2 0x2206 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x229C DUP2 PUSH2 0x2110 JUMP JUMPDEST DUP2 EQ PUSH2 0x22A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22B7 DUP2 PUSH2 0x2293 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D2 JUMPI PUSH2 0x22D1 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22DF DUP5 DUP3 DUP6 ADD PUSH2 0x22A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x2325 PUSH0 DUP6 ADD DUP3 PUSH2 0x2158 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2338 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2119 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x234B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2119 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x235E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2181 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2371 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2158 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2384 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2181 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2395 DUP4 DUP4 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B7 DUP3 PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x23C1 DUP2 DUP6 PUSH2 0x22F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x23CC DUP4 PUSH2 0x2302 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23FC JUMPI DUP2 MLOAD PUSH2 0x23E3 DUP9 DUP3 PUSH2 0x238A JUMP JUMPDEST SWAP8 POP PUSH2 0x23EE DUP4 PUSH2 0x23A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23CF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2421 DUP2 DUP5 PUSH2 0x23AD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2432 DUP2 PUSH2 0x2147 JUMP JUMPDEST DUP2 EQ PUSH2 0x243C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x244D DUP2 PUSH2 0x2429 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2475 DUP5 DUP3 DUP6 ADD PUSH2 0x243F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2493 DUP2 PUSH2 0x247E JUMP JUMPDEST DUP2 EQ PUSH2 0x249D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24AE DUP2 PUSH2 0x248A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C9 JUMPI PUSH2 0x24C8 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24D6 DUP5 DUP3 DUP6 ADD PUSH2 0x24A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24E8 DUP2 PUSH2 0x2167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2501 PUSH0 DUP4 ADD DUP5 PUSH2 0x24DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2511 DUP3 PUSH2 0x2128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2521 DUP2 PUSH2 0x2507 JUMP JUMPDEST DUP2 EQ PUSH2 0x252B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x253C DUP2 PUSH2 0x2518 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x254B DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2555 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2566 DUP2 PUSH2 0x2542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2582 JUMPI PUSH2 0x2581 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x258F DUP6 DUP3 DUP7 ADD PUSH2 0x252E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25A0 DUP6 DUP3 DUP7 ADD PUSH2 0x2558 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x25E7 PUSH0 DUP6 ADD DUP3 PUSH2 0x2158 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x25FA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2172 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x260D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2181 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x261E DUP4 DUP4 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2640 DUP3 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x264A DUP2 DUP6 PUSH2 0x25B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2655 DUP4 PUSH2 0x25C4 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2685 JUMPI DUP2 MLOAD PUSH2 0x266C DUP9 DUP3 PUSH2 0x2613 JUMP JUMPDEST SWAP8 POP PUSH2 0x2677 DUP4 PUSH2 0x262A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2658 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26AA DUP2 DUP5 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26BB DUP2 PUSH2 0x2147 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26CA DUP2 PUSH2 0x2110 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x26E3 PUSH0 DUP4 ADD DUP10 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x26F0 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0x26FD PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0x270A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x2717 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2724 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x20BF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2742 PUSH0 DUP4 ADD DUP5 PUSH2 0x26B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2751 DUP2 PUSH2 0x2167 JUMP JUMPDEST DUP2 EQ PUSH2 0x275B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x276C DUP2 PUSH2 0x2748 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2789 JUMPI PUSH2 0x2788 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2796 DUP7 DUP3 DUP8 ADD PUSH2 0x22A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x27A7 DUP7 DUP3 DUP8 ADD PUSH2 0x243F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x27B8 DUP7 DUP3 DUP8 ADD PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27D8 JUMPI PUSH2 0x27D7 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27E5 DUP6 DUP3 DUP7 ADD PUSH2 0x2558 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27F6 DUP6 DUP3 DUP7 ADD PUSH2 0x2558 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x284E DUP3 PUSH2 0x2808 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x286D JUMPI PUSH2 0x286C PUSH2 0x2818 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x287F PUSH2 0x2282 JUMP JUMPDEST SWAP1 POP PUSH2 0x288B DUP3 DUP3 PUSH2 0x2845 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28AA JUMPI PUSH2 0x28A9 PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH2 0x28B3 DUP3 PUSH2 0x2808 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28E0 PUSH2 0x28DB DUP5 PUSH2 0x2890 JUMP JUMPDEST PUSH2 0x2876 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x28FC JUMPI PUSH2 0x28FB PUSH2 0x2804 JUMP JUMPDEST JUMPDEST PUSH2 0x2907 DUP5 DUP3 DUP6 PUSH2 0x28C0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2923 JUMPI PUSH2 0x2922 PUSH2 0x2800 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2933 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2956 JUMPI PUSH2 0x2955 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2963 DUP10 DUP3 DUP11 ADD PUSH2 0x22A9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2974 DUP10 DUP3 DUP11 ADD PUSH2 0x243F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2985 DUP10 DUP3 DUP11 ADD PUSH2 0x2558 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2996 DUP10 DUP3 DUP11 ADD PUSH2 0x275E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29B7 JUMPI PUSH2 0x29B6 PUSH2 0x228F JUMP JUMPDEST JUMPDEST PUSH2 0x29C3 DUP10 DUP3 DUP11 ADD PUSH2 0x290F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x29D4 DUP10 DUP3 DUP11 ADD PUSH2 0x22A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x26C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A0D PUSH0 DUP4 ADD DUP7 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2A1A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x2A27 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A66 DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A71 DUP4 PUSH2 0x20B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A89 JUMPI PUSH2 0x2A88 PUSH2 0x2A2F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2AD4 PUSH0 DUP4 PUSH2 0x2ABC JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADF DUP3 PUSH2 0x2AC6 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AF3 DUP3 PUSH2 0x2AC9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C65640000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B41 PUSH1 0x6 DUP4 PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4C DUP3 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6E DUP2 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B7F DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2BB1 JUMPI PUSH2 0x2BB0 PUSH2 0x2A2F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC5 DUP2 PUSH2 0x247E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BDE PUSH0 DUP4 ADD DUP5 PUSH2 0x2BBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BF7 PUSH0 DUP4 ADD DUP6 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2C04 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26B2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C15 DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C20 DUP4 PUSH2 0x20B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2C2E DUP2 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2C45 JUMPI PUSH2 0x2C44 PUSH2 0x2A2F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2C83 DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C8E DUP4 PUSH2 0x20B6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C9E JUMPI PUSH2 0x2C9D PUSH2 0x2C4C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CB3 DUP3 PUSH2 0x247E JUMP JUMPDEST SWAP2 POP PUSH2 0x2CBE DUP4 PUSH2 0x247E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x2CD7 JUMPI PUSH2 0x2CD6 PUSH2 0x2A2F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E6420457468657220746F20746865206D616E61 PUSH0 DUP3 ADD MSTORE PUSH32 0x6765720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D37 PUSH1 0x23 DUP4 PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP PUSH2 0x2D42 DUP3 PUSH2 0x2CDD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D64 DUP2 PUSH2 0x2D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D79 DUP2 PUSH2 0x2542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D94 JUMPI PUSH2 0x2D93 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DA1 DUP5 DUP3 DUP6 ADD PUSH2 0x2D6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DBD PUSH0 DUP4 ADD DUP6 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x2DCA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E08 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DED JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E1D DUP3 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x2E27 DUP2 DUP6 PUSH2 0x2DDB JUMP JUMPDEST SWAP4 POP PUSH2 0x2E37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DEB JUMP JUMPDEST PUSH2 0x2E40 DUP2 PUSH2 0x2808 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2E5E PUSH0 DUP4 ADD DUP9 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2E6B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2E78 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x2E85 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x24DF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E97 DUP2 DUP5 PUSH2 0x2E13 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EB6 PUSH0 DUP4 ADD DUP7 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2EC3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2ED0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F0C PUSH1 0x1B DUP4 PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP PUSH2 0x2F17 DUP3 PUSH2 0x2ED8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F39 DUP2 PUSH2 0x2F00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xE7 STOP 0x27 PUSH16 0x2D99E495CBAD5D5FAA8C5C21E783C536 GASPRICE 0xDB DELEGATECALL MSTORE SGT 0xB4 0xAC CALLDATACOPY 0xC8 0xE1 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "671:7565:10:-:0;;;874:1;862:13;;;;;;;;;;;;;;;;;;;;1375:155;;;;;;;;;;706:10;1318:1:13;1294:26;;:12;:26;;;1290:95;;1371:1;1343:31;;;;;;;;;;;:::i;:::-;;;;;;;;1290:95;1394:32;1413:12;1394:18;;;:32;;:::i;:::-;1246:187;1262:5:14;1252:7;;:15;;;;;;;;;;;;;;;;;;1399:25:10;:13;:23;;;:25;;:::i;:::-;1476:47;;;;;;;;1496:1;1476:47;;;;;;1500:5;1476:47;;;;;;1507:15;1476:47;;;1434:5;:39;1448:23;:13;:21;;;:23;;:::i;:::-;1440:32;;1434:39;;;;;;;;;;;:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:7565;;2933:187:13;3006:16;3025:6;;;;;;;;;;;3006:25;;3050:8;3041:6;;:17;;;;;;;;;;;;;;;;;;3104:8;3073:40;;3094:8;3073:40;;;;;;;;;;;;2996:124;2933:187;:::o;945:123:5:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;7:126:15:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;671:7565:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_2911": {
									"entryPoint": 7392,
									"id": 2911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_donateCounter_1831": {
									"entryPoint": 7369,
									"id": 1831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_287": {
									"entryPoint": 7915,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_3074": {
									"entryPoint": 7817,
									"id": 3074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_3045": {
									"entryPoint": 7922,
									"id": 3045,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_3058": {
									"entryPoint": 8095,
									"id": 3058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_tokenCounter_1834": {
									"entryPoint": 4547,
									"id": 1834,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_2973": {
									"entryPoint": 7624,
									"id": 2973,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_3090": {
									"entryPoint": 7527,
									"id": 3090,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addToken_2582": {
									"entryPoint": 6658,
									"id": 2582,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calcPercentage_2525": {
									"entryPoint": 4767,
									"id": 2525,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@current_323": {
									"entryPoint": 7380,
									"id": 323,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_365": {
									"entryPoint": 8007,
									"id": 365,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deleteToken_2618": {
									"entryPoint": 7044,
									"id": 2618,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@donate_2498": {
									"entryPoint": 4824,
									"id": 2498,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@donation_1871": {
									"entryPoint": 4372,
									"id": 1871,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_2745": {
									"entryPoint": 1538,
									"id": 2745,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDonationByAppId_2332": {
									"entryPoint": 6179,
									"id": 2332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getDonationByToekn_2258": {
									"entryPoint": 2119,
									"id": 2258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getDonationList_2107": {
									"entryPoint": 3169,
									"id": 2107,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDonation_2184": {
									"entryPoint": 2616,
									"id": 2184,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenList_1982": {
									"entryPoint": 1545,
									"id": 1982,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getToken_2056": {
									"entryPoint": 3868,
									"id": 2056,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_337": {
									"entryPoint": 7987,
									"id": 337,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_2894": {
									"entryPoint": 4508,
									"id": 2894,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2755": {
									"entryPoint": 4490,
									"id": 2755,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_3033": {
									"entryPoint": 4332,
									"id": 3033,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_2925": {
									"entryPoint": 4353,
									"id": 2925,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_1876": {
									"entryPoint": 6963,
									"id": 1876,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferBalance_2732": {
									"entryPoint": 3687,
									"id": 2732,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_2953": {
									"entryPoint": 7237,
									"id": 2953,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_2765": {
									"entryPoint": 2598,
									"id": 2765,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateToken_2656": {
									"entryPoint": 4558,
									"id": 2656,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@updateToken_2677": {
									"entryPoint": 3588,
									"id": 2677,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@withdraw_2707": {
									"entryPoint": 1928,
									"id": 2707,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 10446,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 9518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 10078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 10511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 11627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 9376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 9580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_addresst_bool": {
									"entryPoint": 10098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32t_addresst_uint256t_boolt_bytes_memory_ptrt_bytes32": {
									"entryPoint": 10556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 11647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 10178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 9396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_DonationStruct_$1850_memory_ptr_to_t_struct$_DonationStruct_$1850_memory_ptr": {
									"entryPoint": 9098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_TokenExportStruct_$1866_memory_ptr_to_t_struct$_TokenExportStruct_$1866_memory_ptr": {
									"entryPoint": 8675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_TokenStruct_$1857_memory_ptr_to_t_struct$_TokenStruct_$1857_memory_ptr": {
									"entryPoint": 9747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 8536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 8562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32": {
									"entryPoint": 8473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_DonationStruct_$1850_memory_ptr_to_t_struct$_DonationStruct_$1850_memory_ptr": {
									"entryPoint": 8977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_TokenExportStruct_$1866_memory_ptr_to_t_struct$_TokenExportStruct_$1866_memory_ptr": {
									"entryPoint": 8592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_TokenStruct_$1857_memory_ptr_to_t_struct$_TokenStruct_$1857_memory_ptr": {
									"entryPoint": 9683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 11196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 11236,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11939,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11851,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bool_t_uint256__to_t_address_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 10746,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32_t_bytes32_t_uint256_t_address_t_uint256__to_t_address_t_bytes32_t_bytes32_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9936,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 10721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11690,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 11005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 11433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 9479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 10432,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 11755,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 10309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 11125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11340,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 10240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 10244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f": {
									"entryPoint": 11992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23": {
									"entryPoint": 11021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694": {
									"entryPoint": 11485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 10950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 9496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 9354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:32195:15",
										"nodeType": "YulBlock",
										"src": "0:32195:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:15",
													"nodeType": "YulBlock",
													"src": "52:32:15",
													"statements": [
														{
															"nativeSrc": "62:16:15",
															"nodeType": "YulAssignment",
															"src": "62:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:15",
																"nodeType": "YulIdentifier",
																"src": "73:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:15",
														"nodeType": "YulTypedName",
														"src": "34:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:15",
														"nodeType": "YulTypedName",
														"src": "44:7:15",
														"type": ""
													}
												],
												"src": "7:77:15"
											},
											{
												"body": {
													"nativeSrc": "155:53:15",
													"nodeType": "YulBlock",
													"src": "155:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:15"
																		},
																		"nativeSrc": "177:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:15"
																},
																"nativeSrc": "165:37:15",
																"nodeType": "YulFunctionCall",
																"src": "165:37:15"
															},
															"nativeSrc": "165:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:15",
														"nodeType": "YulTypedName",
														"src": "143:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:15",
														"nodeType": "YulTypedName",
														"src": "150:3:15",
														"type": ""
													}
												],
												"src": "90:118:15"
											},
											{
												"body": {
													"nativeSrc": "312:124:15",
													"nodeType": "YulBlock",
													"src": "312:124:15",
													"statements": [
														{
															"nativeSrc": "322:26:15",
															"nodeType": "YulAssignment",
															"src": "322:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:15",
																		"nodeType": "YulLiteral",
																		"src": "345:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:15"
																},
																"nativeSrc": "330:18:15",
																"nodeType": "YulFunctionCall",
																"src": "330:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:15",
																				"nodeType": "YulLiteral",
																				"src": "426:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:15"
																		},
																		"nativeSrc": "411:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:15"
																},
																"nativeSrc": "358:71:15",
																"nodeType": "YulFunctionCall",
																"src": "358:71:15"
															},
															"nativeSrc": "358:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:15",
														"nodeType": "YulTypedName",
														"src": "284:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:15",
														"nodeType": "YulTypedName",
														"src": "296:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:15",
														"nodeType": "YulTypedName",
														"src": "307:4:15",
														"type": ""
													}
												],
												"src": "214:222:15"
											},
											{
												"body": {
													"nativeSrc": "551:40:15",
													"nodeType": "YulBlock",
													"src": "551:40:15",
													"statements": [
														{
															"nativeSrc": "562:22:15",
															"nodeType": "YulAssignment",
															"src": "562:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "578:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "578:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "572:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "572:5:15"
																},
																"nativeSrc": "572:12:15",
																"nodeType": "YulFunctionCall",
																"src": "572:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "562:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "442:149:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "534:5:15",
														"nodeType": "YulTypedName",
														"src": "534:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "544:6:15",
														"nodeType": "YulTypedName",
														"src": "544:6:15",
														"type": ""
													}
												],
												"src": "442:149:15"
											},
											{
												"body": {
													"nativeSrc": "743:73:15",
													"nodeType": "YulBlock",
													"src": "743:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "760:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "760:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "765:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "765:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "753:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "753:6:15"
																},
																"nativeSrc": "753:19:15",
																"nodeType": "YulFunctionCall",
																"src": "753:19:15"
															},
															"nativeSrc": "753:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "753:19:15"
														},
														{
															"nativeSrc": "781:29:15",
															"nodeType": "YulAssignment",
															"src": "781:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "800:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "800:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "805:4:15",
																		"nodeType": "YulLiteral",
																		"src": "805:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "796:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "796:3:15"
																},
																"nativeSrc": "796:14:15",
																"nodeType": "YulFunctionCall",
																"src": "796:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "781:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "781:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "597:219:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "715:3:15",
														"nodeType": "YulTypedName",
														"src": "715:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "720:6:15",
														"nodeType": "YulTypedName",
														"src": "720:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "731:11:15",
														"nodeType": "YulTypedName",
														"src": "731:11:15",
														"type": ""
													}
												],
												"src": "597:219:15"
											},
											{
												"body": {
													"nativeSrc": "929:60:15",
													"nodeType": "YulBlock",
													"src": "929:60:15",
													"statements": [
														{
															"nativeSrc": "939:11:15",
															"nodeType": "YulAssignment",
															"src": "939:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "947:3:15",
																"nodeType": "YulIdentifier",
																"src": "947:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "939:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "939:4:15"
																}
															]
														},
														{
															"nativeSrc": "960:22:15",
															"nodeType": "YulAssignment",
															"src": "960:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "972:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "972:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "977:4:15",
																		"nodeType": "YulLiteral",
																		"src": "977:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "968:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "968:3:15"
																},
																"nativeSrc": "968:14:15",
																"nodeType": "YulFunctionCall",
																"src": "968:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "960:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "960:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "822:167:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "916:3:15",
														"nodeType": "YulTypedName",
														"src": "916:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "924:4:15",
														"nodeType": "YulTypedName",
														"src": "924:4:15",
														"type": ""
													}
												],
												"src": "822:167:15"
											},
											{
												"body": {
													"nativeSrc": "1040:32:15",
													"nodeType": "YulBlock",
													"src": "1040:32:15",
													"statements": [
														{
															"nativeSrc": "1050:16:15",
															"nodeType": "YulAssignment",
															"src": "1050:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "1061:5:15",
																"nodeType": "YulIdentifier",
																"src": "1061:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1050:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1050:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "995:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1022:5:15",
														"nodeType": "YulTypedName",
														"src": "1022:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1032:7:15",
														"nodeType": "YulTypedName",
														"src": "1032:7:15",
														"type": ""
													}
												],
												"src": "995:77:15"
											},
											{
												"body": {
													"nativeSrc": "1133:53:15",
													"nodeType": "YulBlock",
													"src": "1133:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1150:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1150:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1173:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1173:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "1155:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1155:17:15"
																		},
																		"nativeSrc": "1155:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1155:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1143:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1143:6:15"
																},
																"nativeSrc": "1143:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1143:37:15"
															},
															"nativeSrc": "1143:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1143:37:15"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32",
												"nativeSrc": "1078:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1121:5:15",
														"nodeType": "YulTypedName",
														"src": "1121:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1128:3:15",
														"nodeType": "YulTypedName",
														"src": "1128:3:15",
														"type": ""
													}
												],
												"src": "1078:108:15"
											},
											{
												"body": {
													"nativeSrc": "1237:81:15",
													"nodeType": "YulBlock",
													"src": "1237:81:15",
													"statements": [
														{
															"nativeSrc": "1247:65:15",
															"nodeType": "YulAssignment",
															"src": "1247:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1262:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1262:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1269:42:15",
																		"nodeType": "YulLiteral",
																		"src": "1269:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1258:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1258:3:15"
																},
																"nativeSrc": "1258:54:15",
																"nodeType": "YulFunctionCall",
																"src": "1258:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1247:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1247:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1192:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1219:5:15",
														"nodeType": "YulTypedName",
														"src": "1219:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1229:7:15",
														"nodeType": "YulTypedName",
														"src": "1229:7:15",
														"type": ""
													}
												],
												"src": "1192:126:15"
											},
											{
												"body": {
													"nativeSrc": "1369:51:15",
													"nodeType": "YulBlock",
													"src": "1369:51:15",
													"statements": [
														{
															"nativeSrc": "1379:35:15",
															"nodeType": "YulAssignment",
															"src": "1379:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1408:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1408:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1390:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "1390:17:15"
																},
																"nativeSrc": "1390:24:15",
																"nodeType": "YulFunctionCall",
																"src": "1390:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1379:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1379:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1324:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1351:5:15",
														"nodeType": "YulTypedName",
														"src": "1351:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1361:7:15",
														"nodeType": "YulTypedName",
														"src": "1361:7:15",
														"type": ""
													}
												],
												"src": "1324:96:15"
											},
											{
												"body": {
													"nativeSrc": "1481:53:15",
													"nodeType": "YulBlock",
													"src": "1481:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1498:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1521:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1521:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1503:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1503:17:15"
																		},
																		"nativeSrc": "1503:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1503:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1491:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:15"
																},
																"nativeSrc": "1491:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1491:37:15"
															},
															"nativeSrc": "1491:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1491:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "1426:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1469:5:15",
														"nodeType": "YulTypedName",
														"src": "1469:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1476:3:15",
														"nodeType": "YulTypedName",
														"src": "1476:3:15",
														"type": ""
													}
												],
												"src": "1426:108:15"
											},
											{
												"body": {
													"nativeSrc": "1582:48:15",
													"nodeType": "YulBlock",
													"src": "1582:48:15",
													"statements": [
														{
															"nativeSrc": "1592:32:15",
															"nodeType": "YulAssignment",
															"src": "1592:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1617:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1617:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1610:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "1610:6:15"
																		},
																		"nativeSrc": "1610:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1610:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1603:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1603:6:15"
																},
																"nativeSrc": "1603:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1603:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1592:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1592:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1540:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1564:5:15",
														"nodeType": "YulTypedName",
														"src": "1564:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1574:7:15",
														"nodeType": "YulTypedName",
														"src": "1574:7:15",
														"type": ""
													}
												],
												"src": "1540:90:15"
											},
											{
												"body": {
													"nativeSrc": "1685:50:15",
													"nodeType": "YulBlock",
													"src": "1685:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1702:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1702:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1722:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1722:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1707:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "1707:14:15"
																		},
																		"nativeSrc": "1707:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1707:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1695:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:15"
																},
																"nativeSrc": "1695:34:15",
																"nodeType": "YulFunctionCall",
																"src": "1695:34:15"
															},
															"nativeSrc": "1695:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "1695:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "1636:99:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1673:5:15",
														"nodeType": "YulTypedName",
														"src": "1673:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1680:3:15",
														"nodeType": "YulTypedName",
														"src": "1680:3:15",
														"type": ""
													}
												],
												"src": "1636:99:15"
											},
											{
												"body": {
													"nativeSrc": "1796:53:15",
													"nodeType": "YulBlock",
													"src": "1796:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1813:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1813:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1836:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1836:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1818:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "1818:17:15"
																		},
																		"nativeSrc": "1818:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1806:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1806:6:15"
																},
																"nativeSrc": "1806:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1806:37:15"
															},
															"nativeSrc": "1806:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "1806:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "1741:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1784:5:15",
														"nodeType": "YulTypedName",
														"src": "1784:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1791:3:15",
														"nodeType": "YulTypedName",
														"src": "1791:3:15",
														"type": ""
													}
												],
												"src": "1741:108:15"
											},
											{
												"body": {
													"nativeSrc": "2071:730:15",
													"nodeType": "YulBlock",
													"src": "2071:730:15",
													"statements": [
														{
															"nativeSrc": "2081:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2097:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2097:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2102:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2102:4:15",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2093:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:15"
																},
																"nativeSrc": "2093:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2093:14:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "2085:4:15",
																	"nodeType": "YulTypedName",
																	"src": "2085:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2117:162:15",
															"nodeType": "YulBlock",
															"src": "2117:162:15",
															"statements": [
																{
																	"nativeSrc": "2150:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2150:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2180:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2180:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2187:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2187:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2176:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2176:3:15"
																				},
																				"nativeSrc": "2176:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2176:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2170:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "2170:5:15"
																		},
																		"nativeSrc": "2170:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2170:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2154:12:15",
																			"nodeType": "YulTypedName",
																			"src": "2154:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2240:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "2240:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2258:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2258:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2263:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2263:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2254:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2254:3:15"
																				},
																				"nativeSrc": "2254:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2254:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes32_to_t_bytes32",
																			"nativeSrc": "2206:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "2206:33:15"
																		},
																		"nativeSrc": "2206:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2206:63:15"
																	},
																	"nativeSrc": "2206:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "2206:63:15"
																}
															]
														},
														{
															"nativeSrc": "2289:164:15",
															"nodeType": "YulBlock",
															"src": "2289:164:15",
															"statements": [
																{
																	"nativeSrc": "2324:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2324:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2354:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2354:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2361:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2361:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2350:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2350:3:15"
																				},
																				"nativeSrc": "2350:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2350:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2344:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "2344:5:15"
																		},
																		"nativeSrc": "2344:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2344:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2328:12:15",
																			"nodeType": "YulTypedName",
																			"src": "2328:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2414:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "2414:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2432:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2432:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2437:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2437:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2428:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2428:3:15"
																				},
																				"nativeSrc": "2428:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2428:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "2380:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "2380:33:15"
																		},
																		"nativeSrc": "2380:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2380:63:15"
																	},
																	"nativeSrc": "2380:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "2380:63:15"
																}
															]
														},
														{
															"nativeSrc": "2463:159:15",
															"nodeType": "YulBlock",
															"src": "2463:159:15",
															"statements": [
																{
																	"nativeSrc": "2499:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2499:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2529:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2529:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2536:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2536:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2525:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2525:3:15"
																				},
																				"nativeSrc": "2525:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2525:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2519:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "2519:5:15"
																		},
																		"nativeSrc": "2519:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2519:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2503:12:15",
																			"nodeType": "YulTypedName",
																			"src": "2503:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2583:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "2583:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2601:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2601:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2606:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2606:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2597:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2597:3:15"
																				},
																				"nativeSrc": "2597:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2597:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "2555:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "2555:27:15"
																		},
																		"nativeSrc": "2555:57:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2555:57:15"
																	},
																	"nativeSrc": "2555:57:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "2555:57:15"
																}
															]
														},
														{
															"nativeSrc": "2632:162:15",
															"nodeType": "YulBlock",
															"src": "2632:162:15",
															"statements": [
																{
																	"nativeSrc": "2665:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2665:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2695:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2695:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2702:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2702:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2691:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:15"
																				},
																				"nativeSrc": "2691:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2691:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2685:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "2685:5:15"
																		},
																		"nativeSrc": "2685:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2685:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2669:12:15",
																			"nodeType": "YulTypedName",
																			"src": "2669:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2755:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "2755:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2773:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2773:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2778:4:15",
																						"nodeType": "YulLiteral",
																						"src": "2778:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2769:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:15"
																				},
																				"nativeSrc": "2769:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2769:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2721:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "2721:33:15"
																		},
																		"nativeSrc": "2721:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2721:63:15"
																	},
																	"nativeSrc": "2721:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "2721:63:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_TokenExportStruct_$1866_memory_ptr_to_t_struct$_TokenExportStruct_$1866_memory_ptr",
												"nativeSrc": "1945:856:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2058:5:15",
														"nodeType": "YulTypedName",
														"src": "2058:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2065:3:15",
														"nodeType": "YulTypedName",
														"src": "2065:3:15",
														"type": ""
													}
												],
												"src": "1945:856:15"
											},
											{
												"body": {
													"nativeSrc": "2957:169:15",
													"nodeType": "YulBlock",
													"src": "2957:169:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3071:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3071:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3079:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3079:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_TokenExportStruct_$1866_memory_ptr_to_t_struct$_TokenExportStruct_$1866_memory_ptr",
																	"nativeSrc": "2967:103:15",
																	"nodeType": "YulIdentifier",
																	"src": "2967:103:15"
																},
																"nativeSrc": "2967:116:15",
																"nodeType": "YulFunctionCall",
																"src": "2967:116:15"
															},
															"nativeSrc": "2967:116:15",
															"nodeType": "YulExpressionStatement",
															"src": "2967:116:15"
														},
														{
															"nativeSrc": "3092:28:15",
															"nodeType": "YulAssignment",
															"src": "3092:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3110:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3110:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3115:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3115:4:15",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3106:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3106:3:15"
																},
																"nativeSrc": "3106:14:15",
																"nodeType": "YulFunctionCall",
																"src": "3106:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3092:10:15",
																	"nodeType": "YulIdentifier",
																	"src": "3092:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_TokenExportStruct_$1866_memory_ptr_to_t_struct$_TokenExportStruct_$1866_memory_ptr",
												"nativeSrc": "2807:319:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "2930:6:15",
														"nodeType": "YulTypedName",
														"src": "2930:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2938:3:15",
														"nodeType": "YulTypedName",
														"src": "2938:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "2946:10:15",
														"nodeType": "YulTypedName",
														"src": "2946:10:15",
														"type": ""
													}
												],
												"src": "2807:319:15"
											},
											{
												"body": {
													"nativeSrc": "3242:38:15",
													"nodeType": "YulBlock",
													"src": "3242:38:15",
													"statements": [
														{
															"nativeSrc": "3252:22:15",
															"nodeType": "YulAssignment",
															"src": "3252:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3264:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3264:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3269:4:15",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3260:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3260:3:15"
																},
																"nativeSrc": "3260:14:15",
																"nodeType": "YulFunctionCall",
																"src": "3260:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "3252:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3252:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "3132:148:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3229:3:15",
														"nodeType": "YulTypedName",
														"src": "3229:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "3237:4:15",
														"nodeType": "YulTypedName",
														"src": "3237:4:15",
														"type": ""
													}
												],
												"src": "3132:148:15"
											},
											{
												"body": {
													"nativeSrc": "3574:818:15",
													"nodeType": "YulBlock",
													"src": "3574:818:15",
													"statements": [
														{
															"nativeSrc": "3584:103:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3584:103:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3681:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3681:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "3598:82:15",
																	"nodeType": "YulIdentifier",
																	"src": "3598:82:15"
																},
																"nativeSrc": "3598:89:15",
																"nodeType": "YulFunctionCall",
																"src": "3598:89:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3588:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3588:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3696:128:15",
															"nodeType": "YulAssignment",
															"src": "3696:128:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3812:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3812:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3817:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3817:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3703:108:15",
																	"nodeType": "YulIdentifier",
																	"src": "3703:108:15"
																},
																"nativeSrc": "3703:121:15",
																"nodeType": "YulFunctionCall",
																"src": "3703:121:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3696:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3696:3:15"
																}
															]
														},
														{
															"nativeSrc": "3833:106:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3833:106:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3933:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3933:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "3848:84:15",
																	"nodeType": "YulIdentifier",
																	"src": "3848:84:15"
																},
																"nativeSrc": "3848:91:15",
																"nodeType": "YulFunctionCall",
																"src": "3848:91:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "3837:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3837:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3948:21:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3948:21:15",
															"value": {
																"name": "baseRef",
																"nativeSrc": "3962:7:15",
																"nodeType": "YulIdentifier",
																"src": "3962:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3952:6:15",
																	"nodeType": "YulTypedName",
																	"src": "3952:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4038:329:15",
																"nodeType": "YulBlock",
																"src": "4038:329:15",
																"statements": [
																	{
																		"nativeSrc": "4052:34:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4052:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4079:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "4079:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4073:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4073:5:15"
																			},
																			"nativeSrc": "4073:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4073:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "4056:13:15",
																				"nodeType": "YulTypedName",
																				"src": "4056:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4099:140:15",
																		"nodeType": "YulAssignment",
																		"src": "4099:140:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "4220:13:15",
																					"nodeType": "YulIdentifier",
																					"src": "4220:13:15"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "4235:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4235:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_TokenExportStruct_$1866_memory_ptr_to_t_struct$_TokenExportStruct_$1866_memory_ptr",
																				"nativeSrc": "4106:113:15",
																				"nodeType": "YulIdentifier",
																				"src": "4106:113:15"
																			},
																			"nativeSrc": "4106:133:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4106:133:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4099:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4099:3:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4252:105:15",
																		"nodeType": "YulAssignment",
																		"src": "4252:105:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4350:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "4350:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "4262:87:15",
																				"nodeType": "YulIdentifier",
																				"src": "4262:87:15"
																			},
																			"nativeSrc": "4262:95:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4262:95:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4252:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4252:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4000:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "4000:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4003:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3997:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3997:2:15"
																},
																"nativeSrc": "3997:13:15",
																"nodeType": "YulFunctionCall",
																"src": "3997:13:15"
															},
															"nativeSrc": "3978:389:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4011:18:15",
																"nodeType": "YulBlock",
																"src": "4011:18:15",
																"statements": [
																	{
																		"nativeSrc": "4013:14:15",
																		"nodeType": "YulAssignment",
																		"src": "4013:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4022:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "4022:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4025:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4025:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4018:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "4018:3:15"
																			},
																			"nativeSrc": "4018:9:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4018:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4013:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4013:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3982:14:15",
																"nodeType": "YulBlock",
																"src": "3982:14:15",
																"statements": [
																	{
																		"nativeSrc": "3984:10:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3984:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3993:1:15",
																			"nodeType": "YulLiteral",
																			"src": "3993:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "3988:1:15",
																				"nodeType": "YulTypedName",
																				"src": "3988:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3978:389:15"
														},
														{
															"nativeSrc": "4376:10:15",
															"nodeType": "YulAssignment",
															"src": "4376:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "4383:3:15",
																"nodeType": "YulIdentifier",
																"src": "4383:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4376:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3380:1012:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3553:5:15",
														"nodeType": "YulTypedName",
														"src": "3553:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3560:3:15",
														"nodeType": "YulTypedName",
														"src": "3560:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3569:3:15",
														"nodeType": "YulTypedName",
														"src": "3569:3:15",
														"type": ""
													}
												],
												"src": "3380:1012:15"
											},
											{
												"body": {
													"nativeSrc": "4616:295:15",
													"nodeType": "YulBlock",
													"src": "4616:295:15",
													"statements": [
														{
															"nativeSrc": "4626:26:15",
															"nodeType": "YulAssignment",
															"src": "4626:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4638:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4638:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4649:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4649:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4634:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4634:3:15"
																},
																"nativeSrc": "4634:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4634:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4626:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4626:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4673:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4673:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4684:1:15",
																				"nodeType": "YulLiteral",
																				"src": "4684:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4669:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4669:3:15"
																		},
																		"nativeSrc": "4669:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4669:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4692:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "4692:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4698:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4698:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4688:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4688:3:15"
																		},
																		"nativeSrc": "4688:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4688:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4662:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4662:6:15"
																},
																"nativeSrc": "4662:47:15",
																"nodeType": "YulFunctionCall",
																"src": "4662:47:15"
															},
															"nativeSrc": "4662:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "4662:47:15"
														},
														{
															"nativeSrc": "4718:186:15",
															"nodeType": "YulAssignment",
															"src": "4718:186:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4890:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4890:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4899:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "4899:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4726:163:15",
																	"nodeType": "YulIdentifier",
																	"src": "4726:163:15"
																},
																"nativeSrc": "4726:178:15",
																"nodeType": "YulFunctionCall",
																"src": "4726:178:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4718:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4718:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4398:513:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4588:9:15",
														"nodeType": "YulTypedName",
														"src": "4588:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4600:6:15",
														"nodeType": "YulTypedName",
														"src": "4600:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4611:4:15",
														"nodeType": "YulTypedName",
														"src": "4611:4:15",
														"type": ""
													}
												],
												"src": "4398:513:15"
											},
											{
												"body": {
													"nativeSrc": "4957:35:15",
													"nodeType": "YulBlock",
													"src": "4957:35:15",
													"statements": [
														{
															"nativeSrc": "4967:19:15",
															"nodeType": "YulAssignment",
															"src": "4967:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4983:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4983:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4977:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4977:5:15"
																},
																"nativeSrc": "4977:9:15",
																"nodeType": "YulFunctionCall",
																"src": "4977:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4967:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "4917:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4950:6:15",
														"nodeType": "YulTypedName",
														"src": "4950:6:15",
														"type": ""
													}
												],
												"src": "4917:75:15"
											},
											{
												"body": {
													"nativeSrc": "5087:28:15",
													"nodeType": "YulBlock",
													"src": "5087:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5104:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5104:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5107:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5107:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5097:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5097:6:15"
																},
																"nativeSrc": "5097:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5097:12:15"
															},
															"nativeSrc": "5097:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "5097:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "4998:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "4998:117:15"
											},
											{
												"body": {
													"nativeSrc": "5210:28:15",
													"nodeType": "YulBlock",
													"src": "5210:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5227:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5227:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5230:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5230:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5220:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:15"
																},
																"nativeSrc": "5220:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5220:12:15"
															},
															"nativeSrc": "5220:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "5220:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "5121:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "5121:117:15"
											},
											{
												"body": {
													"nativeSrc": "5287:79:15",
													"nodeType": "YulBlock",
													"src": "5287:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5344:16:15",
																"nodeType": "YulBlock",
																"src": "5344:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5353:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5353:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5356:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5356:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5346:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5346:6:15"
																			},
																			"nativeSrc": "5346:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5346:12:15"
																		},
																		"nativeSrc": "5346:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5346:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5310:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5310:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5335:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5335:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5317:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "5317:17:15"
																				},
																				"nativeSrc": "5317:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5317:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5307:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "5307:2:15"
																		},
																		"nativeSrc": "5307:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5307:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5300:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5300:6:15"
																},
																"nativeSrc": "5300:43:15",
																"nodeType": "YulFunctionCall",
																"src": "5300:43:15"
															},
															"nativeSrc": "5297:63:15",
															"nodeType": "YulIf",
															"src": "5297:63:15"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5244:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5280:5:15",
														"nodeType": "YulTypedName",
														"src": "5280:5:15",
														"type": ""
													}
												],
												"src": "5244:122:15"
											},
											{
												"body": {
													"nativeSrc": "5424:87:15",
													"nodeType": "YulBlock",
													"src": "5424:87:15",
													"statements": [
														{
															"nativeSrc": "5434:29:15",
															"nodeType": "YulAssignment",
															"src": "5434:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5456:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5456:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5443:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5443:12:15"
																},
																"nativeSrc": "5443:20:15",
																"nodeType": "YulFunctionCall",
																"src": "5443:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5434:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5434:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5499:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5499:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5472:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "5472:26:15"
																},
																"nativeSrc": "5472:33:15",
																"nodeType": "YulFunctionCall",
																"src": "5472:33:15"
															},
															"nativeSrc": "5472:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "5472:33:15"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5372:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5402:6:15",
														"nodeType": "YulTypedName",
														"src": "5402:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5410:3:15",
														"nodeType": "YulTypedName",
														"src": "5410:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5418:5:15",
														"nodeType": "YulTypedName",
														"src": "5418:5:15",
														"type": ""
													}
												],
												"src": "5372:139:15"
											},
											{
												"body": {
													"nativeSrc": "5583:263:15",
													"nodeType": "YulBlock",
													"src": "5583:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5629:83:15",
																"nodeType": "YulBlock",
																"src": "5629:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5631:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "5631:77:15"
																			},
																			"nativeSrc": "5631:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5631:79:15"
																		},
																		"nativeSrc": "5631:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5631:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5604:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5604:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5613:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5613:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5600:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5600:3:15"
																		},
																		"nativeSrc": "5600:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5600:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5625:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5625:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5596:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:15"
																},
																"nativeSrc": "5596:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5596:32:15"
															},
															"nativeSrc": "5593:119:15",
															"nodeType": "YulIf",
															"src": "5593:119:15"
														},
														{
															"nativeSrc": "5722:117:15",
															"nodeType": "YulBlock",
															"src": "5722:117:15",
															"statements": [
																{
																	"nativeSrc": "5737:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5737:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5751:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5751:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5741:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5741:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5766:63:15",
																	"nodeType": "YulAssignment",
																	"src": "5766:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5801:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5801:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5812:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5812:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5797:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5797:3:15"
																				},
																				"nativeSrc": "5797:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5797:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5821:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5821:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5776:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "5776:20:15"
																		},
																		"nativeSrc": "5776:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5776:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5766:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5766:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5517:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5553:9:15",
														"nodeType": "YulTypedName",
														"src": "5553:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5564:7:15",
														"nodeType": "YulTypedName",
														"src": "5564:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5576:6:15",
														"nodeType": "YulTypedName",
														"src": "5576:6:15",
														"type": ""
													}
												],
												"src": "5517:329:15"
											},
											{
												"body": {
													"nativeSrc": "5958:40:15",
													"nodeType": "YulBlock",
													"src": "5958:40:15",
													"statements": [
														{
															"nativeSrc": "5969:22:15",
															"nodeType": "YulAssignment",
															"src": "5969:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5985:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "5985:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5979:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5979:5:15"
																},
																"nativeSrc": "5979:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5979:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5969:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5969:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5852:146:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5941:5:15",
														"nodeType": "YulTypedName",
														"src": "5941:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5951:6:15",
														"nodeType": "YulTypedName",
														"src": "5951:6:15",
														"type": ""
													}
												],
												"src": "5852:146:15"
											},
											{
												"body": {
													"nativeSrc": "6147:73:15",
													"nodeType": "YulBlock",
													"src": "6147:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6164:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6164:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6169:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6169:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6157:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:15"
																},
																"nativeSrc": "6157:19:15",
																"nodeType": "YulFunctionCall",
																"src": "6157:19:15"
															},
															"nativeSrc": "6157:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "6157:19:15"
														},
														{
															"nativeSrc": "6185:29:15",
															"nodeType": "YulAssignment",
															"src": "6185:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6204:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6204:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6209:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6209:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6200:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:15"
																},
																"nativeSrc": "6200:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6200:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6185:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "6185:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6004:216:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6119:3:15",
														"nodeType": "YulTypedName",
														"src": "6119:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6124:6:15",
														"nodeType": "YulTypedName",
														"src": "6124:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6135:11:15",
														"nodeType": "YulTypedName",
														"src": "6135:11:15",
														"type": ""
													}
												],
												"src": "6004:216:15"
											},
											{
												"body": {
													"nativeSrc": "6330:60:15",
													"nodeType": "YulBlock",
													"src": "6330:60:15",
													"statements": [
														{
															"nativeSrc": "6340:11:15",
															"nodeType": "YulAssignment",
															"src": "6340:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "6348:3:15",
																"nodeType": "YulIdentifier",
																"src": "6348:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6340:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6340:4:15"
																}
															]
														},
														{
															"nativeSrc": "6361:22:15",
															"nodeType": "YulAssignment",
															"src": "6361:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6373:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6373:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6378:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6378:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6369:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6369:3:15"
																},
																"nativeSrc": "6369:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6369:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6361:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6361:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6226:164:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6317:3:15",
														"nodeType": "YulTypedName",
														"src": "6317:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6325:4:15",
														"nodeType": "YulTypedName",
														"src": "6325:4:15",
														"type": ""
													}
												],
												"src": "6226:164:15"
											},
											{
												"body": {
													"nativeSrc": "6600:1092:15",
													"nodeType": "YulBlock",
													"src": "6600:1092:15",
													"statements": [
														{
															"nativeSrc": "6610:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "6610:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6626:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6626:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6631:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6631:4:15",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6622:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6622:3:15"
																},
																"nativeSrc": "6622:14:15",
																"nodeType": "YulFunctionCall",
																"src": "6622:14:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "6614:4:15",
																	"nodeType": "YulTypedName",
																	"src": "6614:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6646:167:15",
															"nodeType": "YulBlock",
															"src": "6646:167:15",
															"statements": [
																{
																	"nativeSrc": "6684:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6684:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6714:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6714:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6721:4:15",
																						"nodeType": "YulLiteral",
																						"src": "6721:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6710:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6710:3:15"
																				},
																				"nativeSrc": "6710:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6710:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6704:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "6704:5:15"
																		},
																		"nativeSrc": "6704:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6704:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6688:12:15",
																			"nodeType": "YulTypedName",
																			"src": "6688:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6774:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "6774:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6792:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "6792:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6797:4:15",
																						"nodeType": "YulLiteral",
																						"src": "6797:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6788:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6788:3:15"
																				},
																				"nativeSrc": "6788:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6788:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "6740:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "6740:33:15"
																		},
																		"nativeSrc": "6740:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6740:63:15"
																	},
																	"nativeSrc": "6740:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "6740:63:15"
																}
															]
														},
														{
															"nativeSrc": "6823:167:15",
															"nodeType": "YulBlock",
															"src": "6823:167:15",
															"statements": [
																{
																	"nativeSrc": "6861:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6861:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6891:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6891:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6898:4:15",
																						"nodeType": "YulLiteral",
																						"src": "6898:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6887:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6887:3:15"
																				},
																				"nativeSrc": "6887:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6887:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6881:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "6881:5:15"
																		},
																		"nativeSrc": "6881:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6881:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6865:12:15",
																			"nodeType": "YulTypedName",
																			"src": "6865:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6951:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "6951:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6969:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "6969:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6974:4:15",
																						"nodeType": "YulLiteral",
																						"src": "6974:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6965:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6965:3:15"
																				},
																				"nativeSrc": "6965:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6965:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes32_to_t_bytes32",
																			"nativeSrc": "6917:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "6917:33:15"
																		},
																		"nativeSrc": "6917:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6917:63:15"
																	},
																	"nativeSrc": "6917:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "6917:63:15"
																}
															]
														},
														{
															"nativeSrc": "7000:165:15",
															"nodeType": "YulBlock",
															"src": "7000:165:15",
															"statements": [
																{
																	"nativeSrc": "7036:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7036:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7066:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7066:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7073:4:15",
																						"nodeType": "YulLiteral",
																						"src": "7073:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7062:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7062:3:15"
																				},
																				"nativeSrc": "7062:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7062:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7056:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "7056:5:15"
																		},
																		"nativeSrc": "7056:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7056:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7040:12:15",
																			"nodeType": "YulTypedName",
																			"src": "7040:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7126:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "7126:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7144:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7144:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7149:4:15",
																						"nodeType": "YulLiteral",
																						"src": "7149:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7140:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7140:3:15"
																				},
																				"nativeSrc": "7140:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7140:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes32_to_t_bytes32",
																			"nativeSrc": "7092:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "7092:33:15"
																		},
																		"nativeSrc": "7092:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7092:63:15"
																	},
																	"nativeSrc": "7092:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "7092:63:15"
																}
															]
														},
														{
															"nativeSrc": "7175:166:15",
															"nodeType": "YulBlock",
															"src": "7175:166:15",
															"statements": [
																{
																	"nativeSrc": "7212:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7212:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7242:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7242:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7249:4:15",
																						"nodeType": "YulLiteral",
																						"src": "7249:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7238:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7238:3:15"
																				},
																				"nativeSrc": "7238:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7238:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7232:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "7232:5:15"
																		},
																		"nativeSrc": "7232:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7232:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7216:12:15",
																			"nodeType": "YulTypedName",
																			"src": "7216:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7302:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "7302:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7320:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7320:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7325:4:15",
																						"nodeType": "YulLiteral",
																						"src": "7325:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7316:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7316:3:15"
																				},
																				"nativeSrc": "7316:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7316:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7268:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "7268:33:15"
																		},
																		"nativeSrc": "7268:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7268:63:15"
																	},
																	"nativeSrc": "7268:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "7268:63:15"
																}
															]
														},
														{
															"nativeSrc": "7351:162:15",
															"nodeType": "YulBlock",
															"src": "7351:162:15",
															"statements": [
																{
																	"nativeSrc": "7384:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7384:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7414:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7414:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7421:4:15",
																						"nodeType": "YulLiteral",
																						"src": "7421:4:15",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7410:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7410:3:15"
																				},
																				"nativeSrc": "7410:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7410:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7404:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "7404:5:15"
																		},
																		"nativeSrc": "7404:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7404:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7388:12:15",
																			"nodeType": "YulTypedName",
																			"src": "7388:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7474:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "7474:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7492:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7492:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7497:4:15",
																						"nodeType": "YulLiteral",
																						"src": "7497:4:15",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7488:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7488:3:15"
																				},
																				"nativeSrc": "7488:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7488:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "7440:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "7440:33:15"
																		},
																		"nativeSrc": "7440:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7440:63:15"
																	},
																	"nativeSrc": "7440:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "7440:63:15"
																}
															]
														},
														{
															"nativeSrc": "7523:162:15",
															"nodeType": "YulBlock",
															"src": "7523:162:15",
															"statements": [
																{
																	"nativeSrc": "7556:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7556:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7586:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "7586:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7593:4:15",
																						"nodeType": "YulLiteral",
																						"src": "7593:4:15",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7582:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7582:3:15"
																				},
																				"nativeSrc": "7582:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7582:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7576:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "7576:5:15"
																		},
																		"nativeSrc": "7576:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7576:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7560:12:15",
																			"nodeType": "YulTypedName",
																			"src": "7560:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7646:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "7646:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7664:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7664:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7669:4:15",
																						"nodeType": "YulLiteral",
																						"src": "7669:4:15",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7660:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7660:3:15"
																				},
																				"nativeSrc": "7660:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7660:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7612:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "7612:33:15"
																		},
																		"nativeSrc": "7612:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7612:63:15"
																	},
																	"nativeSrc": "7612:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "7612:63:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_DonationStruct_$1850_memory_ptr_to_t_struct$_DonationStruct_$1850_memory_ptr",
												"nativeSrc": "6480:1212:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6587:5:15",
														"nodeType": "YulTypedName",
														"src": "6587:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6594:3:15",
														"nodeType": "YulTypedName",
														"src": "6594:3:15",
														"type": ""
													}
												],
												"src": "6480:1212:15"
											},
											{
												"body": {
													"nativeSrc": "7842:163:15",
													"nodeType": "YulBlock",
													"src": "7842:163:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7950:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7950:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7958:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7958:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_DonationStruct_$1850_memory_ptr_to_t_struct$_DonationStruct_$1850_memory_ptr",
																	"nativeSrc": "7852:97:15",
																	"nodeType": "YulIdentifier",
																	"src": "7852:97:15"
																},
																"nativeSrc": "7852:110:15",
																"nodeType": "YulFunctionCall",
																"src": "7852:110:15"
															},
															"nativeSrc": "7852:110:15",
															"nodeType": "YulExpressionStatement",
															"src": "7852:110:15"
														},
														{
															"nativeSrc": "7971:28:15",
															"nodeType": "YulAssignment",
															"src": "7971:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7989:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7989:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7994:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7994:4:15",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7985:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:15"
																},
																"nativeSrc": "7985:14:15",
																"nodeType": "YulFunctionCall",
																"src": "7985:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "7971:10:15",
																	"nodeType": "YulIdentifier",
																	"src": "7971:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_DonationStruct_$1850_memory_ptr_to_t_struct$_DonationStruct_$1850_memory_ptr",
												"nativeSrc": "7698:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "7815:6:15",
														"nodeType": "YulTypedName",
														"src": "7815:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7823:3:15",
														"nodeType": "YulTypedName",
														"src": "7823:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "7831:10:15",
														"nodeType": "YulTypedName",
														"src": "7831:10:15",
														"type": ""
													}
												],
												"src": "7698:307:15"
											},
											{
												"body": {
													"nativeSrc": "8118:38:15",
													"nodeType": "YulBlock",
													"src": "8118:38:15",
													"statements": [
														{
															"nativeSrc": "8128:22:15",
															"nodeType": "YulAssignment",
															"src": "8128:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8140:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8140:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8145:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8145:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8136:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8136:3:15"
																},
																"nativeSrc": "8136:14:15",
																"nodeType": "YulFunctionCall",
																"src": "8136:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "8128:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8128:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "8011:145:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8105:3:15",
														"nodeType": "YulTypedName",
														"src": "8105:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "8113:4:15",
														"nodeType": "YulTypedName",
														"src": "8113:4:15",
														"type": ""
													}
												],
												"src": "8011:145:15"
											},
											{
												"body": {
													"nativeSrc": "8438:800:15",
													"nodeType": "YulBlock",
													"src": "8438:800:15",
													"statements": [
														{
															"nativeSrc": "8448:100:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8448:100:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8542:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8542:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "8462:79:15",
																	"nodeType": "YulIdentifier",
																	"src": "8462:79:15"
																},
																"nativeSrc": "8462:86:15",
																"nodeType": "YulFunctionCall",
																"src": "8462:86:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8452:6:15",
																	"nodeType": "YulTypedName",
																	"src": "8452:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8557:125:15",
															"nodeType": "YulAssignment",
															"src": "8557:125:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8670:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8670:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8675:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8675:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8564:105:15",
																	"nodeType": "YulIdentifier",
																	"src": "8564:105:15"
																},
																"nativeSrc": "8564:118:15",
																"nodeType": "YulFunctionCall",
																"src": "8564:118:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8557:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8557:3:15"
																}
															]
														},
														{
															"nativeSrc": "8691:103:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8691:103:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8788:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8788:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "8706:81:15",
																	"nodeType": "YulIdentifier",
																	"src": "8706:81:15"
																},
																"nativeSrc": "8706:88:15",
																"nodeType": "YulFunctionCall",
																"src": "8706:88:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8695:7:15",
																	"nodeType": "YulTypedName",
																	"src": "8695:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8803:21:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8803:21:15",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8817:7:15",
																"nodeType": "YulIdentifier",
																"src": "8817:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8807:6:15",
																	"nodeType": "YulTypedName",
																	"src": "8807:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8893:320:15",
																"nodeType": "YulBlock",
																"src": "8893:320:15",
																"statements": [
																	{
																		"nativeSrc": "8907:34:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8907:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8934:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "8934:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8928:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "8928:5:15"
																			},
																			"nativeSrc": "8928:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8928:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "8911:13:15",
																				"nodeType": "YulTypedName",
																				"src": "8911:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8954:134:15",
																		"nodeType": "YulAssignment",
																		"src": "8954:134:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "9069:13:15",
																					"nodeType": "YulIdentifier",
																					"src": "9069:13:15"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "9084:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "9084:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_DonationStruct_$1850_memory_ptr_to_t_struct$_DonationStruct_$1850_memory_ptr",
																				"nativeSrc": "8961:107:15",
																				"nodeType": "YulIdentifier",
																				"src": "8961:107:15"
																			},
																			"nativeSrc": "8961:127:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8961:127:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8954:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8954:3:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9101:102:15",
																		"nodeType": "YulAssignment",
																		"src": "9101:102:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9196:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "9196:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "9111:84:15",
																				"nodeType": "YulIdentifier",
																				"src": "9111:84:15"
																			},
																			"nativeSrc": "9111:92:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9111:92:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9101:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9101:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8855:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "8855:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8858:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8858:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8852:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8852:2:15"
																},
																"nativeSrc": "8852:13:15",
																"nodeType": "YulFunctionCall",
																"src": "8852:13:15"
															},
															"nativeSrc": "8833:380:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8866:18:15",
																"nodeType": "YulBlock",
																"src": "8866:18:15",
																"statements": [
																	{
																		"nativeSrc": "8868:14:15",
																		"nodeType": "YulAssignment",
																		"src": "8868:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8877:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "8877:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8880:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8880:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8873:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8873:3:15"
																			},
																			"nativeSrc": "8873:9:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8873:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8868:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "8868:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8837:14:15",
																"nodeType": "YulBlock",
																"src": "8837:14:15",
																"statements": [
																	{
																		"nativeSrc": "8839:10:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8839:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8848:1:15",
																			"nodeType": "YulLiteral",
																			"src": "8848:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "8843:1:15",
																				"nodeType": "YulTypedName",
																				"src": "8843:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8833:380:15"
														},
														{
															"nativeSrc": "9222:10:15",
															"nodeType": "YulAssignment",
															"src": "9222:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "9229:3:15",
																"nodeType": "YulIdentifier",
																"src": "9229:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9222:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9222:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "8250:988:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8417:5:15",
														"nodeType": "YulTypedName",
														"src": "8417:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8424:3:15",
														"nodeType": "YulTypedName",
														"src": "8424:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8433:3:15",
														"nodeType": "YulTypedName",
														"src": "8433:3:15",
														"type": ""
													}
												],
												"src": "8250:988:15"
											},
											{
												"body": {
													"nativeSrc": "9456:289:15",
													"nodeType": "YulBlock",
													"src": "9456:289:15",
													"statements": [
														{
															"nativeSrc": "9466:26:15",
															"nodeType": "YulAssignment",
															"src": "9466:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9478:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9478:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9489:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9489:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9474:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9474:3:15"
																},
																"nativeSrc": "9474:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9474:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9466:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9466:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9513:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9513:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9524:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9524:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9509:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9509:3:15"
																		},
																		"nativeSrc": "9509:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9509:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9532:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "9532:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9538:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9538:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9528:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9528:3:15"
																		},
																		"nativeSrc": "9528:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9528:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9502:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9502:6:15"
																},
																"nativeSrc": "9502:47:15",
																"nodeType": "YulFunctionCall",
																"src": "9502:47:15"
															},
															"nativeSrc": "9502:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "9502:47:15"
														},
														{
															"nativeSrc": "9558:180:15",
															"nodeType": "YulAssignment",
															"src": "9558:180:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9724:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9724:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9733:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "9733:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9566:157:15",
																	"nodeType": "YulIdentifier",
																	"src": "9566:157:15"
																},
																"nativeSrc": "9566:172:15",
																"nodeType": "YulFunctionCall",
																"src": "9566:172:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9558:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9558:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "9244:501:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9428:9:15",
														"nodeType": "YulTypedName",
														"src": "9428:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9440:6:15",
														"nodeType": "YulTypedName",
														"src": "9440:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9451:4:15",
														"nodeType": "YulTypedName",
														"src": "9451:4:15",
														"type": ""
													}
												],
												"src": "9244:501:15"
											},
											{
												"body": {
													"nativeSrc": "9794:79:15",
													"nodeType": "YulBlock",
													"src": "9794:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "9851:16:15",
																"nodeType": "YulBlock",
																"src": "9851:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9860:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9860:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9863:1:15",
																					"nodeType": "YulLiteral",
																					"src": "9863:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9853:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "9853:6:15"
																			},
																			"nativeSrc": "9853:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9853:12:15"
																		},
																		"nativeSrc": "9853:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9853:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9817:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "9817:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9842:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "9842:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "9824:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "9824:17:15"
																				},
																				"nativeSrc": "9824:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "9824:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9814:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "9814:2:15"
																		},
																		"nativeSrc": "9814:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9814:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9807:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9807:6:15"
																},
																"nativeSrc": "9807:43:15",
																"nodeType": "YulFunctionCall",
																"src": "9807:43:15"
															},
															"nativeSrc": "9804:63:15",
															"nodeType": "YulIf",
															"src": "9804:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "9751:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9787:5:15",
														"nodeType": "YulTypedName",
														"src": "9787:5:15",
														"type": ""
													}
												],
												"src": "9751:122:15"
											},
											{
												"body": {
													"nativeSrc": "9931:87:15",
													"nodeType": "YulBlock",
													"src": "9931:87:15",
													"statements": [
														{
															"nativeSrc": "9941:29:15",
															"nodeType": "YulAssignment",
															"src": "9941:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9963:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9963:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9950:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "9950:12:15"
																},
																"nativeSrc": "9950:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9950:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9941:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "9941:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10006:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10006:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "9979:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "9979:26:15"
																},
																"nativeSrc": "9979:33:15",
																"nodeType": "YulFunctionCall",
																"src": "9979:33:15"
															},
															"nativeSrc": "9979:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "9979:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "9879:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9909:6:15",
														"nodeType": "YulTypedName",
														"src": "9909:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9917:3:15",
														"nodeType": "YulTypedName",
														"src": "9917:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9925:5:15",
														"nodeType": "YulTypedName",
														"src": "9925:5:15",
														"type": ""
													}
												],
												"src": "9879:139:15"
											},
											{
												"body": {
													"nativeSrc": "10090:263:15",
													"nodeType": "YulBlock",
													"src": "10090:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10136:83:15",
																"nodeType": "YulBlock",
																"src": "10136:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10138:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10138:77:15"
																			},
																			"nativeSrc": "10138:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10138:79:15"
																		},
																		"nativeSrc": "10138:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10138:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10111:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10111:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10120:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10120:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10107:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10107:3:15"
																		},
																		"nativeSrc": "10107:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10107:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10132:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10132:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10103:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10103:3:15"
																},
																"nativeSrc": "10103:32:15",
																"nodeType": "YulFunctionCall",
																"src": "10103:32:15"
															},
															"nativeSrc": "10100:119:15",
															"nodeType": "YulIf",
															"src": "10100:119:15"
														},
														{
															"nativeSrc": "10229:117:15",
															"nodeType": "YulBlock",
															"src": "10229:117:15",
															"statements": [
																{
																	"nativeSrc": "10244:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10244:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10258:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10258:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10248:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10248:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10273:63:15",
																	"nodeType": "YulAssignment",
																	"src": "10273:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10308:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10308:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10319:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "10319:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10304:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10304:3:15"
																				},
																				"nativeSrc": "10304:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10304:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10328:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10328:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10283:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "10283:20:15"
																		},
																		"nativeSrc": "10283:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10283:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10273:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10273:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "10024:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10060:9:15",
														"nodeType": "YulTypedName",
														"src": "10060:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10071:7:15",
														"nodeType": "YulTypedName",
														"src": "10071:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10083:6:15",
														"nodeType": "YulTypedName",
														"src": "10083:6:15",
														"type": ""
													}
												],
												"src": "10024:329:15"
											},
											{
												"body": {
													"nativeSrc": "10402:43:15",
													"nodeType": "YulBlock",
													"src": "10402:43:15",
													"statements": [
														{
															"nativeSrc": "10412:27:15",
															"nodeType": "YulAssignment",
															"src": "10412:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10427:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10427:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10434:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10434:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10423:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10423:3:15"
																},
																"nativeSrc": "10423:16:15",
																"nodeType": "YulFunctionCall",
																"src": "10423:16:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10412:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "10412:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "10359:86:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10384:5:15",
														"nodeType": "YulTypedName",
														"src": "10384:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10394:7:15",
														"nodeType": "YulTypedName",
														"src": "10394:7:15",
														"type": ""
													}
												],
												"src": "10359:86:15"
											},
											{
												"body": {
													"nativeSrc": "10492:77:15",
													"nodeType": "YulBlock",
													"src": "10492:77:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10547:16:15",
																"nodeType": "YulBlock",
																"src": "10547:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10556:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10556:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10559:1:15",
																					"nodeType": "YulLiteral",
																					"src": "10559:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10549:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "10549:6:15"
																			},
																			"nativeSrc": "10549:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10549:12:15"
																		},
																		"nativeSrc": "10549:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10549:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10515:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "10515:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10538:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "10538:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "10522:15:15",
																					"nodeType": "YulIdentifier",
																					"src": "10522:15:15"
																				},
																				"nativeSrc": "10522:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10522:22:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10512:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10512:2:15"
																		},
																		"nativeSrc": "10512:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10512:33:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10505:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10505:6:15"
																},
																"nativeSrc": "10505:41:15",
																"nodeType": "YulFunctionCall",
																"src": "10505:41:15"
															},
															"nativeSrc": "10502:61:15",
															"nodeType": "YulIf",
															"src": "10502:61:15"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "10451:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10485:5:15",
														"nodeType": "YulTypedName",
														"src": "10485:5:15",
														"type": ""
													}
												],
												"src": "10451:118:15"
											},
											{
												"body": {
													"nativeSrc": "10625:85:15",
													"nodeType": "YulBlock",
													"src": "10625:85:15",
													"statements": [
														{
															"nativeSrc": "10635:29:15",
															"nodeType": "YulAssignment",
															"src": "10635:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10657:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10657:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10644:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "10644:12:15"
																},
																"nativeSrc": "10644:20:15",
																"nodeType": "YulFunctionCall",
																"src": "10644:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10635:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "10635:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10698:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "10698:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "10673:24:15",
																	"nodeType": "YulIdentifier",
																	"src": "10673:24:15"
																},
																"nativeSrc": "10673:31:15",
																"nodeType": "YulFunctionCall",
																"src": "10673:31:15"
															},
															"nativeSrc": "10673:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "10673:31:15"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "10575:135:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10603:6:15",
														"nodeType": "YulTypedName",
														"src": "10603:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10611:3:15",
														"nodeType": "YulTypedName",
														"src": "10611:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10619:5:15",
														"nodeType": "YulTypedName",
														"src": "10619:5:15",
														"type": ""
													}
												],
												"src": "10575:135:15"
											},
											{
												"body": {
													"nativeSrc": "10780:261:15",
													"nodeType": "YulBlock",
													"src": "10780:261:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "10826:83:15",
																"nodeType": "YulBlock",
																"src": "10826:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10828:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "10828:77:15"
																			},
																			"nativeSrc": "10828:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10828:79:15"
																		},
																		"nativeSrc": "10828:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10828:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10801:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "10801:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10810:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10810:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10797:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10797:3:15"
																		},
																		"nativeSrc": "10797:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10797:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10822:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10822:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10793:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10793:3:15"
																},
																"nativeSrc": "10793:32:15",
																"nodeType": "YulFunctionCall",
																"src": "10793:32:15"
															},
															"nativeSrc": "10790:119:15",
															"nodeType": "YulIf",
															"src": "10790:119:15"
														},
														{
															"nativeSrc": "10919:115:15",
															"nodeType": "YulBlock",
															"src": "10919:115:15",
															"statements": [
																{
																	"nativeSrc": "10934:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10934:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10948:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10948:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10938:6:15",
																			"nodeType": "YulTypedName",
																			"src": "10938:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10963:61:15",
																	"nodeType": "YulAssignment",
																	"src": "10963:61:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10996:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "10996:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11007:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "11007:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10992:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "10992:3:15"
																				},
																				"nativeSrc": "10992:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10992:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11016:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "11016:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "10973:18:15",
																			"nodeType": "YulIdentifier",
																			"src": "10973:18:15"
																		},
																		"nativeSrc": "10973:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10973:51:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10963:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "10963:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nativeSrc": "10716:325:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10750:9:15",
														"nodeType": "YulTypedName",
														"src": "10750:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10761:7:15",
														"nodeType": "YulTypedName",
														"src": "10761:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10773:6:15",
														"nodeType": "YulTypedName",
														"src": "10773:6:15",
														"type": ""
													}
												],
												"src": "10716:325:15"
											},
											{
												"body": {
													"nativeSrc": "11106:50:15",
													"nodeType": "YulBlock",
													"src": "11106:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11123:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11123:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11143:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11143:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "11128:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "11128:14:15"
																		},
																		"nativeSrc": "11128:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11128:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11116:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11116:6:15"
																},
																"nativeSrc": "11116:34:15",
																"nodeType": "YulFunctionCall",
																"src": "11116:34:15"
															},
															"nativeSrc": "11116:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "11116:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "11047:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11094:5:15",
														"nodeType": "YulTypedName",
														"src": "11094:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11101:3:15",
														"nodeType": "YulTypedName",
														"src": "11101:3:15",
														"type": ""
													}
												],
												"src": "11047:109:15"
											},
											{
												"body": {
													"nativeSrc": "11254:118:15",
													"nodeType": "YulBlock",
													"src": "11254:118:15",
													"statements": [
														{
															"nativeSrc": "11264:26:15",
															"nodeType": "YulAssignment",
															"src": "11264:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11276:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "11276:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11287:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11287:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11272:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11272:3:15"
																},
																"nativeSrc": "11272:18:15",
																"nodeType": "YulFunctionCall",
																"src": "11272:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11264:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "11264:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11338:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11338:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11351:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "11351:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11362:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11362:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11347:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11347:3:15"
																		},
																		"nativeSrc": "11347:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11347:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "11300:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "11300:37:15"
																},
																"nativeSrc": "11300:65:15",
																"nodeType": "YulFunctionCall",
																"src": "11300:65:15"
															},
															"nativeSrc": "11300:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "11300:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "11162:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11226:9:15",
														"nodeType": "YulTypedName",
														"src": "11226:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11238:6:15",
														"nodeType": "YulTypedName",
														"src": "11238:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11249:4:15",
														"nodeType": "YulTypedName",
														"src": "11249:4:15",
														"type": ""
													}
												],
												"src": "11162:210:15"
											},
											{
												"body": {
													"nativeSrc": "11431:51:15",
													"nodeType": "YulBlock",
													"src": "11431:51:15",
													"statements": [
														{
															"nativeSrc": "11441:35:15",
															"nodeType": "YulAssignment",
															"src": "11441:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11470:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11470:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "11452:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11452:17:15"
																},
																"nativeSrc": "11452:24:15",
																"nodeType": "YulFunctionCall",
																"src": "11452:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11441:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "11441:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "11378:104:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11413:5:15",
														"nodeType": "YulTypedName",
														"src": "11413:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11423:7:15",
														"nodeType": "YulTypedName",
														"src": "11423:7:15",
														"type": ""
													}
												],
												"src": "11378:104:15"
											},
											{
												"body": {
													"nativeSrc": "11539:87:15",
													"nodeType": "YulBlock",
													"src": "11539:87:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11604:16:15",
																"nodeType": "YulBlock",
																"src": "11604:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11613:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11613:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11616:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11616:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11606:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11606:6:15"
																			},
																			"nativeSrc": "11606:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11606:12:15"
																		},
																		"nativeSrc": "11606:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11606:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11562:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11562:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11595:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "11595:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "11569:25:15",
																					"nodeType": "YulIdentifier",
																					"src": "11569:25:15"
																				},
																				"nativeSrc": "11569:32:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11569:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11559:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11559:2:15"
																		},
																		"nativeSrc": "11559:43:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11559:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11552:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11552:6:15"
																},
																"nativeSrc": "11552:51:15",
																"nodeType": "YulFunctionCall",
																"src": "11552:51:15"
															},
															"nativeSrc": "11549:71:15",
															"nodeType": "YulIf",
															"src": "11549:71:15"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "11488:138:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11532:5:15",
														"nodeType": "YulTypedName",
														"src": "11532:5:15",
														"type": ""
													}
												],
												"src": "11488:138:15"
											},
											{
												"body": {
													"nativeSrc": "11692:95:15",
													"nodeType": "YulBlock",
													"src": "11692:95:15",
													"statements": [
														{
															"nativeSrc": "11702:29:15",
															"nodeType": "YulAssignment",
															"src": "11702:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11724:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11724:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11711:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "11711:12:15"
																},
																"nativeSrc": "11711:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11711:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11702:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11702:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11775:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "11775:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "11740:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "11740:34:15"
																},
																"nativeSrc": "11740:41:15",
																"nodeType": "YulFunctionCall",
																"src": "11740:41:15"
															},
															"nativeSrc": "11740:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "11740:41:15"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "11632:155:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11670:6:15",
														"nodeType": "YulTypedName",
														"src": "11670:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11678:3:15",
														"nodeType": "YulTypedName",
														"src": "11678:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11686:5:15",
														"nodeType": "YulTypedName",
														"src": "11686:5:15",
														"type": ""
													}
												],
												"src": "11632:155:15"
											},
											{
												"body": {
													"nativeSrc": "11836:79:15",
													"nodeType": "YulBlock",
													"src": "11836:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "11893:16:15",
																"nodeType": "YulBlock",
																"src": "11893:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11902:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11902:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11905:1:15",
																					"nodeType": "YulLiteral",
																					"src": "11905:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11895:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11895:6:15"
																			},
																			"nativeSrc": "11895:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11895:12:15"
																		},
																		"nativeSrc": "11895:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11895:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11859:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "11859:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11884:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "11884:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "11866:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "11866:17:15"
																				},
																				"nativeSrc": "11866:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "11866:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11856:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "11856:2:15"
																		},
																		"nativeSrc": "11856:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11856:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11849:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11849:6:15"
																},
																"nativeSrc": "11849:43:15",
																"nodeType": "YulFunctionCall",
																"src": "11849:43:15"
															},
															"nativeSrc": "11846:63:15",
															"nodeType": "YulIf",
															"src": "11846:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "11793:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11829:5:15",
														"nodeType": "YulTypedName",
														"src": "11829:5:15",
														"type": ""
													}
												],
												"src": "11793:122:15"
											},
											{
												"body": {
													"nativeSrc": "11973:87:15",
													"nodeType": "YulBlock",
													"src": "11973:87:15",
													"statements": [
														{
															"nativeSrc": "11983:29:15",
															"nodeType": "YulAssignment",
															"src": "11983:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12005:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12005:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11992:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "11992:12:15"
																},
																"nativeSrc": "11992:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11992:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11983:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "11983:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12048:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12048:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "12021:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "12021:26:15"
																},
																"nativeSrc": "12021:33:15",
																"nodeType": "YulFunctionCall",
																"src": "12021:33:15"
															},
															"nativeSrc": "12021:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "12021:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "11921:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11951:6:15",
														"nodeType": "YulTypedName",
														"src": "11951:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11959:3:15",
														"nodeType": "YulTypedName",
														"src": "11959:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11967:5:15",
														"nodeType": "YulTypedName",
														"src": "11967:5:15",
														"type": ""
													}
												],
												"src": "11921:139:15"
											},
											{
												"body": {
													"nativeSrc": "12157:399:15",
													"nodeType": "YulBlock",
													"src": "12157:399:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "12203:83:15",
																"nodeType": "YulBlock",
																"src": "12203:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12205:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "12205:77:15"
																			},
																			"nativeSrc": "12205:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "12205:79:15"
																		},
																		"nativeSrc": "12205:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "12205:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12178:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12178:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12187:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12187:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12174:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12174:3:15"
																		},
																		"nativeSrc": "12174:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12174:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12199:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12199:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12170:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12170:3:15"
																},
																"nativeSrc": "12170:32:15",
																"nodeType": "YulFunctionCall",
																"src": "12170:32:15"
															},
															"nativeSrc": "12167:119:15",
															"nodeType": "YulIf",
															"src": "12167:119:15"
														},
														{
															"nativeSrc": "12296:125:15",
															"nodeType": "YulBlock",
															"src": "12296:125:15",
															"statements": [
																{
																	"nativeSrc": "12311:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12311:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12325:1:15",
																		"nodeType": "YulLiteral",
																		"src": "12325:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12315:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12315:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12340:71:15",
																	"nodeType": "YulAssignment",
																	"src": "12340:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12383:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12383:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12394:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12394:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12379:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12379:3:15"
																				},
																				"nativeSrc": "12379:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12379:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12403:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12403:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "12350:28:15",
																			"nodeType": "YulIdentifier",
																			"src": "12350:28:15"
																		},
																		"nativeSrc": "12350:61:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12350:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12340:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12340:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12431:118:15",
															"nodeType": "YulBlock",
															"src": "12431:118:15",
															"statements": [
																{
																	"nativeSrc": "12446:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12446:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12460:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12460:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12450:6:15",
																			"nodeType": "YulTypedName",
																			"src": "12450:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12476:63:15",
																	"nodeType": "YulAssignment",
																	"src": "12476:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12511:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "12511:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12522:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "12522:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12507:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "12507:3:15"
																				},
																				"nativeSrc": "12507:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "12507:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12531:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "12531:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12486:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "12486:20:15"
																		},
																		"nativeSrc": "12486:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12486:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12476:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "12476:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nativeSrc": "12066:490:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12119:9:15",
														"nodeType": "YulTypedName",
														"src": "12119:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12130:7:15",
														"nodeType": "YulTypedName",
														"src": "12130:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12142:6:15",
														"nodeType": "YulTypedName",
														"src": "12142:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12150:6:15",
														"nodeType": "YulTypedName",
														"src": "12150:6:15",
														"type": ""
													}
												],
												"src": "12066:490:15"
											},
											{
												"body": {
													"nativeSrc": "12665:40:15",
													"nodeType": "YulBlock",
													"src": "12665:40:15",
													"statements": [
														{
															"nativeSrc": "12676:22:15",
															"nodeType": "YulAssignment",
															"src": "12676:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12692:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "12692:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12686:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "12686:5:15"
																},
																"nativeSrc": "12686:12:15",
																"nodeType": "YulFunctionCall",
																"src": "12686:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12676:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12676:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "12562:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12648:5:15",
														"nodeType": "YulTypedName",
														"src": "12648:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12658:6:15",
														"nodeType": "YulTypedName",
														"src": "12658:6:15",
														"type": ""
													}
												],
												"src": "12562:143:15"
											},
											{
												"body": {
													"nativeSrc": "12851:73:15",
													"nodeType": "YulBlock",
													"src": "12851:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12868:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12868:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12873:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "12873:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12861:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12861:6:15"
																},
																"nativeSrc": "12861:19:15",
																"nodeType": "YulFunctionCall",
																"src": "12861:19:15"
															},
															"nativeSrc": "12861:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "12861:19:15"
														},
														{
															"nativeSrc": "12889:29:15",
															"nodeType": "YulAssignment",
															"src": "12889:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12908:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12908:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12913:4:15",
																		"nodeType": "YulLiteral",
																		"src": "12913:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12904:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12904:3:15"
																},
																"nativeSrc": "12904:14:15",
																"nodeType": "YulFunctionCall",
																"src": "12904:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12889:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "12889:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "12711:213:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12823:3:15",
														"nodeType": "YulTypedName",
														"src": "12823:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12828:6:15",
														"nodeType": "YulTypedName",
														"src": "12828:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12839:11:15",
														"nodeType": "YulTypedName",
														"src": "12839:11:15",
														"type": ""
													}
												],
												"src": "12711:213:15"
											},
											{
												"body": {
													"nativeSrc": "13031:60:15",
													"nodeType": "YulBlock",
													"src": "13031:60:15",
													"statements": [
														{
															"nativeSrc": "13041:11:15",
															"nodeType": "YulAssignment",
															"src": "13041:11:15",
															"value": {
																"name": "ptr",
																"nativeSrc": "13049:3:15",
																"nodeType": "YulIdentifier",
																"src": "13049:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13041:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13041:4:15"
																}
															]
														},
														{
															"nativeSrc": "13062:22:15",
															"nodeType": "YulAssignment",
															"src": "13062:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13074:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13074:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13079:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13079:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13070:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13070:3:15"
																},
																"nativeSrc": "13070:14:15",
																"nodeType": "YulFunctionCall",
																"src": "13070:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13062:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13062:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "12930:161:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13018:3:15",
														"nodeType": "YulTypedName",
														"src": "13018:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13026:4:15",
														"nodeType": "YulTypedName",
														"src": "13026:4:15",
														"type": ""
													}
												],
												"src": "12930:161:15"
											},
											{
												"body": {
													"nativeSrc": "13289:558:15",
													"nodeType": "YulBlock",
													"src": "13289:558:15",
													"statements": [
														{
															"nativeSrc": "13299:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "13299:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13315:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13315:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13320:4:15",
																		"nodeType": "YulLiteral",
																		"src": "13320:4:15",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13311:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13311:3:15"
																},
																"nativeSrc": "13311:14:15",
																"nodeType": "YulFunctionCall",
																"src": "13311:14:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "13303:4:15",
																	"nodeType": "YulTypedName",
																	"src": "13303:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13335:164:15",
															"nodeType": "YulBlock",
															"src": "13335:164:15",
															"statements": [
																{
																	"nativeSrc": "13370:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13370:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13400:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "13400:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13407:4:15",
																						"nodeType": "YulLiteral",
																						"src": "13407:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13396:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13396:3:15"
																				},
																				"nativeSrc": "13396:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13396:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13390:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "13390:5:15"
																		},
																		"nativeSrc": "13390:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13390:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13374:12:15",
																			"nodeType": "YulTypedName",
																			"src": "13374:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13460:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "13460:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13478:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "13478:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13483:4:15",
																						"nodeType": "YulLiteral",
																						"src": "13483:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13474:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13474:3:15"
																				},
																				"nativeSrc": "13474:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13474:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "13426:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "13426:33:15"
																		},
																		"nativeSrc": "13426:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13426:63:15"
																	},
																	"nativeSrc": "13426:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "13426:63:15"
																}
															]
														},
														{
															"nativeSrc": "13509:159:15",
															"nodeType": "YulBlock",
															"src": "13509:159:15",
															"statements": [
																{
																	"nativeSrc": "13545:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13545:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13575:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "13575:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13582:4:15",
																						"nodeType": "YulLiteral",
																						"src": "13582:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13571:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13571:3:15"
																				},
																				"nativeSrc": "13571:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13571:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13565:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "13565:5:15"
																		},
																		"nativeSrc": "13565:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13565:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13549:12:15",
																			"nodeType": "YulTypedName",
																			"src": "13549:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13629:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "13629:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13647:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "13647:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13652:4:15",
																						"nodeType": "YulLiteral",
																						"src": "13652:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13643:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13643:3:15"
																				},
																				"nativeSrc": "13643:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13643:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "13601:27:15",
																			"nodeType": "YulIdentifier",
																			"src": "13601:27:15"
																		},
																		"nativeSrc": "13601:57:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13601:57:15"
																	},
																	"nativeSrc": "13601:57:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "13601:57:15"
																}
															]
														},
														{
															"nativeSrc": "13678:162:15",
															"nodeType": "YulBlock",
															"src": "13678:162:15",
															"statements": [
																{
																	"nativeSrc": "13711:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13711:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13741:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "13741:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13748:4:15",
																						"nodeType": "YulLiteral",
																						"src": "13748:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13737:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13737:3:15"
																				},
																				"nativeSrc": "13737:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13737:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13731:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "13731:5:15"
																		},
																		"nativeSrc": "13731:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13731:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13715:12:15",
																			"nodeType": "YulTypedName",
																			"src": "13715:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13801:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "13801:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13819:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "13819:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13824:4:15",
																						"nodeType": "YulLiteral",
																						"src": "13824:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13815:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "13815:3:15"
																				},
																				"nativeSrc": "13815:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "13815:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "13767:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "13767:33:15"
																		},
																		"nativeSrc": "13767:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13767:63:15"
																	},
																	"nativeSrc": "13767:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "13767:63:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_TokenStruct_$1857_memory_ptr_to_t_struct$_TokenStruct_$1857_memory_ptr",
												"nativeSrc": "13175:672:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13276:5:15",
														"nodeType": "YulTypedName",
														"src": "13276:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13283:3:15",
														"nodeType": "YulTypedName",
														"src": "13283:3:15",
														"type": ""
													}
												],
												"src": "13175:672:15"
											},
											{
												"body": {
													"nativeSrc": "13991:157:15",
													"nodeType": "YulBlock",
													"src": "13991:157:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14093:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14093:6:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14101:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14101:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_TokenStruct_$1857_memory_ptr_to_t_struct$_TokenStruct_$1857_memory_ptr",
																	"nativeSrc": "14001:91:15",
																	"nodeType": "YulIdentifier",
																	"src": "14001:91:15"
																},
																"nativeSrc": "14001:104:15",
																"nodeType": "YulFunctionCall",
																"src": "14001:104:15"
															},
															"nativeSrc": "14001:104:15",
															"nodeType": "YulExpressionStatement",
															"src": "14001:104:15"
														},
														{
															"nativeSrc": "14114:28:15",
															"nodeType": "YulAssignment",
															"src": "14114:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14132:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14132:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14137:4:15",
																		"nodeType": "YulLiteral",
																		"src": "14137:4:15",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14128:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14128:3:15"
																},
																"nativeSrc": "14128:14:15",
																"nodeType": "YulFunctionCall",
																"src": "14128:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "14114:10:15",
																	"nodeType": "YulIdentifier",
																	"src": "14114:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_TokenStruct_$1857_memory_ptr_to_t_struct$_TokenStruct_$1857_memory_ptr",
												"nativeSrc": "13853:295:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "13964:6:15",
														"nodeType": "YulTypedName",
														"src": "13964:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13972:3:15",
														"nodeType": "YulTypedName",
														"src": "13972:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "13980:10:15",
														"nodeType": "YulTypedName",
														"src": "13980:10:15",
														"type": ""
													}
												],
												"src": "13853:295:15"
											},
											{
												"body": {
													"nativeSrc": "14258:38:15",
													"nodeType": "YulBlock",
													"src": "14258:38:15",
													"statements": [
														{
															"nativeSrc": "14268:22:15",
															"nodeType": "YulAssignment",
															"src": "14268:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "14280:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14280:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14285:4:15",
																		"nodeType": "YulLiteral",
																		"src": "14285:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14276:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14276:3:15"
																},
																"nativeSrc": "14276:14:15",
																"nodeType": "YulFunctionCall",
																"src": "14276:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "14268:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "14268:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "14154:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14245:3:15",
														"nodeType": "YulTypedName",
														"src": "14245:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "14253:4:15",
														"nodeType": "YulTypedName",
														"src": "14253:4:15",
														"type": ""
													}
												],
												"src": "14154:142:15"
											},
											{
												"body": {
													"nativeSrc": "14566:782:15",
													"nodeType": "YulBlock",
													"src": "14566:782:15",
													"statements": [
														{
															"nativeSrc": "14576:97:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14576:97:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14667:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "14667:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "14590:76:15",
																	"nodeType": "YulIdentifier",
																	"src": "14590:76:15"
																},
																"nativeSrc": "14590:83:15",
																"nodeType": "YulFunctionCall",
																"src": "14590:83:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14580:6:15",
																	"nodeType": "YulTypedName",
																	"src": "14580:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14682:122:15",
															"nodeType": "YulAssignment",
															"src": "14682:122:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14792:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "14792:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14797:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14797:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14689:102:15",
																	"nodeType": "YulIdentifier",
																	"src": "14689:102:15"
																},
																"nativeSrc": "14689:115:15",
																"nodeType": "YulFunctionCall",
																"src": "14689:115:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14682:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14682:3:15"
																}
															]
														},
														{
															"nativeSrc": "14813:100:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14813:100:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14907:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "14907:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "14828:78:15",
																	"nodeType": "YulIdentifier",
																	"src": "14828:78:15"
																},
																"nativeSrc": "14828:85:15",
																"nodeType": "YulFunctionCall",
																"src": "14828:85:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "14817:7:15",
																	"nodeType": "YulTypedName",
																	"src": "14817:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14922:21:15",
															"nodeType": "YulVariableDeclaration",
															"src": "14922:21:15",
															"value": {
																"name": "baseRef",
																"nativeSrc": "14936:7:15",
																"nodeType": "YulIdentifier",
																"src": "14936:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "14926:6:15",
																	"nodeType": "YulTypedName",
																	"src": "14926:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15012:311:15",
																"nodeType": "YulBlock",
																"src": "15012:311:15",
																"statements": [
																	{
																		"nativeSrc": "15026:34:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15026:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "15053:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "15053:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "15047:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "15047:5:15"
																			},
																			"nativeSrc": "15047:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15047:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "15030:13:15",
																				"nodeType": "YulTypedName",
																				"src": "15030:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15073:128:15",
																		"nodeType": "YulAssignment",
																		"src": "15073:128:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "15182:13:15",
																					"nodeType": "YulIdentifier",
																					"src": "15182:13:15"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "15197:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15197:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_TokenStruct_$1857_memory_ptr_to_t_struct$_TokenStruct_$1857_memory_ptr",
																				"nativeSrc": "15080:101:15",
																				"nodeType": "YulIdentifier",
																				"src": "15080:101:15"
																			},
																			"nativeSrc": "15080:121:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15080:121:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "15073:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "15073:3:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "15214:99:15",
																		"nodeType": "YulAssignment",
																		"src": "15214:99:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "15306:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "15306:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "15224:81:15",
																				"nodeType": "YulIdentifier",
																				"src": "15224:81:15"
																			},
																			"nativeSrc": "15224:89:15",
																			"nodeType": "YulFunctionCall",
																			"src": "15224:89:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "15214:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "15214:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "14974:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "14974:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14977:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14977:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14971:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "14971:2:15"
																},
																"nativeSrc": "14971:13:15",
																"nodeType": "YulFunctionCall",
																"src": "14971:13:15"
															},
															"nativeSrc": "14952:371:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14985:18:15",
																"nodeType": "YulBlock",
																"src": "14985:18:15",
																"statements": [
																	{
																		"nativeSrc": "14987:14:15",
																		"nodeType": "YulAssignment",
																		"src": "14987:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "14996:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "14996:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14999:1:15",
																					"nodeType": "YulLiteral",
																					"src": "14999:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14992:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "14992:3:15"
																			},
																			"nativeSrc": "14992:9:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14992:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "14987:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "14987:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14956:14:15",
																"nodeType": "YulBlock",
																"src": "14956:14:15",
																"statements": [
																	{
																		"nativeSrc": "14958:10:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14958:10:15",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14967:1:15",
																			"nodeType": "YulLiteral",
																			"src": "14967:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "14962:1:15",
																				"nodeType": "YulTypedName",
																				"src": "14962:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "14952:371:15"
														},
														{
															"nativeSrc": "15332:10:15",
															"nodeType": "YulAssignment",
															"src": "15332:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "15339:3:15",
																"nodeType": "YulIdentifier",
																"src": "15339:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15332:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15332:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "14384:964:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14545:5:15",
														"nodeType": "YulTypedName",
														"src": "14545:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14552:3:15",
														"nodeType": "YulTypedName",
														"src": "14552:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14561:3:15",
														"nodeType": "YulTypedName",
														"src": "14561:3:15",
														"type": ""
													}
												],
												"src": "14384:964:15"
											},
											{
												"body": {
													"nativeSrc": "15560:283:15",
													"nodeType": "YulBlock",
													"src": "15560:283:15",
													"statements": [
														{
															"nativeSrc": "15570:26:15",
															"nodeType": "YulAssignment",
															"src": "15570:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15582:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "15582:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15593:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15593:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15578:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15578:3:15"
																},
																"nativeSrc": "15578:18:15",
																"nodeType": "YulFunctionCall",
																"src": "15578:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15570:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15570:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15617:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15617:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15628:1:15",
																				"nodeType": "YulLiteral",
																				"src": "15628:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15613:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15613:3:15"
																		},
																		"nativeSrc": "15613:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15613:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15636:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "15636:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15642:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "15642:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15632:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "15632:3:15"
																		},
																		"nativeSrc": "15632:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15632:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15606:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15606:6:15"
																},
																"nativeSrc": "15606:47:15",
																"nodeType": "YulFunctionCall",
																"src": "15606:47:15"
															},
															"nativeSrc": "15606:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "15606:47:15"
														},
														{
															"nativeSrc": "15662:174:15",
															"nodeType": "YulAssignment",
															"src": "15662:174:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15822:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "15822:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15831:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "15831:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "15670:151:15",
																	"nodeType": "YulIdentifier",
																	"src": "15670:151:15"
																},
																"nativeSrc": "15670:166:15",
																"nodeType": "YulFunctionCall",
																"src": "15670:166:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15662:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "15662:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "15354:489:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15532:9:15",
														"nodeType": "YulTypedName",
														"src": "15532:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15544:6:15",
														"nodeType": "YulTypedName",
														"src": "15544:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15555:4:15",
														"nodeType": "YulTypedName",
														"src": "15555:4:15",
														"type": ""
													}
												],
												"src": "15354:489:15"
											},
											{
												"body": {
													"nativeSrc": "15914:53:15",
													"nodeType": "YulBlock",
													"src": "15914:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15931:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15931:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15954:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "15954:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "15936:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "15936:17:15"
																		},
																		"nativeSrc": "15936:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15936:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15924:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "15924:6:15"
																},
																"nativeSrc": "15924:37:15",
																"nodeType": "YulFunctionCall",
																"src": "15924:37:15"
															},
															"nativeSrc": "15924:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "15924:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "15849:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15902:5:15",
														"nodeType": "YulTypedName",
														"src": "15902:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15909:3:15",
														"nodeType": "YulTypedName",
														"src": "15909:3:15",
														"type": ""
													}
												],
												"src": "15849:118:15"
											},
											{
												"body": {
													"nativeSrc": "16038:53:15",
													"nodeType": "YulBlock",
													"src": "16038:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16055:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16055:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16078:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "16078:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "16060:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "16060:17:15"
																		},
																		"nativeSrc": "16060:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16060:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16048:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "16048:6:15"
																},
																"nativeSrc": "16048:37:15",
																"nodeType": "YulFunctionCall",
																"src": "16048:37:15"
															},
															"nativeSrc": "16048:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "16048:37:15"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "15973:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16026:5:15",
														"nodeType": "YulTypedName",
														"src": "16026:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16033:3:15",
														"nodeType": "YulTypedName",
														"src": "16033:3:15",
														"type": ""
													}
												],
												"src": "15973:118:15"
											},
											{
												"body": {
													"nativeSrc": "16335:537:15",
													"nodeType": "YulBlock",
													"src": "16335:537:15",
													"statements": [
														{
															"nativeSrc": "16345:27:15",
															"nodeType": "YulAssignment",
															"src": "16345:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16357:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16357:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16368:3:15",
																		"nodeType": "YulLiteral",
																		"src": "16368:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16353:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16353:3:15"
																},
																"nativeSrc": "16353:19:15",
																"nodeType": "YulFunctionCall",
																"src": "16353:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16345:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16345:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16426:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16426:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16439:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16439:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16450:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16450:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16435:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16435:3:15"
																		},
																		"nativeSrc": "16435:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16435:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16382:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16382:43:15"
																},
																"nativeSrc": "16382:71:15",
																"nodeType": "YulFunctionCall",
																"src": "16382:71:15"
															},
															"nativeSrc": "16382:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "16382:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16507:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16507:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16520:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16520:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16531:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16531:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16516:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16516:3:15"
																		},
																		"nativeSrc": "16516:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16516:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "16463:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16463:43:15"
																},
																"nativeSrc": "16463:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16463:72:15"
															},
															"nativeSrc": "16463:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16463:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16589:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16589:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16602:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16602:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16613:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16613:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16598:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16598:3:15"
																		},
																		"nativeSrc": "16598:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16598:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "16545:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16545:43:15"
																},
																"nativeSrc": "16545:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16545:72:15"
															},
															"nativeSrc": "16545:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16545:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16671:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16671:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16684:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16684:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16695:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16695:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16680:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16680:3:15"
																		},
																		"nativeSrc": "16680:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16680:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16627:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16627:43:15"
																},
																"nativeSrc": "16627:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16627:72:15"
															},
															"nativeSrc": "16627:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16627:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "16753:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16753:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16766:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16766:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16777:3:15",
																				"nodeType": "YulLiteral",
																				"src": "16777:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16762:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16762:3:15"
																		},
																		"nativeSrc": "16762:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16762:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16709:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16709:43:15"
																},
																"nativeSrc": "16709:73:15",
																"nodeType": "YulFunctionCall",
																"src": "16709:73:15"
															},
															"nativeSrc": "16709:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "16709:73:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "16836:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16836:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16849:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16849:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16860:3:15",
																				"nodeType": "YulLiteral",
																				"src": "16860:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16845:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16845:3:15"
																		},
																		"nativeSrc": "16845:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16845:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16792:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16792:43:15"
																},
																"nativeSrc": "16792:73:15",
																"nodeType": "YulFunctionCall",
																"src": "16792:73:15"
															},
															"nativeSrc": "16792:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "16792:73:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32_t_bytes32_t_uint256_t_address_t_uint256__to_t_address_t_bytes32_t_bytes32_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16097:775:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16267:9:15",
														"nodeType": "YulTypedName",
														"src": "16267:9:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "16279:6:15",
														"nodeType": "YulTypedName",
														"src": "16279:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "16287:6:15",
														"nodeType": "YulTypedName",
														"src": "16287:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16295:6:15",
														"nodeType": "YulTypedName",
														"src": "16295:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16303:6:15",
														"nodeType": "YulTypedName",
														"src": "16303:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16311:6:15",
														"nodeType": "YulTypedName",
														"src": "16311:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16319:6:15",
														"nodeType": "YulTypedName",
														"src": "16319:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16330:4:15",
														"nodeType": "YulTypedName",
														"src": "16330:4:15",
														"type": ""
													}
												],
												"src": "16097:775:15"
											},
											{
												"body": {
													"nativeSrc": "16976:124:15",
													"nodeType": "YulBlock",
													"src": "16976:124:15",
													"statements": [
														{
															"nativeSrc": "16986:26:15",
															"nodeType": "YulAssignment",
															"src": "16986:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16998:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16998:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17009:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17009:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16994:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16994:3:15"
																},
																"nativeSrc": "16994:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16994:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16986:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16986:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17066:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17066:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17079:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17079:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17090:1:15",
																				"nodeType": "YulLiteral",
																				"src": "17090:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17075:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17075:3:15"
																		},
																		"nativeSrc": "17075:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17075:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17022:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "17022:43:15"
																},
																"nativeSrc": "17022:71:15",
																"nodeType": "YulFunctionCall",
																"src": "17022:71:15"
															},
															"nativeSrc": "17022:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "17022:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "16878:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16948:9:15",
														"nodeType": "YulTypedName",
														"src": "16948:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16960:6:15",
														"nodeType": "YulTypedName",
														"src": "16960:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16971:4:15",
														"nodeType": "YulTypedName",
														"src": "16971:4:15",
														"type": ""
													}
												],
												"src": "16878:222:15"
											},
											{
												"body": {
													"nativeSrc": "17146:76:15",
													"nodeType": "YulBlock",
													"src": "17146:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "17200:16:15",
																"nodeType": "YulBlock",
																"src": "17200:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17209:1:15",
																					"nodeType": "YulLiteral",
																					"src": "17209:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17212:1:15",
																					"nodeType": "YulLiteral",
																					"src": "17212:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17202:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "17202:6:15"
																			},
																			"nativeSrc": "17202:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17202:12:15"
																		},
																		"nativeSrc": "17202:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "17202:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17169:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "17169:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17191:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "17191:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "17176:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "17176:14:15"
																				},
																				"nativeSrc": "17176:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17176:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17166:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "17166:2:15"
																		},
																		"nativeSrc": "17166:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17166:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17159:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "17159:6:15"
																},
																"nativeSrc": "17159:40:15",
																"nodeType": "YulFunctionCall",
																"src": "17159:40:15"
															},
															"nativeSrc": "17156:60:15",
															"nodeType": "YulIf",
															"src": "17156:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "17106:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17139:5:15",
														"nodeType": "YulTypedName",
														"src": "17139:5:15",
														"type": ""
													}
												],
												"src": "17106:116:15"
											},
											{
												"body": {
													"nativeSrc": "17277:84:15",
													"nodeType": "YulBlock",
													"src": "17277:84:15",
													"statements": [
														{
															"nativeSrc": "17287:29:15",
															"nodeType": "YulAssignment",
															"src": "17287:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17309:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17309:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "17296:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "17296:12:15"
																},
																"nativeSrc": "17296:20:15",
																"nodeType": "YulFunctionCall",
																"src": "17296:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17287:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "17287:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17349:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "17349:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "17325:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "17325:23:15"
																},
																"nativeSrc": "17325:30:15",
																"nodeType": "YulFunctionCall",
																"src": "17325:30:15"
															},
															"nativeSrc": "17325:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "17325:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "17228:133:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17255:6:15",
														"nodeType": "YulTypedName",
														"src": "17255:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17263:3:15",
														"nodeType": "YulTypedName",
														"src": "17263:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17271:5:15",
														"nodeType": "YulTypedName",
														"src": "17271:5:15",
														"type": ""
													}
												],
												"src": "17228:133:15"
											},
											{
												"body": {
													"nativeSrc": "17464:516:15",
													"nodeType": "YulBlock",
													"src": "17464:516:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "17510:83:15",
																"nodeType": "YulBlock",
																"src": "17510:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17512:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "17512:77:15"
																			},
																			"nativeSrc": "17512:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "17512:79:15"
																		},
																		"nativeSrc": "17512:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "17512:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17485:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17485:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17494:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17494:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17481:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17481:3:15"
																		},
																		"nativeSrc": "17481:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17481:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17506:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17506:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17477:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "17477:3:15"
																},
																"nativeSrc": "17477:32:15",
																"nodeType": "YulFunctionCall",
																"src": "17477:32:15"
															},
															"nativeSrc": "17474:119:15",
															"nodeType": "YulIf",
															"src": "17474:119:15"
														},
														{
															"nativeSrc": "17603:117:15",
															"nodeType": "YulBlock",
															"src": "17603:117:15",
															"statements": [
																{
																	"nativeSrc": "17618:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17618:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17632:1:15",
																		"nodeType": "YulLiteral",
																		"src": "17632:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17622:6:15",
																			"nodeType": "YulTypedName",
																			"src": "17622:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17647:63:15",
																	"nodeType": "YulAssignment",
																	"src": "17647:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17682:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "17682:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17693:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "17693:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17678:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "17678:3:15"
																				},
																				"nativeSrc": "17678:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17678:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17702:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17702:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "17657:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "17657:20:15"
																		},
																		"nativeSrc": "17657:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17657:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17647:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "17647:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17730:118:15",
															"nodeType": "YulBlock",
															"src": "17730:118:15",
															"statements": [
																{
																	"nativeSrc": "17745:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17745:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17759:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17759:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17749:6:15",
																			"nodeType": "YulTypedName",
																			"src": "17749:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17775:63:15",
																	"nodeType": "YulAssignment",
																	"src": "17775:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17810:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "17810:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17821:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "17821:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17806:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "17806:3:15"
																				},
																				"nativeSrc": "17806:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17806:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17830:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17830:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17785:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "17785:20:15"
																		},
																		"nativeSrc": "17785:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17785:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17775:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "17775:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17858:115:15",
															"nodeType": "YulBlock",
															"src": "17858:115:15",
															"statements": [
																{
																	"nativeSrc": "17873:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17873:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17887:2:15",
																		"nodeType": "YulLiteral",
																		"src": "17887:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17877:6:15",
																			"nodeType": "YulTypedName",
																			"src": "17877:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17903:60:15",
																	"nodeType": "YulAssignment",
																	"src": "17903:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17935:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "17935:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17946:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "17946:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17931:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "17931:3:15"
																				},
																				"nativeSrc": "17931:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "17931:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17955:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "17955:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "17913:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "17913:17:15"
																		},
																		"nativeSrc": "17913:50:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17913:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "17903:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "17903:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_addresst_bool",
												"nativeSrc": "17367:613:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17418:9:15",
														"nodeType": "YulTypedName",
														"src": "17418:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17429:7:15",
														"nodeType": "YulTypedName",
														"src": "17429:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17441:6:15",
														"nodeType": "YulTypedName",
														"src": "17441:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17449:6:15",
														"nodeType": "YulTypedName",
														"src": "17449:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17457:6:15",
														"nodeType": "YulTypedName",
														"src": "17457:6:15",
														"type": ""
													}
												],
												"src": "17367:613:15"
											},
											{
												"body": {
													"nativeSrc": "18069:391:15",
													"nodeType": "YulBlock",
													"src": "18069:391:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "18115:83:15",
																"nodeType": "YulBlock",
																"src": "18115:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18117:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "18117:77:15"
																			},
																			"nativeSrc": "18117:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "18117:79:15"
																		},
																		"nativeSrc": "18117:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "18117:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18090:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18090:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18099:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "18099:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18086:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18086:3:15"
																		},
																		"nativeSrc": "18086:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18086:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18111:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18111:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18082:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18082:3:15"
																},
																"nativeSrc": "18082:32:15",
																"nodeType": "YulFunctionCall",
																"src": "18082:32:15"
															},
															"nativeSrc": "18079:119:15",
															"nodeType": "YulIf",
															"src": "18079:119:15"
														},
														{
															"nativeSrc": "18208:117:15",
															"nodeType": "YulBlock",
															"src": "18208:117:15",
															"statements": [
																{
																	"nativeSrc": "18223:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18223:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18237:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18237:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18227:6:15",
																			"nodeType": "YulTypedName",
																			"src": "18227:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18252:63:15",
																	"nodeType": "YulAssignment",
																	"src": "18252:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18287:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "18287:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18298:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "18298:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18283:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18283:3:15"
																				},
																				"nativeSrc": "18283:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18283:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18307:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18307:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "18262:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "18262:20:15"
																		},
																		"nativeSrc": "18262:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18262:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18252:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "18252:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18335:118:15",
															"nodeType": "YulBlock",
															"src": "18335:118:15",
															"statements": [
																{
																	"nativeSrc": "18350:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18350:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18364:2:15",
																		"nodeType": "YulLiteral",
																		"src": "18364:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18354:6:15",
																			"nodeType": "YulTypedName",
																			"src": "18354:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18380:63:15",
																	"nodeType": "YulAssignment",
																	"src": "18380:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18415:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "18415:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18426:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "18426:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18411:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "18411:3:15"
																				},
																				"nativeSrc": "18411:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "18411:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18435:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "18435:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "18390:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "18390:20:15"
																		},
																		"nativeSrc": "18390:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18390:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "18380:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "18380:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "17986:474:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18031:9:15",
														"nodeType": "YulTypedName",
														"src": "18031:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18042:7:15",
														"nodeType": "YulTypedName",
														"src": "18042:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18054:6:15",
														"nodeType": "YulTypedName",
														"src": "18054:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18062:6:15",
														"nodeType": "YulTypedName",
														"src": "18062:6:15",
														"type": ""
													}
												],
												"src": "17986:474:15"
											},
											{
												"body": {
													"nativeSrc": "18555:28:15",
													"nodeType": "YulBlock",
													"src": "18555:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18572:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18572:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18575:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18575:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18565:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18565:6:15"
																},
																"nativeSrc": "18565:12:15",
																"nodeType": "YulFunctionCall",
																"src": "18565:12:15"
															},
															"nativeSrc": "18565:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "18565:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "18466:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "18466:117:15"
											},
											{
												"body": {
													"nativeSrc": "18678:28:15",
													"nodeType": "YulBlock",
													"src": "18678:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18695:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18695:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18698:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18698:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18688:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18688:6:15"
																},
																"nativeSrc": "18688:12:15",
																"nodeType": "YulFunctionCall",
																"src": "18688:12:15"
															},
															"nativeSrc": "18688:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "18688:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "18589:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "18589:117:15"
											},
											{
												"body": {
													"nativeSrc": "18760:54:15",
													"nodeType": "YulBlock",
													"src": "18760:54:15",
													"statements": [
														{
															"nativeSrc": "18770:38:15",
															"nodeType": "YulAssignment",
															"src": "18770:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18788:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "18788:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18795:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18795:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18784:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18784:3:15"
																		},
																		"nativeSrc": "18784:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18784:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18804:2:15",
																				"nodeType": "YulLiteral",
																				"src": "18804:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "18800:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "18800:3:15"
																		},
																		"nativeSrc": "18800:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "18800:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18780:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "18780:3:15"
																},
																"nativeSrc": "18780:28:15",
																"nodeType": "YulFunctionCall",
																"src": "18780:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18770:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18770:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "18712:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18743:5:15",
														"nodeType": "YulTypedName",
														"src": "18743:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18753:6:15",
														"nodeType": "YulTypedName",
														"src": "18753:6:15",
														"type": ""
													}
												],
												"src": "18712:102:15"
											},
											{
												"body": {
													"nativeSrc": "18848:152:15",
													"nodeType": "YulBlock",
													"src": "18848:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18865:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18865:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18868:77:15",
																		"nodeType": "YulLiteral",
																		"src": "18868:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18858:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18858:6:15"
																},
																"nativeSrc": "18858:88:15",
																"nodeType": "YulFunctionCall",
																"src": "18858:88:15"
															},
															"nativeSrc": "18858:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "18858:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18962:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18962:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18965:4:15",
																		"nodeType": "YulLiteral",
																		"src": "18965:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18955:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18955:6:15"
																},
																"nativeSrc": "18955:15:15",
																"nodeType": "YulFunctionCall",
																"src": "18955:15:15"
															},
															"nativeSrc": "18955:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "18955:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18986:1:15",
																		"nodeType": "YulLiteral",
																		"src": "18986:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18989:4:15",
																		"nodeType": "YulLiteral",
																		"src": "18989:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18979:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "18979:6:15"
																},
																"nativeSrc": "18979:15:15",
																"nodeType": "YulFunctionCall",
																"src": "18979:15:15"
															},
															"nativeSrc": "18979:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "18979:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "18820:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "18820:180:15"
											},
											{
												"body": {
													"nativeSrc": "19049:238:15",
													"nodeType": "YulBlock",
													"src": "19049:238:15",
													"statements": [
														{
															"nativeSrc": "19059:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "19059:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "19081:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19081:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "19111:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "19111:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "19089:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "19089:21:15"
																		},
																		"nativeSrc": "19089:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19089:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19077:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19077:3:15"
																},
																"nativeSrc": "19077:40:15",
																"nodeType": "YulFunctionCall",
																"src": "19077:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "19063:10:15",
																	"nodeType": "YulTypedName",
																	"src": "19063:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19228:22:15",
																"nodeType": "YulBlock",
																"src": "19228:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19230:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "19230:16:15"
																			},
																			"nativeSrc": "19230:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "19230:18:15"
																		},
																		"nativeSrc": "19230:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "19230:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "19171:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "19171:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19183:18:15",
																				"nodeType": "YulLiteral",
																				"src": "19183:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "19168:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "19168:2:15"
																		},
																		"nativeSrc": "19168:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19168:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "19207:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "19207:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "19219:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "19219:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "19204:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "19204:2:15"
																		},
																		"nativeSrc": "19204:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19204:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19165:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "19165:2:15"
																},
																"nativeSrc": "19165:62:15",
																"nodeType": "YulFunctionCall",
																"src": "19165:62:15"
															},
															"nativeSrc": "19162:88:15",
															"nodeType": "YulIf",
															"src": "19162:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19266:2:15",
																		"nodeType": "YulLiteral",
																		"src": "19266:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "19270:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "19270:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19259:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19259:6:15"
																},
																"nativeSrc": "19259:22:15",
																"nodeType": "YulFunctionCall",
																"src": "19259:22:15"
															},
															"nativeSrc": "19259:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "19259:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "19006:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19035:6:15",
														"nodeType": "YulTypedName",
														"src": "19035:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "19043:4:15",
														"nodeType": "YulTypedName",
														"src": "19043:4:15",
														"type": ""
													}
												],
												"src": "19006:281:15"
											},
											{
												"body": {
													"nativeSrc": "19334:88:15",
													"nodeType": "YulBlock",
													"src": "19334:88:15",
													"statements": [
														{
															"nativeSrc": "19344:30:15",
															"nodeType": "YulAssignment",
															"src": "19344:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "19354:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "19354:18:15"
																},
																"nativeSrc": "19354:20:15",
																"nodeType": "YulFunctionCall",
																"src": "19354:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "19344:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19344:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "19403:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19403:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "19411:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19411:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "19383:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "19383:19:15"
																},
																"nativeSrc": "19383:33:15",
																"nodeType": "YulFunctionCall",
																"src": "19383:33:15"
															},
															"nativeSrc": "19383:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "19383:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "19293:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "19318:4:15",
														"nodeType": "YulTypedName",
														"src": "19318:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "19327:6:15",
														"nodeType": "YulTypedName",
														"src": "19327:6:15",
														"type": ""
													}
												],
												"src": "19293:129:15"
											},
											{
												"body": {
													"nativeSrc": "19494:241:15",
													"nodeType": "YulBlock",
													"src": "19494:241:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "19599:22:15",
																"nodeType": "YulBlock",
																"src": "19599:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19601:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "19601:16:15"
																			},
																			"nativeSrc": "19601:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "19601:18:15"
																		},
																		"nativeSrc": "19601:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "19601:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "19571:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19571:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19579:18:15",
																		"nodeType": "YulLiteral",
																		"src": "19579:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19568:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "19568:2:15"
																},
																"nativeSrc": "19568:30:15",
																"nodeType": "YulFunctionCall",
																"src": "19568:30:15"
															},
															"nativeSrc": "19565:56:15",
															"nodeType": "YulIf",
															"src": "19565:56:15"
														},
														{
															"nativeSrc": "19631:37:15",
															"nodeType": "YulAssignment",
															"src": "19631:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "19661:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19661:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "19639:21:15",
																	"nodeType": "YulIdentifier",
																	"src": "19639:21:15"
																},
																"nativeSrc": "19639:29:15",
																"nodeType": "YulFunctionCall",
																"src": "19639:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "19631:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19631:4:15"
																}
															]
														},
														{
															"nativeSrc": "19705:23:15",
															"nodeType": "YulAssignment",
															"src": "19705:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "19717:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "19717:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19723:4:15",
																		"nodeType": "YulLiteral",
																		"src": "19723:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19713:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "19713:3:15"
																},
																"nativeSrc": "19713:15:15",
																"nodeType": "YulFunctionCall",
																"src": "19713:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "19705:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "19705:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "19428:307:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "19478:6:15",
														"nodeType": "YulTypedName",
														"src": "19478:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "19489:4:15",
														"nodeType": "YulTypedName",
														"src": "19489:4:15",
														"type": ""
													}
												],
												"src": "19428:307:15"
											},
											{
												"body": {
													"nativeSrc": "19805:82:15",
													"nodeType": "YulBlock",
													"src": "19805:82:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "19828:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19828:3:15"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "19833:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "19833:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19838:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "19838:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "19815:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "19815:12:15"
																},
																"nativeSrc": "19815:30:15",
																"nodeType": "YulFunctionCall",
																"src": "19815:30:15"
															},
															"nativeSrc": "19815:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "19815:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "19865:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "19865:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "19870:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "19870:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19861:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "19861:3:15"
																		},
																		"nativeSrc": "19861:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "19861:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19879:1:15",
																		"nodeType": "YulLiteral",
																		"src": "19879:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19854:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "19854:6:15"
																},
																"nativeSrc": "19854:27:15",
																"nodeType": "YulFunctionCall",
																"src": "19854:27:15"
															},
															"nativeSrc": "19854:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "19854:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "19741:146:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "19787:3:15",
														"nodeType": "YulTypedName",
														"src": "19787:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "19792:3:15",
														"nodeType": "YulTypedName",
														"src": "19792:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19797:6:15",
														"nodeType": "YulTypedName",
														"src": "19797:6:15",
														"type": ""
													}
												],
												"src": "19741:146:15"
											},
											{
												"body": {
													"nativeSrc": "19976:340:15",
													"nodeType": "YulBlock",
													"src": "19976:340:15",
													"statements": [
														{
															"nativeSrc": "19986:74:15",
															"nodeType": "YulAssignment",
															"src": "19986:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "20052:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "20052:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "20011:40:15",
																			"nodeType": "YulIdentifier",
																			"src": "20011:40:15"
																		},
																		"nativeSrc": "20011:48:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20011:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "19995:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "19995:15:15"
																},
																"nativeSrc": "19995:65:15",
																"nodeType": "YulFunctionCall",
																"src": "19995:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "19986:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "19986:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "20076:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "20076:5:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20083:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20083:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20069:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20069:6:15"
																},
																"nativeSrc": "20069:21:15",
																"nodeType": "YulFunctionCall",
																"src": "20069:21:15"
															},
															"nativeSrc": "20069:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "20069:21:15"
														},
														{
															"nativeSrc": "20099:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "20099:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "20114:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "20114:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20121:4:15",
																		"nodeType": "YulLiteral",
																		"src": "20121:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20110:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20110:3:15"
																},
																"nativeSrc": "20110:16:15",
																"nodeType": "YulFunctionCall",
																"src": "20110:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "20103:3:15",
																	"nodeType": "YulTypedName",
																	"src": "20103:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20164:83:15",
																"nodeType": "YulBlock",
																"src": "20164:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "20166:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "20166:77:15"
																			},
																			"nativeSrc": "20166:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "20166:79:15"
																		},
																		"nativeSrc": "20166:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "20166:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "20145:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "20145:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "20150:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "20150:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20141:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20141:3:15"
																		},
																		"nativeSrc": "20141:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20141:16:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "20159:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20159:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20138:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "20138:2:15"
																},
																"nativeSrc": "20138:25:15",
																"nodeType": "YulFunctionCall",
																"src": "20138:25:15"
															},
															"nativeSrc": "20135:112:15",
															"nodeType": "YulIf",
															"src": "20135:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "20293:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20293:3:15"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "20298:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20298:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20303:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20303:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "20256:36:15",
																	"nodeType": "YulIdentifier",
																	"src": "20256:36:15"
																},
																"nativeSrc": "20256:54:15",
																"nodeType": "YulFunctionCall",
																"src": "20256:54:15"
															},
															"nativeSrc": "20256:54:15",
															"nodeType": "YulExpressionStatement",
															"src": "20256:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "19893:423:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "19949:3:15",
														"nodeType": "YulTypedName",
														"src": "19949:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19954:6:15",
														"nodeType": "YulTypedName",
														"src": "19954:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19962:3:15",
														"nodeType": "YulTypedName",
														"src": "19962:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "19970:5:15",
														"nodeType": "YulTypedName",
														"src": "19970:5:15",
														"type": ""
													}
												],
												"src": "19893:423:15"
											},
											{
												"body": {
													"nativeSrc": "20396:277:15",
													"nodeType": "YulBlock",
													"src": "20396:277:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "20445:83:15",
																"nodeType": "YulBlock",
																"src": "20445:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "20447:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "20447:77:15"
																			},
																			"nativeSrc": "20447:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "20447:79:15"
																		},
																		"nativeSrc": "20447:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "20447:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "20424:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "20424:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20432:4:15",
																						"nodeType": "YulLiteral",
																						"src": "20432:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20420:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "20420:3:15"
																				},
																				"nativeSrc": "20420:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "20420:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "20439:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "20439:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "20416:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20416:3:15"
																		},
																		"nativeSrc": "20416:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20416:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20409:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "20409:6:15"
																},
																"nativeSrc": "20409:35:15",
																"nodeType": "YulFunctionCall",
																"src": "20409:35:15"
															},
															"nativeSrc": "20406:122:15",
															"nodeType": "YulIf",
															"src": "20406:122:15"
														},
														{
															"nativeSrc": "20537:34:15",
															"nodeType": "YulVariableDeclaration",
															"src": "20537:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20564:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20564:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "20551:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "20551:12:15"
																},
																"nativeSrc": "20551:20:15",
																"nodeType": "YulFunctionCall",
																"src": "20551:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20541:6:15",
																	"nodeType": "YulTypedName",
																	"src": "20541:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20580:87:15",
															"nodeType": "YulAssignment",
															"src": "20580:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "20640:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "20640:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20648:4:15",
																				"nodeType": "YulLiteral",
																				"src": "20648:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20636:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20636:3:15"
																		},
																		"nativeSrc": "20636:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20636:17:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20655:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "20655:6:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "20663:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "20663:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "20589:46:15",
																	"nodeType": "YulIdentifier",
																	"src": "20589:46:15"
																},
																"nativeSrc": "20589:78:15",
																"nodeType": "YulFunctionCall",
																"src": "20589:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "20580:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "20580:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "20335:338:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20374:6:15",
														"nodeType": "YulTypedName",
														"src": "20374:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20382:3:15",
														"nodeType": "YulTypedName",
														"src": "20382:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "20390:5:15",
														"nodeType": "YulTypedName",
														"src": "20390:5:15",
														"type": ""
													}
												],
												"src": "20335:338:15"
											},
											{
												"body": {
													"nativeSrc": "20836:1072:15",
													"nodeType": "YulBlock",
													"src": "20836:1072:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "20883:83:15",
																"nodeType": "YulBlock",
																"src": "20883:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20885:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "20885:77:15"
																			},
																			"nativeSrc": "20885:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "20885:79:15"
																		},
																		"nativeSrc": "20885:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "20885:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20857:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "20857:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20866:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "20866:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20853:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "20853:3:15"
																		},
																		"nativeSrc": "20853:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "20853:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20878:3:15",
																		"nodeType": "YulLiteral",
																		"src": "20878:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20849:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "20849:3:15"
																},
																"nativeSrc": "20849:33:15",
																"nodeType": "YulFunctionCall",
																"src": "20849:33:15"
															},
															"nativeSrc": "20846:120:15",
															"nodeType": "YulIf",
															"src": "20846:120:15"
														},
														{
															"nativeSrc": "20976:117:15",
															"nodeType": "YulBlock",
															"src": "20976:117:15",
															"statements": [
																{
																	"nativeSrc": "20991:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20991:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21005:1:15",
																		"nodeType": "YulLiteral",
																		"src": "21005:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20995:6:15",
																			"nodeType": "YulTypedName",
																			"src": "20995:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21020:63:15",
																	"nodeType": "YulAssignment",
																	"src": "21020:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21055:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "21055:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21066:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "21066:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21051:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "21051:3:15"
																				},
																				"nativeSrc": "21051:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "21051:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21075:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "21075:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "21030:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "21030:20:15"
																		},
																		"nativeSrc": "21030:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21030:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21020:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "21020:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21103:118:15",
															"nodeType": "YulBlock",
															"src": "21103:118:15",
															"statements": [
																{
																	"nativeSrc": "21118:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21118:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21132:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21132:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21122:6:15",
																			"nodeType": "YulTypedName",
																			"src": "21122:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21148:63:15",
																	"nodeType": "YulAssignment",
																	"src": "21148:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21183:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "21183:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21194:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "21194:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21179:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "21179:3:15"
																				},
																				"nativeSrc": "21179:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "21179:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21203:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "21203:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "21158:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "21158:20:15"
																		},
																		"nativeSrc": "21158:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21158:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "21148:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "21148:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21231:118:15",
															"nodeType": "YulBlock",
															"src": "21231:118:15",
															"statements": [
																{
																	"nativeSrc": "21246:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21246:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21260:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21260:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21250:6:15",
																			"nodeType": "YulTypedName",
																			"src": "21250:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21276:63:15",
																	"nodeType": "YulAssignment",
																	"src": "21276:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21311:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "21311:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21322:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "21322:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21307:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "21307:3:15"
																				},
																				"nativeSrc": "21307:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "21307:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21331:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "21331:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "21286:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "21286:20:15"
																		},
																		"nativeSrc": "21286:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21286:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "21276:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "21276:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21359:115:15",
															"nodeType": "YulBlock",
															"src": "21359:115:15",
															"statements": [
																{
																	"nativeSrc": "21374:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21374:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21388:2:15",
																		"nodeType": "YulLiteral",
																		"src": "21388:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21378:6:15",
																			"nodeType": "YulTypedName",
																			"src": "21378:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21404:60:15",
																	"nodeType": "YulAssignment",
																	"src": "21404:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21436:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "21436:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21447:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "21447:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21432:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "21432:3:15"
																				},
																				"nativeSrc": "21432:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "21432:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21456:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "21456:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "21414:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "21414:17:15"
																		},
																		"nativeSrc": "21414:50:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21414:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "21404:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "21404:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21484:288:15",
															"nodeType": "YulBlock",
															"src": "21484:288:15",
															"statements": [
																{
																	"nativeSrc": "21499:47:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21499:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21530:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "21530:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "21541:3:15",
																						"nodeType": "YulLiteral",
																						"src": "21541:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21526:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "21526:3:15"
																				},
																				"nativeSrc": "21526:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "21526:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "21513:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "21513:12:15"
																		},
																		"nativeSrc": "21513:33:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21513:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21503:6:15",
																			"nodeType": "YulTypedName",
																			"src": "21503:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "21593:83:15",
																		"nodeType": "YulBlock",
																		"src": "21593:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "21595:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "21595:77:15"
																					},
																					"nativeSrc": "21595:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "21595:79:15"
																				},
																				"nativeSrc": "21595:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "21595:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "21565:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "21565:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21573:18:15",
																				"nodeType": "YulLiteral",
																				"src": "21573:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "21562:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "21562:2:15"
																		},
																		"nativeSrc": "21562:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21562:30:15"
																	},
																	"nativeSrc": "21559:117:15",
																	"nodeType": "YulIf",
																	"src": "21559:117:15"
																},
																{
																	"nativeSrc": "21690:72:15",
																	"nodeType": "YulAssignment",
																	"src": "21690:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21734:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "21734:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21745:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "21745:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21730:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "21730:3:15"
																				},
																				"nativeSrc": "21730:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "21730:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21754:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "21754:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "21700:29:15",
																			"nodeType": "YulIdentifier",
																			"src": "21700:29:15"
																		},
																		"nativeSrc": "21700:62:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21700:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "21690:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "21690:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21782:119:15",
															"nodeType": "YulBlock",
															"src": "21782:119:15",
															"statements": [
																{
																	"nativeSrc": "21797:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21797:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21811:3:15",
																		"nodeType": "YulLiteral",
																		"src": "21811:3:15",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21801:6:15",
																			"nodeType": "YulTypedName",
																			"src": "21801:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21828:63:15",
																	"nodeType": "YulAssignment",
																	"src": "21828:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21863:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "21863:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21874:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "21874:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21859:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "21859:3:15"
																				},
																				"nativeSrc": "21859:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "21859:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21883:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "21883:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "21838:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "21838:20:15"
																		},
																		"nativeSrc": "21838:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "21838:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "21828:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "21828:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_addresst_uint256t_boolt_bytes_memory_ptrt_bytes32",
												"nativeSrc": "20679:1229:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20766:9:15",
														"nodeType": "YulTypedName",
														"src": "20766:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20777:7:15",
														"nodeType": "YulTypedName",
														"src": "20777:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20789:6:15",
														"nodeType": "YulTypedName",
														"src": "20789:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20797:6:15",
														"nodeType": "YulTypedName",
														"src": "20797:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20805:6:15",
														"nodeType": "YulTypedName",
														"src": "20805:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20813:6:15",
														"nodeType": "YulTypedName",
														"src": "20813:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "20821:6:15",
														"nodeType": "YulTypedName",
														"src": "20821:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "20829:6:15",
														"nodeType": "YulTypedName",
														"src": "20829:6:15",
														"type": ""
													}
												],
												"src": "20679:1229:15"
											},
											{
												"body": {
													"nativeSrc": "22012:124:15",
													"nodeType": "YulBlock",
													"src": "22012:124:15",
													"statements": [
														{
															"nativeSrc": "22022:26:15",
															"nodeType": "YulAssignment",
															"src": "22022:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22034:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22034:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22045:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22045:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22030:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22030:3:15"
																},
																"nativeSrc": "22030:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22030:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22022:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22022:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22102:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22102:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22115:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22115:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22126:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22126:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22111:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22111:3:15"
																		},
																		"nativeSrc": "22111:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22111:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "22058:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22058:43:15"
																},
																"nativeSrc": "22058:71:15",
																"nodeType": "YulFunctionCall",
																"src": "22058:71:15"
															},
															"nativeSrc": "22058:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "22058:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "21914:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21984:9:15",
														"nodeType": "YulTypedName",
														"src": "21984:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21996:6:15",
														"nodeType": "YulTypedName",
														"src": "21996:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22007:4:15",
														"nodeType": "YulTypedName",
														"src": "22007:4:15",
														"type": ""
													}
												],
												"src": "21914:222:15"
											},
											{
												"body": {
													"nativeSrc": "22290:282:15",
													"nodeType": "YulBlock",
													"src": "22290:282:15",
													"statements": [
														{
															"nativeSrc": "22300:26:15",
															"nodeType": "YulAssignment",
															"src": "22300:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22312:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "22312:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22323:2:15",
																		"nodeType": "YulLiteral",
																		"src": "22323:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22308:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22308:3:15"
																},
																"nativeSrc": "22308:18:15",
																"nodeType": "YulFunctionCall",
																"src": "22308:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22300:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "22300:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22380:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22380:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22393:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22393:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22404:1:15",
																				"nodeType": "YulLiteral",
																				"src": "22404:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22389:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22389:3:15"
																		},
																		"nativeSrc": "22389:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22389:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22336:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22336:43:15"
																},
																"nativeSrc": "22336:71:15",
																"nodeType": "YulFunctionCall",
																"src": "22336:71:15"
															},
															"nativeSrc": "22336:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "22336:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22455:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22455:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22468:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22468:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22479:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22479:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22464:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22464:3:15"
																		},
																		"nativeSrc": "22464:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22464:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "22417:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "22417:37:15"
																},
																"nativeSrc": "22417:66:15",
																"nodeType": "YulFunctionCall",
																"src": "22417:66:15"
															},
															"nativeSrc": "22417:66:15",
															"nodeType": "YulExpressionStatement",
															"src": "22417:66:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22537:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "22537:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22550:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "22550:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22561:2:15",
																				"nodeType": "YulLiteral",
																				"src": "22561:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22546:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "22546:3:15"
																		},
																		"nativeSrc": "22546:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "22546:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22493:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "22493:43:15"
																},
																"nativeSrc": "22493:72:15",
																"nodeType": "YulFunctionCall",
																"src": "22493:72:15"
															},
															"nativeSrc": "22493:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "22493:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool_t_uint256__to_t_address_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "22142:430:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22246:9:15",
														"nodeType": "YulTypedName",
														"src": "22246:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22258:6:15",
														"nodeType": "YulTypedName",
														"src": "22258:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22266:6:15",
														"nodeType": "YulTypedName",
														"src": "22266:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22274:6:15",
														"nodeType": "YulTypedName",
														"src": "22274:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22285:4:15",
														"nodeType": "YulTypedName",
														"src": "22285:4:15",
														"type": ""
													}
												],
												"src": "22142:430:15"
											},
											{
												"body": {
													"nativeSrc": "22606:152:15",
													"nodeType": "YulBlock",
													"src": "22606:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22623:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22623:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22626:77:15",
																		"nodeType": "YulLiteral",
																		"src": "22626:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22616:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22616:6:15"
																},
																"nativeSrc": "22616:88:15",
																"nodeType": "YulFunctionCall",
																"src": "22616:88:15"
															},
															"nativeSrc": "22616:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "22616:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22720:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22720:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22723:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22723:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22713:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22713:6:15"
																},
																"nativeSrc": "22713:15:15",
																"nodeType": "YulFunctionCall",
																"src": "22713:15:15"
															},
															"nativeSrc": "22713:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "22713:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22744:1:15",
																		"nodeType": "YulLiteral",
																		"src": "22744:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22747:4:15",
																		"nodeType": "YulLiteral",
																		"src": "22747:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22737:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22737:6:15"
																},
																"nativeSrc": "22737:15:15",
																"nodeType": "YulFunctionCall",
																"src": "22737:15:15"
															},
															"nativeSrc": "22737:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "22737:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "22578:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "22578:180:15"
											},
											{
												"body": {
													"nativeSrc": "22808:147:15",
													"nodeType": "YulBlock",
													"src": "22808:147:15",
													"statements": [
														{
															"nativeSrc": "22818:25:15",
															"nodeType": "YulAssignment",
															"src": "22818:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22841:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "22841:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22823:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "22823:17:15"
																},
																"nativeSrc": "22823:20:15",
																"nodeType": "YulFunctionCall",
																"src": "22823:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22818:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "22818:1:15"
																}
															]
														},
														{
															"nativeSrc": "22852:25:15",
															"nodeType": "YulAssignment",
															"src": "22852:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22875:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "22875:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22857:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "22857:17:15"
																},
																"nativeSrc": "22857:20:15",
																"nodeType": "YulFunctionCall",
																"src": "22857:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22852:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "22852:1:15"
																}
															]
														},
														{
															"nativeSrc": "22886:16:15",
															"nodeType": "YulAssignment",
															"src": "22886:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22897:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "22897:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22900:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "22900:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22893:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22893:3:15"
																},
																"nativeSrc": "22893:9:15",
																"nodeType": "YulFunctionCall",
																"src": "22893:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "22886:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "22886:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22926:22:15",
																"nodeType": "YulBlock",
																"src": "22926:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22928:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "22928:16:15"
																			},
																			"nativeSrc": "22928:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "22928:18:15"
																		},
																		"nativeSrc": "22928:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "22928:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22918:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "22918:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "22921:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "22921:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22915:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "22915:2:15"
																},
																"nativeSrc": "22915:10:15",
																"nodeType": "YulFunctionCall",
																"src": "22915:10:15"
															},
															"nativeSrc": "22912:36:15",
															"nodeType": "YulIf",
															"src": "22912:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "22764:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22795:1:15",
														"nodeType": "YulTypedName",
														"src": "22795:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22798:1:15",
														"nodeType": "YulTypedName",
														"src": "22798:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "22804:3:15",
														"nodeType": "YulTypedName",
														"src": "22804:3:15",
														"type": ""
													}
												],
												"src": "22764:191:15"
											},
											{
												"body": {
													"nativeSrc": "22989:152:15",
													"nodeType": "YulBlock",
													"src": "22989:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23006:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23006:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23009:77:15",
																		"nodeType": "YulLiteral",
																		"src": "23009:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22999:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "22999:6:15"
																},
																"nativeSrc": "22999:88:15",
																"nodeType": "YulFunctionCall",
																"src": "22999:88:15"
															},
															"nativeSrc": "22999:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "22999:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23103:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23103:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23106:4:15",
																		"nodeType": "YulLiteral",
																		"src": "23106:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23096:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23096:6:15"
																},
																"nativeSrc": "23096:15:15",
																"nodeType": "YulFunctionCall",
																"src": "23096:15:15"
															},
															"nativeSrc": "23096:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "23096:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23127:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23127:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23130:4:15",
																		"nodeType": "YulLiteral",
																		"src": "23130:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23120:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "23120:6:15"
																},
																"nativeSrc": "23120:15:15",
																"nodeType": "YulFunctionCall",
																"src": "23120:15:15"
															},
															"nativeSrc": "23120:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "23120:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "22961:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "22961:180:15"
											},
											{
												"body": {
													"nativeSrc": "23260:34:15",
													"nodeType": "YulBlock",
													"src": "23260:34:15",
													"statements": [
														{
															"nativeSrc": "23270:18:15",
															"nodeType": "YulAssignment",
															"src": "23270:18:15",
															"value": {
																"name": "pos",
																"nativeSrc": "23285:3:15",
																"nodeType": "YulIdentifier",
																"src": "23285:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "23270:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "23270:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "23147:147:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23232:3:15",
														"nodeType": "YulTypedName",
														"src": "23232:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "23237:6:15",
														"nodeType": "YulTypedName",
														"src": "23237:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "23248:11:15",
														"nodeType": "YulTypedName",
														"src": "23248:11:15",
														"type": ""
													}
												],
												"src": "23147:147:15"
											},
											{
												"body": {
													"nativeSrc": "23406:8:15",
													"nodeType": "YulBlock",
													"src": "23406:8:15",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "23300:114:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23398:6:15",
														"nodeType": "YulTypedName",
														"src": "23398:6:15",
														"type": ""
													}
												],
												"src": "23300:114:15"
											},
											{
												"body": {
													"nativeSrc": "23583:235:15",
													"nodeType": "YulBlock",
													"src": "23583:235:15",
													"statements": [
														{
															"nativeSrc": "23593:90:15",
															"nodeType": "YulAssignment",
															"src": "23593:90:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23676:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "23676:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23681:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23681:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "23600:75:15",
																	"nodeType": "YulIdentifier",
																	"src": "23600:75:15"
																},
																"nativeSrc": "23600:83:15",
																"nodeType": "YulFunctionCall",
																"src": "23600:83:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23593:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23593:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23781:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "23781:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "23692:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "23692:88:15"
																},
																"nativeSrc": "23692:93:15",
																"nodeType": "YulFunctionCall",
																"src": "23692:93:15"
															},
															"nativeSrc": "23692:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "23692:93:15"
														},
														{
															"nativeSrc": "23794:18:15",
															"nodeType": "YulAssignment",
															"src": "23794:18:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23805:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "23805:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23810:1:15",
																		"nodeType": "YulLiteral",
																		"src": "23810:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23801:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23801:3:15"
																},
																"nativeSrc": "23801:11:15",
																"nodeType": "YulFunctionCall",
																"src": "23801:11:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23794:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "23794:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "23420:398:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23571:3:15",
														"nodeType": "YulTypedName",
														"src": "23571:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23579:3:15",
														"nodeType": "YulTypedName",
														"src": "23579:3:15",
														"type": ""
													}
												],
												"src": "23420:398:15"
											},
											{
												"body": {
													"nativeSrc": "24012:191:15",
													"nodeType": "YulBlock",
													"src": "24012:191:15",
													"statements": [
														{
															"nativeSrc": "24023:154:15",
															"nodeType": "YulAssignment",
															"src": "24023:154:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24173:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24173:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "24030:141:15",
																	"nodeType": "YulIdentifier",
																	"src": "24030:141:15"
																},
																"nativeSrc": "24030:147:15",
																"nodeType": "YulFunctionCall",
																"src": "24030:147:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24023:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24023:3:15"
																}
															]
														},
														{
															"nativeSrc": "24187:10:15",
															"nodeType": "YulAssignment",
															"src": "24187:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "24194:3:15",
																"nodeType": "YulIdentifier",
																"src": "24194:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24187:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24187:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "23824:379:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23999:3:15",
														"nodeType": "YulTypedName",
														"src": "23999:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24008:3:15",
														"nodeType": "YulTypedName",
														"src": "24008:3:15",
														"type": ""
													}
												],
												"src": "23824:379:15"
											},
											{
												"body": {
													"nativeSrc": "24305:73:15",
													"nodeType": "YulBlock",
													"src": "24305:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24322:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24322:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24327:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "24327:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24315:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24315:6:15"
																},
																"nativeSrc": "24315:19:15",
																"nodeType": "YulFunctionCall",
																"src": "24315:19:15"
															},
															"nativeSrc": "24315:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "24315:19:15"
														},
														{
															"nativeSrc": "24343:29:15",
															"nodeType": "YulAssignment",
															"src": "24343:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24362:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24362:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24367:4:15",
																		"nodeType": "YulLiteral",
																		"src": "24367:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24358:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24358:3:15"
																},
																"nativeSrc": "24358:14:15",
																"nodeType": "YulFunctionCall",
																"src": "24358:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "24343:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "24343:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "24209:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24277:3:15",
														"nodeType": "YulTypedName",
														"src": "24277:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "24282:6:15",
														"nodeType": "YulTypedName",
														"src": "24282:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "24293:11:15",
														"nodeType": "YulTypedName",
														"src": "24293:11:15",
														"type": ""
													}
												],
												"src": "24209:169:15"
											},
											{
												"body": {
													"nativeSrc": "24490:50:15",
													"nodeType": "YulBlock",
													"src": "24490:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24512:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "24512:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24520:1:15",
																				"nodeType": "YulLiteral",
																				"src": "24520:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24508:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "24508:3:15"
																		},
																		"nativeSrc": "24508:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "24508:14:15"
																	},
																	{
																		"hexValue": "4661696c6564",
																		"kind": "string",
																		"nativeSrc": "24524:8:15",
																		"nodeType": "YulLiteral",
																		"src": "24524:8:15",
																		"type": "",
																		"value": "Failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24501:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "24501:6:15"
																},
																"nativeSrc": "24501:32:15",
																"nodeType": "YulFunctionCall",
																"src": "24501:32:15"
															},
															"nativeSrc": "24501:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "24501:32:15"
														}
													]
												},
												"name": "store_literal_in_memory_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
												"nativeSrc": "24384:156:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24482:6:15",
														"nodeType": "YulTypedName",
														"src": "24482:6:15",
														"type": ""
													}
												],
												"src": "24384:156:15"
											},
											{
												"body": {
													"nativeSrc": "24692:219:15",
													"nodeType": "YulBlock",
													"src": "24692:219:15",
													"statements": [
														{
															"nativeSrc": "24702:73:15",
															"nodeType": "YulAssignment",
															"src": "24702:73:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24768:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24768:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24773:1:15",
																		"nodeType": "YulLiteral",
																		"src": "24773:1:15",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24709:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "24709:58:15"
																},
																"nativeSrc": "24709:66:15",
																"nodeType": "YulFunctionCall",
																"src": "24709:66:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24702:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24702:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24873:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24873:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
																	"nativeSrc": "24784:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "24784:88:15"
																},
																"nativeSrc": "24784:93:15",
																"nodeType": "YulFunctionCall",
																"src": "24784:93:15"
															},
															"nativeSrc": "24784:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "24784:93:15"
														},
														{
															"nativeSrc": "24886:19:15",
															"nodeType": "YulAssignment",
															"src": "24886:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24897:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "24897:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24902:2:15",
																		"nodeType": "YulLiteral",
																		"src": "24902:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24893:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24893:3:15"
																},
																"nativeSrc": "24893:12:15",
																"nodeType": "YulFunctionCall",
																"src": "24893:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24886:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "24886:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24546:365:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24680:3:15",
														"nodeType": "YulTypedName",
														"src": "24680:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24688:3:15",
														"nodeType": "YulTypedName",
														"src": "24688:3:15",
														"type": ""
													}
												],
												"src": "24546:365:15"
											},
											{
												"body": {
													"nativeSrc": "25088:248:15",
													"nodeType": "YulBlock",
													"src": "25088:248:15",
													"statements": [
														{
															"nativeSrc": "25098:26:15",
															"nodeType": "YulAssignment",
															"src": "25098:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25110:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "25110:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25121:2:15",
																		"nodeType": "YulLiteral",
																		"src": "25121:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25106:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25106:3:15"
																},
																"nativeSrc": "25106:18:15",
																"nodeType": "YulFunctionCall",
																"src": "25106:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25098:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "25098:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25145:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25145:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25156:1:15",
																				"nodeType": "YulLiteral",
																				"src": "25156:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25141:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25141:3:15"
																		},
																		"nativeSrc": "25141:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25141:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25164:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "25164:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25170:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25170:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25160:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25160:3:15"
																		},
																		"nativeSrc": "25160:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25160:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25134:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25134:6:15"
																},
																"nativeSrc": "25134:47:15",
																"nodeType": "YulFunctionCall",
																"src": "25134:47:15"
															},
															"nativeSrc": "25134:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "25134:47:15"
														},
														{
															"nativeSrc": "25190:139:15",
															"nodeType": "YulAssignment",
															"src": "25190:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25324:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "25324:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25198:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "25198:124:15"
																},
																"nativeSrc": "25198:131:15",
																"nodeType": "YulFunctionCall",
																"src": "25198:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25190:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "25190:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24917:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25068:9:15",
														"nodeType": "YulTypedName",
														"src": "25068:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25083:4:15",
														"nodeType": "YulTypedName",
														"src": "25083:4:15",
														"type": ""
													}
												],
												"src": "24917:419:15"
											},
											{
												"body": {
													"nativeSrc": "25385:190:15",
													"nodeType": "YulBlock",
													"src": "25385:190:15",
													"statements": [
														{
															"nativeSrc": "25395:33:15",
															"nodeType": "YulAssignment",
															"src": "25395:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25422:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "25422:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25404:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "25404:17:15"
																},
																"nativeSrc": "25404:24:15",
																"nodeType": "YulFunctionCall",
																"src": "25404:24:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "25395:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "25395:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25518:22:15",
																"nodeType": "YulBlock",
																"src": "25518:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "25520:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "25520:16:15"
																			},
																			"nativeSrc": "25520:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "25520:18:15"
																		},
																		"nativeSrc": "25520:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "25520:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25443:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "25443:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25450:66:15",
																		"nodeType": "YulLiteral",
																		"src": "25450:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "25440:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "25440:2:15"
																},
																"nativeSrc": "25440:77:15",
																"nodeType": "YulFunctionCall",
																"src": "25440:77:15"
															},
															"nativeSrc": "25437:103:15",
															"nodeType": "YulIf",
															"src": "25437:103:15"
														},
														{
															"nativeSrc": "25549:20:15",
															"nodeType": "YulAssignment",
															"src": "25549:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25560:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "25560:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25567:1:15",
																		"nodeType": "YulLiteral",
																		"src": "25567:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25556:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25556:3:15"
																},
																"nativeSrc": "25556:13:15",
																"nodeType": "YulFunctionCall",
																"src": "25556:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25549:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25549:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "25342:233:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25371:5:15",
														"nodeType": "YulTypedName",
														"src": "25371:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25381:3:15",
														"nodeType": "YulTypedName",
														"src": "25381:3:15",
														"type": ""
													}
												],
												"src": "25342:233:15"
											},
											{
												"body": {
													"nativeSrc": "25642:51:15",
													"nodeType": "YulBlock",
													"src": "25642:51:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25659:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "25659:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25680:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "25680:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "25664:15:15",
																			"nodeType": "YulIdentifier",
																			"src": "25664:15:15"
																		},
																		"nativeSrc": "25664:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25664:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25652:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "25652:6:15"
																},
																"nativeSrc": "25652:35:15",
																"nodeType": "YulFunctionCall",
																"src": "25652:35:15"
															},
															"nativeSrc": "25652:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "25652:35:15"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "25581:112:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25630:5:15",
														"nodeType": "YulTypedName",
														"src": "25630:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "25637:3:15",
														"nodeType": "YulTypedName",
														"src": "25637:3:15",
														"type": ""
													}
												],
												"src": "25581:112:15"
											},
											{
												"body": {
													"nativeSrc": "25793:120:15",
													"nodeType": "YulBlock",
													"src": "25793:120:15",
													"statements": [
														{
															"nativeSrc": "25803:26:15",
															"nodeType": "YulAssignment",
															"src": "25803:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25815:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "25815:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25826:2:15",
																		"nodeType": "YulLiteral",
																		"src": "25826:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25811:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "25811:3:15"
																},
																"nativeSrc": "25811:18:15",
																"nodeType": "YulFunctionCall",
																"src": "25811:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25803:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "25803:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25879:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "25879:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25892:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "25892:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25903:1:15",
																				"nodeType": "YulLiteral",
																				"src": "25903:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25888:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "25888:3:15"
																		},
																		"nativeSrc": "25888:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "25888:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "25839:39:15",
																	"nodeType": "YulIdentifier",
																	"src": "25839:39:15"
																},
																"nativeSrc": "25839:67:15",
																"nodeType": "YulFunctionCall",
																"src": "25839:67:15"
															},
															"nativeSrc": "25839:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "25839:67:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "25699:214:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25765:9:15",
														"nodeType": "YulTypedName",
														"src": "25765:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25777:6:15",
														"nodeType": "YulTypedName",
														"src": "25777:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25788:4:15",
														"nodeType": "YulTypedName",
														"src": "25788:4:15",
														"type": ""
													}
												],
												"src": "25699:214:15"
											},
											{
												"body": {
													"nativeSrc": "26045:206:15",
													"nodeType": "YulBlock",
													"src": "26045:206:15",
													"statements": [
														{
															"nativeSrc": "26055:26:15",
															"nodeType": "YulAssignment",
															"src": "26055:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26067:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "26067:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26078:2:15",
																		"nodeType": "YulLiteral",
																		"src": "26078:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26063:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "26063:3:15"
																},
																"nativeSrc": "26063:18:15",
																"nodeType": "YulFunctionCall",
																"src": "26063:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26055:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "26055:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26135:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26135:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26148:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "26148:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26159:1:15",
																				"nodeType": "YulLiteral",
																				"src": "26159:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26144:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "26144:3:15"
																		},
																		"nativeSrc": "26144:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26144:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26091:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "26091:43:15"
																},
																"nativeSrc": "26091:71:15",
																"nodeType": "YulFunctionCall",
																"src": "26091:71:15"
															},
															"nativeSrc": "26091:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "26091:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26216:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "26216:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26229:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "26229:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26240:2:15",
																				"nodeType": "YulLiteral",
																				"src": "26240:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26225:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "26225:3:15"
																		},
																		"nativeSrc": "26225:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26225:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26172:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "26172:43:15"
																},
																"nativeSrc": "26172:72:15",
																"nodeType": "YulFunctionCall",
																"src": "26172:72:15"
															},
															"nativeSrc": "26172:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "26172:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "25919:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26009:9:15",
														"nodeType": "YulTypedName",
														"src": "26009:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26021:6:15",
														"nodeType": "YulTypedName",
														"src": "26021:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26029:6:15",
														"nodeType": "YulTypedName",
														"src": "26029:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26040:4:15",
														"nodeType": "YulTypedName",
														"src": "26040:4:15",
														"type": ""
													}
												],
												"src": "25919:332:15"
											},
											{
												"body": {
													"nativeSrc": "26305:362:15",
													"nodeType": "YulBlock",
													"src": "26305:362:15",
													"statements": [
														{
															"nativeSrc": "26315:25:15",
															"nodeType": "YulAssignment",
															"src": "26315:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "26338:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "26338:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "26320:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "26320:17:15"
																},
																"nativeSrc": "26320:20:15",
																"nodeType": "YulFunctionCall",
																"src": "26320:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "26315:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "26315:1:15"
																}
															]
														},
														{
															"nativeSrc": "26349:25:15",
															"nodeType": "YulAssignment",
															"src": "26349:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "26372:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "26372:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "26354:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "26354:17:15"
																},
																"nativeSrc": "26354:20:15",
																"nodeType": "YulFunctionCall",
																"src": "26354:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "26349:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "26349:1:15"
																}
															]
														},
														{
															"nativeSrc": "26383:28:15",
															"nodeType": "YulVariableDeclaration",
															"src": "26383:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "26406:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "26406:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "26409:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "26409:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "26402:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "26402:3:15"
																},
																"nativeSrc": "26402:9:15",
																"nodeType": "YulFunctionCall",
																"src": "26402:9:15"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "26387:11:15",
																	"nodeType": "YulTypedName",
																	"src": "26387:11:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26420:41:15",
															"nodeType": "YulAssignment",
															"src": "26420:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "26449:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "26449:11:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "26431:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "26431:17:15"
																},
																"nativeSrc": "26431:30:15",
																"nodeType": "YulFunctionCall",
																"src": "26431:30:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "26420:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "26420:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "26638:22:15",
																"nodeType": "YulBlock",
																"src": "26638:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "26640:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "26640:16:15"
																			},
																			"nativeSrc": "26640:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "26640:18:15"
																		},
																		"nativeSrc": "26640:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "26640:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "26571:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "26571:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "26564:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "26564:6:15"
																				},
																				"nativeSrc": "26564:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "26564:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "26594:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "26594:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "26601:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "26601:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "26610:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "26610:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "26597:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "26597:3:15"
																						},
																						"nativeSrc": "26597:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "26597:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "26591:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "26591:2:15"
																				},
																				"nativeSrc": "26591:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "26591:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "26544:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "26544:2:15"
																		},
																		"nativeSrc": "26544:83:15",
																		"nodeType": "YulFunctionCall",
																		"src": "26544:83:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "26524:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "26524:6:15"
																},
																"nativeSrc": "26524:113:15",
																"nodeType": "YulFunctionCall",
																"src": "26524:113:15"
															},
															"nativeSrc": "26521:139:15",
															"nodeType": "YulIf",
															"src": "26521:139:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "26257:410:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "26288:1:15",
														"nodeType": "YulTypedName",
														"src": "26288:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "26291:1:15",
														"nodeType": "YulTypedName",
														"src": "26291:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "26297:7:15",
														"nodeType": "YulTypedName",
														"src": "26297:7:15",
														"type": ""
													}
												],
												"src": "26257:410:15"
											},
											{
												"body": {
													"nativeSrc": "26701:152:15",
													"nodeType": "YulBlock",
													"src": "26701:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26718:1:15",
																		"nodeType": "YulLiteral",
																		"src": "26718:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26721:77:15",
																		"nodeType": "YulLiteral",
																		"src": "26721:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26711:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "26711:6:15"
																},
																"nativeSrc": "26711:88:15",
																"nodeType": "YulFunctionCall",
																"src": "26711:88:15"
															},
															"nativeSrc": "26711:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "26711:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26815:1:15",
																		"nodeType": "YulLiteral",
																		"src": "26815:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26818:4:15",
																		"nodeType": "YulLiteral",
																		"src": "26818:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26808:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "26808:6:15"
																},
																"nativeSrc": "26808:15:15",
																"nodeType": "YulFunctionCall",
																"src": "26808:15:15"
															},
															"nativeSrc": "26808:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "26808:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26839:1:15",
																		"nodeType": "YulLiteral",
																		"src": "26839:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26842:4:15",
																		"nodeType": "YulLiteral",
																		"src": "26842:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "26832:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "26832:6:15"
																},
																"nativeSrc": "26832:15:15",
																"nodeType": "YulFunctionCall",
																"src": "26832:15:15"
															},
															"nativeSrc": "26832:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "26832:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "26673:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "26673:180:15"
											},
											{
												"body": {
													"nativeSrc": "26901:143:15",
													"nodeType": "YulBlock",
													"src": "26901:143:15",
													"statements": [
														{
															"nativeSrc": "26911:25:15",
															"nodeType": "YulAssignment",
															"src": "26911:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "26934:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "26934:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "26916:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "26916:17:15"
																},
																"nativeSrc": "26916:20:15",
																"nodeType": "YulFunctionCall",
																"src": "26916:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "26911:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "26911:1:15"
																}
															]
														},
														{
															"nativeSrc": "26945:25:15",
															"nodeType": "YulAssignment",
															"src": "26945:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "26968:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "26968:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "26950:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "26950:17:15"
																},
																"nativeSrc": "26950:20:15",
																"nodeType": "YulFunctionCall",
																"src": "26950:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "26945:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "26945:1:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "26992:22:15",
																"nodeType": "YulBlock",
																"src": "26992:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "26994:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "26994:16:15"
																			},
																			"nativeSrc": "26994:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "26994:18:15"
																		},
																		"nativeSrc": "26994:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "26994:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "26989:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "26989:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "26982:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "26982:6:15"
																},
																"nativeSrc": "26982:9:15",
																"nodeType": "YulFunctionCall",
																"src": "26982:9:15"
															},
															"nativeSrc": "26979:35:15",
															"nodeType": "YulIf",
															"src": "26979:35:15"
														},
														{
															"nativeSrc": "27024:14:15",
															"nodeType": "YulAssignment",
															"src": "27024:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27033:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "27033:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "27036:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "27036:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "27029:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27029:3:15"
																},
																"nativeSrc": "27029:9:15",
																"nodeType": "YulFunctionCall",
																"src": "27029:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "27024:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "27024:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "26859:185:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "26890:1:15",
														"nodeType": "YulTypedName",
														"src": "26890:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "26893:1:15",
														"nodeType": "YulTypedName",
														"src": "26893:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "26899:1:15",
														"nodeType": "YulTypedName",
														"src": "26899:1:15",
														"type": ""
													}
												],
												"src": "26859:185:15"
											},
											{
												"body": {
													"nativeSrc": "27093:148:15",
													"nodeType": "YulBlock",
													"src": "27093:148:15",
													"statements": [
														{
															"nativeSrc": "27103:23:15",
															"nodeType": "YulAssignment",
															"src": "27103:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27124:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "27124:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "27108:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "27108:15:15"
																},
																"nativeSrc": "27108:18:15",
																"nodeType": "YulFunctionCall",
																"src": "27108:18:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "27103:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "27103:1:15"
																}
															]
														},
														{
															"nativeSrc": "27135:23:15",
															"nodeType": "YulAssignment",
															"src": "27135:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "27156:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "27156:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "27140:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "27140:15:15"
																},
																"nativeSrc": "27140:18:15",
																"nodeType": "YulFunctionCall",
																"src": "27140:18:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "27135:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "27135:1:15"
																}
															]
														},
														{
															"nativeSrc": "27167:17:15",
															"nodeType": "YulAssignment",
															"src": "27167:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27179:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "27179:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "27182:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "27182:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "27175:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27175:3:15"
																},
																"nativeSrc": "27175:9:15",
																"nodeType": "YulFunctionCall",
																"src": "27175:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "27167:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "27167:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27212:22:15",
																"nodeType": "YulBlock",
																"src": "27212:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "27214:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "27214:16:15"
																			},
																			"nativeSrc": "27214:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "27214:18:15"
																		},
																		"nativeSrc": "27214:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "27214:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "27200:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "27200:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27206:4:15",
																		"nodeType": "YulLiteral",
																		"src": "27206:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27197:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "27197:2:15"
																},
																"nativeSrc": "27197:14:15",
																"nodeType": "YulFunctionCall",
																"src": "27197:14:15"
															},
															"nativeSrc": "27194:40:15",
															"nodeType": "YulIf",
															"src": "27194:40:15"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "27050:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "27079:1:15",
														"nodeType": "YulTypedName",
														"src": "27079:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "27082:1:15",
														"nodeType": "YulTypedName",
														"src": "27082:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "27088:4:15",
														"nodeType": "YulTypedName",
														"src": "27088:4:15",
														"type": ""
													}
												],
												"src": "27050:191:15"
											},
											{
												"body": {
													"nativeSrc": "27353:116:15",
													"nodeType": "YulBlock",
													"src": "27353:116:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27375:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "27375:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27383:1:15",
																				"nodeType": "YulLiteral",
																				"src": "27383:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27371:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "27371:3:15"
																		},
																		"nativeSrc": "27371:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27371:14:15"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e6420457468657220746f20746865206d616e61",
																		"kind": "string",
																		"nativeSrc": "27387:34:15",
																		"nodeType": "YulLiteral",
																		"src": "27387:34:15",
																		"type": "",
																		"value": "Failed to send Ether to the mana"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27364:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "27364:6:15"
																},
																"nativeSrc": "27364:58:15",
																"nodeType": "YulFunctionCall",
																"src": "27364:58:15"
															},
															"nativeSrc": "27364:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "27364:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27443:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "27443:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27451:2:15",
																				"nodeType": "YulLiteral",
																				"src": "27451:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27439:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "27439:3:15"
																		},
																		"nativeSrc": "27439:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "27439:15:15"
																	},
																	{
																		"hexValue": "676572",
																		"kind": "string",
																		"nativeSrc": "27456:5:15",
																		"nodeType": "YulLiteral",
																		"src": "27456:5:15",
																		"type": "",
																		"value": "ger"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27432:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "27432:6:15"
																},
																"nativeSrc": "27432:30:15",
																"nodeType": "YulFunctionCall",
																"src": "27432:30:15"
															},
															"nativeSrc": "27432:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "27432:30:15"
														}
													]
												},
												"name": "store_literal_in_memory_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694",
												"nativeSrc": "27247:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27345:6:15",
														"nodeType": "YulTypedName",
														"src": "27345:6:15",
														"type": ""
													}
												],
												"src": "27247:222:15"
											},
											{
												"body": {
													"nativeSrc": "27621:220:15",
													"nodeType": "YulBlock",
													"src": "27621:220:15",
													"statements": [
														{
															"nativeSrc": "27631:74:15",
															"nodeType": "YulAssignment",
															"src": "27631:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27697:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27697:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27702:2:15",
																		"nodeType": "YulLiteral",
																		"src": "27702:2:15",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27638:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "27638:58:15"
																},
																"nativeSrc": "27638:67:15",
																"nodeType": "YulFunctionCall",
																"src": "27638:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27631:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27631:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27803:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27803:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694",
																	"nativeSrc": "27714:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "27714:88:15"
																},
																"nativeSrc": "27714:93:15",
																"nodeType": "YulFunctionCall",
																"src": "27714:93:15"
															},
															"nativeSrc": "27714:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "27714:93:15"
														},
														{
															"nativeSrc": "27816:19:15",
															"nodeType": "YulAssignment",
															"src": "27816:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27827:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "27827:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27832:2:15",
																		"nodeType": "YulLiteral",
																		"src": "27832:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27823:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27823:3:15"
																},
																"nativeSrc": "27823:12:15",
																"nodeType": "YulFunctionCall",
																"src": "27823:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27816:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "27816:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27475:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27609:3:15",
														"nodeType": "YulTypedName",
														"src": "27609:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27617:3:15",
														"nodeType": "YulTypedName",
														"src": "27617:3:15",
														"type": ""
													}
												],
												"src": "27475:366:15"
											},
											{
												"body": {
													"nativeSrc": "28018:248:15",
													"nodeType": "YulBlock",
													"src": "28018:248:15",
													"statements": [
														{
															"nativeSrc": "28028:26:15",
															"nodeType": "YulAssignment",
															"src": "28028:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28040:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "28040:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28051:2:15",
																		"nodeType": "YulLiteral",
																		"src": "28051:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28036:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28036:3:15"
																},
																"nativeSrc": "28036:18:15",
																"nodeType": "YulFunctionCall",
																"src": "28036:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28028:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "28028:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28075:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28075:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28086:1:15",
																				"nodeType": "YulLiteral",
																				"src": "28086:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28071:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28071:3:15"
																		},
																		"nativeSrc": "28071:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28071:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28094:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "28094:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28100:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28100:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28090:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28090:3:15"
																		},
																		"nativeSrc": "28090:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28090:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28064:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "28064:6:15"
																},
																"nativeSrc": "28064:47:15",
																"nodeType": "YulFunctionCall",
																"src": "28064:47:15"
															},
															"nativeSrc": "28064:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "28064:47:15"
														},
														{
															"nativeSrc": "28120:139:15",
															"nodeType": "YulAssignment",
															"src": "28120:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "28254:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "28254:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28128:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "28128:124:15"
																},
																"nativeSrc": "28128:131:15",
																"nodeType": "YulFunctionCall",
																"src": "28128:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28120:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "28120:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27847:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27998:9:15",
														"nodeType": "YulTypedName",
														"src": "27998:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28013:4:15",
														"nodeType": "YulTypedName",
														"src": "28013:4:15",
														"type": ""
													}
												],
												"src": "27847:419:15"
											},
											{
												"body": {
													"nativeSrc": "28335:80:15",
													"nodeType": "YulBlock",
													"src": "28335:80:15",
													"statements": [
														{
															"nativeSrc": "28345:22:15",
															"nodeType": "YulAssignment",
															"src": "28345:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "28360:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28360:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "28354:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "28354:5:15"
																},
																"nativeSrc": "28354:13:15",
																"nodeType": "YulFunctionCall",
																"src": "28354:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "28345:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "28345:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28403:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "28403:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "28376:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "28376:26:15"
																},
																"nativeSrc": "28376:33:15",
																"nodeType": "YulFunctionCall",
																"src": "28376:33:15"
															},
															"nativeSrc": "28376:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "28376:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "28272:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "28313:6:15",
														"nodeType": "YulTypedName",
														"src": "28313:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "28321:3:15",
														"nodeType": "YulTypedName",
														"src": "28321:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "28329:5:15",
														"nodeType": "YulTypedName",
														"src": "28329:5:15",
														"type": ""
													}
												],
												"src": "28272:143:15"
											},
											{
												"body": {
													"nativeSrc": "28498:274:15",
													"nodeType": "YulBlock",
													"src": "28498:274:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "28544:83:15",
																"nodeType": "YulBlock",
																"src": "28544:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "28546:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "28546:77:15"
																			},
																			"nativeSrc": "28546:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "28546:79:15"
																		},
																		"nativeSrc": "28546:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "28546:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28519:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "28519:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28528:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "28528:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28515:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "28515:3:15"
																		},
																		"nativeSrc": "28515:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28515:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28540:2:15",
																		"nodeType": "YulLiteral",
																		"src": "28540:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "28511:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28511:3:15"
																},
																"nativeSrc": "28511:32:15",
																"nodeType": "YulFunctionCall",
																"src": "28511:32:15"
															},
															"nativeSrc": "28508:119:15",
															"nodeType": "YulIf",
															"src": "28508:119:15"
														},
														{
															"nativeSrc": "28637:128:15",
															"nodeType": "YulBlock",
															"src": "28637:128:15",
															"statements": [
																{
																	"nativeSrc": "28652:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "28652:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28666:1:15",
																		"nodeType": "YulLiteral",
																		"src": "28666:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "28656:6:15",
																			"nodeType": "YulTypedName",
																			"src": "28656:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "28681:74:15",
																	"nodeType": "YulAssignment",
																	"src": "28681:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "28727:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "28727:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "28738:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "28738:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "28723:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "28723:3:15"
																				},
																				"nativeSrc": "28723:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "28723:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28747:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "28747:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "28691:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "28691:31:15"
																		},
																		"nativeSrc": "28691:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "28691:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "28681:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "28681:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "28421:351:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28468:9:15",
														"nodeType": "YulTypedName",
														"src": "28468:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "28479:7:15",
														"nodeType": "YulTypedName",
														"src": "28479:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "28491:6:15",
														"nodeType": "YulTypedName",
														"src": "28491:6:15",
														"type": ""
													}
												],
												"src": "28421:351:15"
											},
											{
												"body": {
													"nativeSrc": "28904:206:15",
													"nodeType": "YulBlock",
													"src": "28904:206:15",
													"statements": [
														{
															"nativeSrc": "28914:26:15",
															"nodeType": "YulAssignment",
															"src": "28914:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28926:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "28926:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28937:2:15",
																		"nodeType": "YulLiteral",
																		"src": "28937:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28922:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "28922:3:15"
																},
																"nativeSrc": "28922:18:15",
																"nodeType": "YulFunctionCall",
																"src": "28922:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28914:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "28914:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28994:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "28994:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29007:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29007:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29018:1:15",
																				"nodeType": "YulLiteral",
																				"src": "29018:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29003:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29003:3:15"
																		},
																		"nativeSrc": "29003:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29003:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28950:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "28950:43:15"
																},
																"nativeSrc": "28950:71:15",
																"nodeType": "YulFunctionCall",
																"src": "28950:71:15"
															},
															"nativeSrc": "28950:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "28950:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "29075:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29075:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29088:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "29088:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29099:2:15",
																				"nodeType": "YulLiteral",
																				"src": "29099:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29084:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29084:3:15"
																		},
																		"nativeSrc": "29084:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29084:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "29031:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "29031:43:15"
																},
																"nativeSrc": "29031:72:15",
																"nodeType": "YulFunctionCall",
																"src": "29031:72:15"
															},
															"nativeSrc": "29031:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "29031:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "28778:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28868:9:15",
														"nodeType": "YulTypedName",
														"src": "28868:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28880:6:15",
														"nodeType": "YulTypedName",
														"src": "28880:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28888:6:15",
														"nodeType": "YulTypedName",
														"src": "28888:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28899:4:15",
														"nodeType": "YulTypedName",
														"src": "28899:4:15",
														"type": ""
													}
												],
												"src": "28778:332:15"
											},
											{
												"body": {
													"nativeSrc": "29174:40:15",
													"nodeType": "YulBlock",
													"src": "29174:40:15",
													"statements": [
														{
															"nativeSrc": "29185:22:15",
															"nodeType": "YulAssignment",
															"src": "29185:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29201:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "29201:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "29195:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "29195:5:15"
																},
																"nativeSrc": "29195:12:15",
																"nodeType": "YulFunctionCall",
																"src": "29195:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "29185:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29185:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "29116:98:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29157:5:15",
														"nodeType": "YulTypedName",
														"src": "29157:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "29167:6:15",
														"nodeType": "YulTypedName",
														"src": "29167:6:15",
														"type": ""
													}
												],
												"src": "29116:98:15"
											},
											{
												"body": {
													"nativeSrc": "29315:73:15",
													"nodeType": "YulBlock",
													"src": "29315:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29332:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29332:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29337:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29337:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29325:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29325:6:15"
																},
																"nativeSrc": "29325:19:15",
																"nodeType": "YulFunctionCall",
																"src": "29325:19:15"
															},
															"nativeSrc": "29325:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "29325:19:15"
														},
														{
															"nativeSrc": "29353:29:15",
															"nodeType": "YulAssignment",
															"src": "29353:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29372:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29372:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29377:4:15",
																		"nodeType": "YulLiteral",
																		"src": "29377:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29368:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29368:3:15"
																},
																"nativeSrc": "29368:14:15",
																"nodeType": "YulFunctionCall",
																"src": "29368:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "29353:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "29353:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "29220:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29287:3:15",
														"nodeType": "YulTypedName",
														"src": "29287:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "29292:6:15",
														"nodeType": "YulTypedName",
														"src": "29292:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "29303:11:15",
														"nodeType": "YulTypedName",
														"src": "29303:11:15",
														"type": ""
													}
												],
												"src": "29220:168:15"
											},
											{
												"body": {
													"nativeSrc": "29456:184:15",
													"nodeType": "YulBlock",
													"src": "29456:184:15",
													"statements": [
														{
															"nativeSrc": "29466:10:15",
															"nodeType": "YulVariableDeclaration",
															"src": "29466:10:15",
															"value": {
																"kind": "number",
																"nativeSrc": "29475:1:15",
																"nodeType": "YulLiteral",
																"src": "29475:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "29470:1:15",
																	"nodeType": "YulTypedName",
																	"src": "29470:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "29535:63:15",
																"nodeType": "YulBlock",
																"src": "29535:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "29560:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "29560:3:15"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "29565:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "29565:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "29556:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "29556:3:15"
																					},
																					"nativeSrc": "29556:11:15",
																					"nodeType": "YulFunctionCall",
																					"src": "29556:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "29579:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "29579:3:15"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "29584:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "29584:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "29575:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "29575:3:15"
																							},
																							"nativeSrc": "29575:11:15",
																							"nodeType": "YulFunctionCall",
																							"src": "29575:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "29569:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "29569:5:15"
																					},
																					"nativeSrc": "29569:18:15",
																					"nodeType": "YulFunctionCall",
																					"src": "29569:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "29549:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "29549:6:15"
																			},
																			"nativeSrc": "29549:39:15",
																			"nodeType": "YulFunctionCall",
																			"src": "29549:39:15"
																		},
																		"nativeSrc": "29549:39:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "29549:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "29496:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "29496:1:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29499:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29499:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "29493:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "29493:2:15"
																},
																"nativeSrc": "29493:13:15",
																"nodeType": "YulFunctionCall",
																"src": "29493:13:15"
															},
															"nativeSrc": "29485:113:15",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "29507:19:15",
																"nodeType": "YulBlock",
																"src": "29507:19:15",
																"statements": [
																	{
																		"nativeSrc": "29509:15:15",
																		"nodeType": "YulAssignment",
																		"src": "29509:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "29518:1:15",
																					"nodeType": "YulIdentifier",
																					"src": "29518:1:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "29521:2:15",
																					"nodeType": "YulLiteral",
																					"src": "29521:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "29514:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "29514:3:15"
																			},
																			"nativeSrc": "29514:10:15",
																			"nodeType": "YulFunctionCall",
																			"src": "29514:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "29509:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "29509:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "29489:3:15",
																"nodeType": "YulBlock",
																"src": "29489:3:15",
																"statements": []
															},
															"src": "29485:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "29618:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "29618:3:15"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "29623:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "29623:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29614:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29614:3:15"
																		},
																		"nativeSrc": "29614:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29614:16:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29632:1:15",
																		"nodeType": "YulLiteral",
																		"src": "29632:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29607:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "29607:6:15"
																},
																"nativeSrc": "29607:27:15",
																"nodeType": "YulFunctionCall",
																"src": "29607:27:15"
															},
															"nativeSrc": "29607:27:15",
															"nodeType": "YulExpressionStatement",
															"src": "29607:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "29394:246:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "29438:3:15",
														"nodeType": "YulTypedName",
														"src": "29438:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "29443:3:15",
														"nodeType": "YulTypedName",
														"src": "29443:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "29448:6:15",
														"nodeType": "YulTypedName",
														"src": "29448:6:15",
														"type": ""
													}
												],
												"src": "29394:246:15"
											},
											{
												"body": {
													"nativeSrc": "29736:283:15",
													"nodeType": "YulBlock",
													"src": "29736:283:15",
													"statements": [
														{
															"nativeSrc": "29746:52:15",
															"nodeType": "YulVariableDeclaration",
															"src": "29746:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29792:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "29792:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "29760:31:15",
																	"nodeType": "YulIdentifier",
																	"src": "29760:31:15"
																},
																"nativeSrc": "29760:38:15",
																"nodeType": "YulFunctionCall",
																"src": "29760:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "29750:6:15",
																	"nodeType": "YulTypedName",
																	"src": "29750:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "29807:77:15",
															"nodeType": "YulAssignment",
															"src": "29807:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29872:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29872:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29877:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29877:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "29814:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "29814:57:15"
																},
																"nativeSrc": "29814:70:15",
																"nodeType": "YulFunctionCall",
																"src": "29814:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29807:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29807:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "29932:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "29932:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29939:4:15",
																				"nodeType": "YulLiteral",
																				"src": "29939:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29928:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "29928:3:15"
																		},
																		"nativeSrc": "29928:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29928:16:15"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "29946:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29946:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29951:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "29951:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "29893:34:15",
																	"nodeType": "YulIdentifier",
																	"src": "29893:34:15"
																},
																"nativeSrc": "29893:65:15",
																"nodeType": "YulFunctionCall",
																"src": "29893:65:15"
															},
															"nativeSrc": "29893:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "29893:65:15"
														},
														{
															"nativeSrc": "29967:46:15",
															"nodeType": "YulAssignment",
															"src": "29967:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29978:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "29978:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "30005:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "30005:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "29983:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "29983:21:15"
																		},
																		"nativeSrc": "29983:29:15",
																		"nodeType": "YulFunctionCall",
																		"src": "29983:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29974:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29974:3:15"
																},
																"nativeSrc": "29974:39:15",
																"nodeType": "YulFunctionCall",
																"src": "29974:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29967:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "29967:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "29646:373:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29717:5:15",
														"nodeType": "YulTypedName",
														"src": "29717:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "29724:3:15",
														"nodeType": "YulTypedName",
														"src": "29724:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29732:3:15",
														"nodeType": "YulTypedName",
														"src": "29732:3:15",
														"type": ""
													}
												],
												"src": "29646:373:15"
											},
											{
												"body": {
													"nativeSrc": "30247:517:15",
													"nodeType": "YulBlock",
													"src": "30247:517:15",
													"statements": [
														{
															"nativeSrc": "30257:27:15",
															"nodeType": "YulAssignment",
															"src": "30257:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30269:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "30269:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30280:3:15",
																		"nodeType": "YulLiteral",
																		"src": "30280:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30265:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30265:3:15"
																},
																"nativeSrc": "30265:19:15",
																"nodeType": "YulFunctionCall",
																"src": "30265:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30257:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "30257:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30338:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30338:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30351:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30351:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30362:1:15",
																				"nodeType": "YulLiteral",
																				"src": "30362:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30347:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30347:3:15"
																		},
																		"nativeSrc": "30347:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30347:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30294:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "30294:43:15"
																},
																"nativeSrc": "30294:71:15",
																"nodeType": "YulFunctionCall",
																"src": "30294:71:15"
															},
															"nativeSrc": "30294:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "30294:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30419:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30419:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30432:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30432:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30443:2:15",
																				"nodeType": "YulLiteral",
																				"src": "30443:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30428:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30428:3:15"
																		},
																		"nativeSrc": "30428:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30428:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30375:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "30375:43:15"
																},
																"nativeSrc": "30375:72:15",
																"nodeType": "YulFunctionCall",
																"src": "30375:72:15"
															},
															"nativeSrc": "30375:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "30375:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "30501:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30501:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30514:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30514:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30525:2:15",
																				"nodeType": "YulLiteral",
																				"src": "30525:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30510:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30510:3:15"
																		},
																		"nativeSrc": "30510:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30510:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30457:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "30457:43:15"
																},
																"nativeSrc": "30457:72:15",
																"nodeType": "YulFunctionCall",
																"src": "30457:72:15"
															},
															"nativeSrc": "30457:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "30457:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "30577:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30577:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30590:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30590:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30601:2:15",
																				"nodeType": "YulLiteral",
																				"src": "30601:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30586:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30586:3:15"
																		},
																		"nativeSrc": "30586:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30586:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "30539:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "30539:37:15"
																},
																"nativeSrc": "30539:66:15",
																"nodeType": "YulFunctionCall",
																"src": "30539:66:15"
															},
															"nativeSrc": "30539:66:15",
															"nodeType": "YulExpressionStatement",
															"src": "30539:66:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30626:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30626:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30637:3:15",
																				"nodeType": "YulLiteral",
																				"src": "30637:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30622:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30622:3:15"
																		},
																		"nativeSrc": "30622:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30622:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30647:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "30647:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30653:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "30653:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30643:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "30643:3:15"
																		},
																		"nativeSrc": "30643:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "30643:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30615:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "30615:6:15"
																},
																"nativeSrc": "30615:49:15",
																"nodeType": "YulFunctionCall",
																"src": "30615:49:15"
															},
															"nativeSrc": "30615:49:15",
															"nodeType": "YulExpressionStatement",
															"src": "30615:49:15"
														},
														{
															"nativeSrc": "30673:84:15",
															"nodeType": "YulAssignment",
															"src": "30673:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "30743:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "30743:6:15"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "30752:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "30752:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "30681:61:15",
																	"nodeType": "YulIdentifier",
																	"src": "30681:61:15"
																},
																"nativeSrc": "30681:76:15",
																"nodeType": "YulFunctionCall",
																"src": "30681:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30673:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "30673:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "30025:739:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30187:9:15",
														"nodeType": "YulTypedName",
														"src": "30187:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "30199:6:15",
														"nodeType": "YulTypedName",
														"src": "30199:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "30207:6:15",
														"nodeType": "YulTypedName",
														"src": "30207:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "30215:6:15",
														"nodeType": "YulTypedName",
														"src": "30215:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30223:6:15",
														"nodeType": "YulTypedName",
														"src": "30223:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30231:6:15",
														"nodeType": "YulTypedName",
														"src": "30231:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30242:4:15",
														"nodeType": "YulTypedName",
														"src": "30242:4:15",
														"type": ""
													}
												],
												"src": "30025:739:15"
											},
											{
												"body": {
													"nativeSrc": "30924:288:15",
													"nodeType": "YulBlock",
													"src": "30924:288:15",
													"statements": [
														{
															"nativeSrc": "30934:26:15",
															"nodeType": "YulAssignment",
															"src": "30934:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30946:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "30946:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30957:2:15",
																		"nodeType": "YulLiteral",
																		"src": "30957:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30942:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "30942:3:15"
																},
																"nativeSrc": "30942:18:15",
																"nodeType": "YulFunctionCall",
																"src": "30942:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30934:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "30934:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31014:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31014:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31027:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31027:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31038:1:15",
																				"nodeType": "YulLiteral",
																				"src": "31038:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31023:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31023:3:15"
																		},
																		"nativeSrc": "31023:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31023:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30970:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "30970:43:15"
																},
																"nativeSrc": "30970:71:15",
																"nodeType": "YulFunctionCall",
																"src": "30970:71:15"
															},
															"nativeSrc": "30970:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "30970:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31095:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31095:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31108:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31108:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31119:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31119:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31104:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31104:3:15"
																		},
																		"nativeSrc": "31104:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31104:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31051:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "31051:43:15"
																},
																"nativeSrc": "31051:72:15",
																"nodeType": "YulFunctionCall",
																"src": "31051:72:15"
															},
															"nativeSrc": "31051:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "31051:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "31177:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "31177:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31190:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "31190:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31201:2:15",
																				"nodeType": "YulLiteral",
																				"src": "31201:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31186:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31186:3:15"
																		},
																		"nativeSrc": "31186:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31186:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "31133:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "31133:43:15"
																},
																"nativeSrc": "31133:72:15",
																"nodeType": "YulFunctionCall",
																"src": "31133:72:15"
															},
															"nativeSrc": "31133:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "31133:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "30770:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30880:9:15",
														"nodeType": "YulTypedName",
														"src": "30880:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "30892:6:15",
														"nodeType": "YulTypedName",
														"src": "30892:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30900:6:15",
														"nodeType": "YulTypedName",
														"src": "30900:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30908:6:15",
														"nodeType": "YulTypedName",
														"src": "30908:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30919:4:15",
														"nodeType": "YulTypedName",
														"src": "30919:4:15",
														"type": ""
													}
												],
												"src": "30770:442:15"
											},
											{
												"body": {
													"nativeSrc": "31324:71:15",
													"nodeType": "YulBlock",
													"src": "31324:71:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31346:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "31346:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31354:1:15",
																				"nodeType": "YulLiteral",
																				"src": "31354:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31342:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31342:3:15"
																		},
																		"nativeSrc": "31342:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31342:14:15"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "31358:29:15",
																		"nodeType": "YulLiteral",
																		"src": "31358:29:15",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31335:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "31335:6:15"
																},
																"nativeSrc": "31335:53:15",
																"nodeType": "YulFunctionCall",
																"src": "31335:53:15"
															},
															"nativeSrc": "31335:53:15",
															"nodeType": "YulExpressionStatement",
															"src": "31335:53:15"
														}
													]
												},
												"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
												"nativeSrc": "31218:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "31316:6:15",
														"nodeType": "YulTypedName",
														"src": "31316:6:15",
														"type": ""
													}
												],
												"src": "31218:177:15"
											},
											{
												"body": {
													"nativeSrc": "31547:220:15",
													"nodeType": "YulBlock",
													"src": "31547:220:15",
													"statements": [
														{
															"nativeSrc": "31557:74:15",
															"nodeType": "YulAssignment",
															"src": "31557:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31623:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "31623:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31628:2:15",
																		"nodeType": "YulLiteral",
																		"src": "31628:2:15",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31564:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "31564:58:15"
																},
																"nativeSrc": "31564:67:15",
																"nodeType": "YulFunctionCall",
																"src": "31564:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31557:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31557:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31729:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "31729:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																	"nativeSrc": "31640:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "31640:88:15"
																},
																"nativeSrc": "31640:93:15",
																"nodeType": "YulFunctionCall",
																"src": "31640:93:15"
															},
															"nativeSrc": "31640:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "31640:93:15"
														},
														{
															"nativeSrc": "31742:19:15",
															"nodeType": "YulAssignment",
															"src": "31742:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31753:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "31753:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31758:2:15",
																		"nodeType": "YulLiteral",
																		"src": "31758:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31749:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31749:3:15"
																},
																"nativeSrc": "31749:12:15",
																"nodeType": "YulFunctionCall",
																"src": "31749:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "31742:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31742:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "31401:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31535:3:15",
														"nodeType": "YulTypedName",
														"src": "31535:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31543:3:15",
														"nodeType": "YulTypedName",
														"src": "31543:3:15",
														"type": ""
													}
												],
												"src": "31401:366:15"
											},
											{
												"body": {
													"nativeSrc": "31944:248:15",
													"nodeType": "YulBlock",
													"src": "31944:248:15",
													"statements": [
														{
															"nativeSrc": "31954:26:15",
															"nodeType": "YulAssignment",
															"src": "31954:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31966:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "31966:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31977:2:15",
																		"nodeType": "YulLiteral",
																		"src": "31977:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31962:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "31962:3:15"
																},
																"nativeSrc": "31962:18:15",
																"nodeType": "YulFunctionCall",
																"src": "31962:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31954:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "31954:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32001:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "32001:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32012:1:15",
																				"nodeType": "YulLiteral",
																				"src": "32012:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31997:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "31997:3:15"
																		},
																		"nativeSrc": "31997:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "31997:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32020:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "32020:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32026:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "32026:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32016:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "32016:3:15"
																		},
																		"nativeSrc": "32016:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "32016:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31990:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "31990:6:15"
																},
																"nativeSrc": "31990:47:15",
																"nodeType": "YulFunctionCall",
																"src": "31990:47:15"
															},
															"nativeSrc": "31990:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "31990:47:15"
														},
														{
															"nativeSrc": "32046:139:15",
															"nodeType": "YulAssignment",
															"src": "32046:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "32180:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "32180:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32054:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "32054:124:15"
																},
																"nativeSrc": "32054:131:15",
																"nodeType": "YulFunctionCall",
																"src": "32054:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32046:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "32046:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "31773:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31924:9:15",
														"nodeType": "YulTypedName",
														"src": "31924:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31939:4:15",
														"nodeType": "YulTypedName",
														"src": "31939:4:15",
														"type": ""
													}
												],
												"src": "31773:419:15"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct DirectDonation.TokenExportStruct -> struct DirectDonation.TokenExportStruct\n    function abi_encode_t_struct$_TokenExportStruct_$1866_memory_ptr_to_t_struct$_TokenExportStruct_$1866_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // addr\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // pause\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // dt\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TokenExportStruct_$1866_memory_ptr_to_t_struct$_TokenExportStruct_$1866_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TokenExportStruct_$1866_memory_ptr_to_t_struct$_TokenExportStruct_$1866_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct DirectDonation.TokenExportStruct[] -> struct DirectDonation.TokenExportStruct[]\n    function abi_encode_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TokenExportStruct_$1866_memory_ptr_to_t_struct$_TokenExportStruct_$1866_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct DirectDonation.DonationStruct -> struct DirectDonation.DonationStruct\n    function abi_encode_t_struct$_DonationStruct_$1850_memory_ptr_to_t_struct$_DonationStruct_$1850_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // donator\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // appId\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // to\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // dt\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_DonationStruct_$1850_memory_ptr_to_t_struct$_DonationStruct_$1850_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_DonationStruct_$1850_memory_ptr_to_t_struct$_DonationStruct_$1850_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct DirectDonation.DonationStruct[] -> struct DirectDonation.DonationStruct[]\n    function abi_encode_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_DonationStruct_$1850_memory_ptr_to_t_struct$_DonationStruct_$1850_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct DirectDonation.TokenStruct -> struct DirectDonation.TokenStruct\n    function abi_encode_t_struct$_TokenStruct_$1857_memory_ptr_to_t_struct$_TokenStruct_$1857_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // addr\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // pause\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // dt\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_TokenStruct_$1857_memory_ptr_to_t_struct$_TokenStruct_$1857_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_TokenStruct_$1857_memory_ptr_to_t_struct$_TokenStruct_$1857_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x60)\n    }\n\n    function array_nextElement_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct DirectDonation.TokenStruct[] -> struct DirectDonation.TokenStruct[]\n    function abi_encode_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_TokenStruct_$1857_memory_ptr_to_t_struct$_TokenStruct_$1857_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_bytes32_t_uint256_t_address_t_uint256__to_t_address_t_bytes32_t_bytes32_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes32t_addresst_uint256t_boolt_bytes_memory_ptrt_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bool_t_uint256__to_t_address_t_bool_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xff) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send Ether to the mana\")\n\n        mstore(add(memPtr, 32), \"ger\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Counter: decrement overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610165575f3560e01c806375e6e600116100d0578063b2f7c6e011610089578063e6062e1a11610063578063e6062e1a14610536578063f1a3b94314610574578063f2fde38b146105b0578063f7edbbac146105d857610165565b8063b2f7c6e01461048e578063cacf11e7146104be578063d48bfca7146104fa57610165565b806375e6e6001461036b5780638456cb59146103ac5780638da5cb5b146103c25780639230b2bc146103ec57806395a7a95314610416578063a37b06d41461045257610165565b8063443910e011610122578063443910e0146102615780634df712121461028b57806356a6d9ef146102c757806359770438146102ef5780635c975abb1461032b578063715018a61461035557610165565b806312065fe014610169578063273cbaa0146101935780633ccfd60b146101bd5780633d496362146101d35780633f4ba83a1461020f578063410a1d3214610225575b5f80fd5b348015610174575f80fd5b5061017d610602565b60405161018a91906120ce565b60405180910390f35b34801561019e575f80fd5b506101a7610609565b6040516101b49190612262565b60405180910390f35b3480156101c8575f80fd5b506101d1610788565b005b3480156101de575f80fd5b506101f960048036038101906101f491906122bd565b610847565b6040516102069190612409565b60405180910390f35b34801561021a575f80fd5b50610223610a26565b005b348015610230575f80fd5b5061024b60048036038101906102469190612453565b610a38565b6040516102589190612409565b60405180910390f35b34801561026c575f80fd5b50610275610c61565b6040516102829190612409565b60405180910390f35b348015610296575f80fd5b506102b160048036038101906102ac91906124b4565b610e04565b6040516102be91906124ee565b60405180910390f35b3480156102d2575f80fd5b506102ed60048036038101906102e8919061256c565b610e67565b005b3480156102fa575f80fd5b5061031560048036038101906103109190612453565b610f1c565b6040516103229190612692565b60405180910390f35b348015610336575f80fd5b5061033f6110ec565b60405161034c91906124ee565b60405180910390f35b348015610360575f80fd5b50610369611101565b005b348015610376575f80fd5b50610391600480360381019061038c91906122bd565b611114565b6040516103a3969594939291906126d0565b60405180910390f35b3480156103b7575f80fd5b506103c061118a565b005b3480156103cd575f80fd5b506103d661119c565b6040516103e3919061272f565b60405180910390f35b3480156103f7575f80fd5b506104006111c3565b60405161040d91906120ce565b60405180910390f35b348015610421575f80fd5b5061043c60048036038101906104379190612772565b6111ce565b60405161044991906124ee565b60405180910390f35b34801561045d575f80fd5b50610478600480360381019061047391906127c2565b61129f565b60405161048591906120ce565b60405180910390f35b6104a860048036038101906104a3919061293c565b6112d8565b6040516104b591906124ee565b60405180910390f35b3480156104c9575f80fd5b506104e460048036038101906104df91906122bd565b611823565b6040516104f19190612409565b60405180910390f35b348015610505575f80fd5b50610520600480360381019061051b9190612453565b611a02565b60405161052d91906129e1565b60405180910390f35b348015610541575f80fd5b5061055c600480360381019061055791906122bd565b611b33565b60405161056b939291906129fa565b60405180910390f35b34801561057f575f80fd5b5061059a600480360381019061059591906122bd565b611b84565b6040516105a791906120ce565b60405180910390f35b3480156105bb575f80fd5b506105d660048036038101906105d19190612453565b611c45565b005b3480156105e3575f80fd5b506105ec611cc9565b6040516105f991906120ce565b60405180910390f35b5f47905090565b60605f6106166002611cd4565b67ffffffffffffffff81111561062f5761062e612818565b5b60405190808252806020026020018201604052801561066857816020015b610655611fdf565b81526020019060019003908161064d5790505b5090505f5b6106776002611cd4565b8110156107805760405180608001604052806001836106969190612a5c565b5f1b815260200160055f6001856106ad9190612a5c565b5f1b81526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160055f6001856107099190612a5c565b5f1b81526020019081526020015f205f0160149054906101000a900460ff161515815260200160055f60018561073f9190612a5c565b5f1b81526020019081526020015f206001015481525082828151811061076857610767612a8f565b5b6020026020010181905250808060010191505061066d565b508091505090565b610790611ce0565b5f4790505f61079d61119c565b73ffffffffffffffffffffffffffffffffffffffff16826040516107c090612ae9565b5f6040518083038185875af1925050503d805f81146107fa576040519150601f19603f3d011682016040523d82523d5f602084013e6107ff565b606091505b5050905080610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90612b57565b60405180910390fd5b5050565b60605f6108546001611cd4565b67ffffffffffffffff81111561086d5761086c612818565b5b6040519080825280602002602001820160405280156108a657816020015b61089361201e565b81526020019060019003908161088b5790505b5090505f805b6108b66001611cd4565b811015610a1b578460045f6001846108ce9190612a5c565b5f1b81526020019081526020015f206001015403610a0e5760045f6001836108f69190612a5c565b5f1b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815250508383815181106109f4576109f3612a8f565b5b60200260200101819052508180610a0a90612b75565b9250505b80806001019150506108ac565b508192505050919050565b610a2e611ce0565b610a36611d67565b565b60605f610a456001611cd4565b67ffffffffffffffff811115610a5e57610a5d612818565b5b604051908082528060200260200182016040528015610a9757816020015b610a8461201e565b815260200190600190039081610a7c5790505b5090505f805b610aa76001611cd4565b811015610c56578473ffffffffffffffffffffffffffffffffffffffff1660045f600184610ad59190612a5c565b5f1b81526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c495760045f600183610b319190612a5c565b5f1b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481525050838381518110610c2f57610c2e612a8f565b5b60200260200101819052508180610c4590612b75565b9250505b8080600101915050610a9d565b508192505050919050565b60605f610c6e6001611cd4565b67ffffffffffffffff811115610c8757610c86612818565b5b604051908082528060200260200182016040528015610cc057816020015b610cad61201e565b815260200190600190039081610ca55790505b5090505f5b610ccf6001611cd4565b811015610dfc5760045f600183610ce69190612a5c565b5f1b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481525050828281518110610de457610de3612a8f565b5b60200260200101819052508080600101915050610cc5565b508091505090565b5f610e0d611ce0565b8160035f6101000a81548160ff021916908360ff1602179055507fb5c0fbe3c7e536e86ea6d91ec04bd37128a9bf1e981e06dae9834031254831f982604051610e569190612bcb565b60405180910390a160019050919050565b610e6f611ce0565b5f8273ffffffffffffffffffffffffffffffffffffffff1682604051610e9490612ae9565b5f6040518083038185875af1925050503d805f8114610ece576040519150601f19603f3d011682016040523d82523d5f602084013e610ed3565b606091505b5050905080610f17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0e90612b57565b60405180910390fd5b505050565b60605f610f296002611cd4565b67ffffffffffffffff811115610f4257610f41612818565b5b604051908082528060200260200182016040528015610f7b57816020015b610f68612080565b815260200190600190039081610f605790505b5090505f805b610f8b6002611cd4565b8110156110e1578473ffffffffffffffffffffffffffffffffffffffff1660055f600184610fb99190612a5c565b5f1b81526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036110d45760055f6001836110159190612a5c565b5f1b81526020019081526020015f206040518060600160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460ff161515151581526020016001820154815250508383815181106110ba576110b9612a8f565b5b602002602001018190525081806110d090612b75565b9250505b8080600101915050610f81565b508192505050919050565b5f8060149054906101000a900460ff16905090565b611109611ce0565b6111125f611dc8565b565b6004602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154905086565b611192611ce0565b61119a611e89565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002805f0154905081565b5f6111d7611ce0565b8260055f8681526020019081526020015f205f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160055f8681526020019081526020015f205f0160146101000a81548160ff021916908315150217905550837f0178cc6533afb1053a370099de33a8f4a6c10adf023eba537c33721e13dc12738461127e611eeb565b60405161128c929190612be4565b60405180910390a2600190509392505050565b5f606482846112ae9190612c0b565b10156112b8575f80fd5b606482846112c69190612c0b565b6112d09190612c79565b905092915050565b5f6112e1611ef2565b60015f1b8203611403575f340361132f57346040517f9266535100000000000000000000000000000000000000000000000000000000815260040161132691906120ce565b60405180910390fd5b5f8673ffffffffffffffffffffffffffffffffffffffff1661136e8760035f9054906101000a900460ff1660646113669190612ca9565b60ff1661129f565b60405161137a90612ae9565b5f6040518083038185875af1925050503d805f81146113b4576040519150601f19603f3d011682016040523d82523d5f602084013e6113b9565b606091505b50509050806113fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f490612d4d565b60405180910390fd5b50611696565b5f60055f8481526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166365aeaa953061145b611eeb565b6040518363ffffffff1660e01b8152600401611478929190612be4565b602060405180830381865afa158015611493573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114b79190612d7f565b90508581146114ff5785816040517fa24f8be90000000000000000000000000000000000000000000000000000000081526004016114f6929190612daa565b60405180910390fd5b60055f8481526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663760d9bba611555611eeb565b8961157d8a60035f9054906101000a900460ff1660646115759190612ca9565b60ff1661129f565b89896040518663ffffffff1660e01b815260040161159f959493929190612e4b565b5f604051808303815f87803b1580156115b6575f80fd5b505af11580156115c8573d5f803e3d5ffd5b5050505060055f8481526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663760d9bba611622611eeb565b61162a61119c565b6116458a60035f9054906101000a900460ff1660ff1661129f565b89896040518663ffffffff1660e01b8152600401611667959493929190612e4b565b5f604051808303815f87803b15801561167e575f80fd5b505af1158015611690573d5f803e3d5ffd5b50505050505b6116a06001611f33565b6040518060c001604052806116b3611eeb565b73ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018881526020018681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020014281525060045f61170d6001611cd4565b5f1b81526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015590505086827fd96b33cd6e9829949c7f13033f0a8230587efc5e5d0cff68861945efded28b8a6117fc611eeb565b898960405161180d93929190612ea3565b60405180910390a3600190509695505050505050565b60605f6118306001611cd4565b67ffffffffffffffff81111561184957611848612818565b5b60405190808252806020026020018201604052801561188257816020015b61186f61201e565b8152602001906001900390816118675790505b5090505f805b6118926001611cd4565b8110156119f7578460045f6001846118aa9190612a5c565b5f1b81526020019081526020015f2060020154036119ea5760045f6001836118d29190612a5c565b5f1b81526020019081526020015f206040518060c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815250508383815181106119d0576119cf612a8f565b5b602002602001018190525081806119e690612b75565b9250505b8080600101915050611888565b508192505050919050565b5f611a0b611ce0565b611a156002611f33565b60405180606001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020015f151581526020014281525060055f611a556002611cd4565b5f1b81526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548160ff02191690831515021790555060408201518160010155905050611ade6002611cd4565b5f1b7f0e50ffa2b79cb01d7c5404bfe02189a4c5b297cd59bc80608efdc52e3b33461683611b0a611eeb565b604051611b18929190612be4565b60405180910390a2611b2a6002611cd4565b5f1b9050919050565b6005602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460ff16908060010154905083565b5f611b8d611ce0565b60055f8381526020019081526020015f205f8082015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555f820160146101000a81549060ff0219169055600182015f90555050611bea6002611f47565b611bf46002611cd4565b5f1b7f3afbc119e23990903d2ef3fdf9210a7b06b5f6f85438b0edfcfbf630ad594fcc611c1f611eeb565b604051611c2c919061272f565b60405180910390a2611c3e6002611cd4565b9050919050565b611c4d611ce0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611cbd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611cb4919061272f565b60405180910390fd5b611cc681611dc8565b50565b6001805f0154905081565b5f815f01549050919050565b611ce8611eeb565b73ffffffffffffffffffffffffffffffffffffffff16611d0661119c565b73ffffffffffffffffffffffffffffffffffffffff1614611d6557611d29611eeb565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611d5c919061272f565b60405180910390fd5b565b611d6f611f9f565b5f8060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611db1611eeb565b604051611dbe919061272f565b60405180910390a1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611e91611ef2565b60015f60146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611ed4611eeb565b604051611ee1919061272f565b60405180910390a1565b5f33905090565b611efa6110ec565b15611f31576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6001815f015f828254019250508190555050565b5f815f015490505f8111611f90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f8790612f22565b60405180910390fd5b60018103825f01819055505050565b611fa76110ec565b611fdd576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60405180608001604052805f80191681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f151581526020015f81525090565b6040518060c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f80191681526020015f80191681526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81525090565b60405180606001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f151581526020015f81525090565b5f819050919050565b6120c8816120b6565b82525050565b5f6020820190506120e15f8301846120bf565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b61212281612110565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61215182612128565b9050919050565b61216181612147565b82525050565b5f8115159050919050565b61217b81612167565b82525050565b61218a816120b6565b82525050565b608082015f8201516121a45f850182612119565b5060208201516121b76020850182612158565b5060408201516121ca6040850182612172565b5060608201516121dd6060850182612181565b50505050565b5f6121ee8383612190565b60808301905092915050565b5f602082019050919050565b5f612210826120e7565b61221a81856120f1565b935061222583612101565b805f5b8381101561225557815161223c88826121e3565b9750612247836121fa565b925050600181019050612228565b5085935050505092915050565b5f6020820190508181035f83015261227a8184612206565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b61229c81612110565b81146122a6575f80fd5b50565b5f813590506122b781612293565b92915050565b5f602082840312156122d2576122d161228b565b5b5f6122df848285016122a9565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60c082015f8201516123255f850182612158565b5060208201516123386020850182612119565b50604082015161234b6040850182612119565b50606082015161235e6060850182612181565b5060808201516123716080850182612158565b5060a082015161238460a0850182612181565b50505050565b5f6123958383612311565b60c08301905092915050565b5f602082019050919050565b5f6123b7826122e8565b6123c181856122f2565b93506123cc83612302565b805f5b838110156123fc5781516123e3888261238a565b97506123ee836123a1565b9250506001810190506123cf565b5085935050505092915050565b5f6020820190508181035f83015261242181846123ad565b905092915050565b61243281612147565b811461243c575f80fd5b50565b5f8135905061244d81612429565b92915050565b5f602082840312156124685761246761228b565b5b5f6124758482850161243f565b91505092915050565b5f60ff82169050919050565b6124938161247e565b811461249d575f80fd5b50565b5f813590506124ae8161248a565b92915050565b5f602082840312156124c9576124c861228b565b5b5f6124d6848285016124a0565b91505092915050565b6124e881612167565b82525050565b5f6020820190506125015f8301846124df565b92915050565b5f61251182612128565b9050919050565b61252181612507565b811461252b575f80fd5b50565b5f8135905061253c81612518565b92915050565b61254b816120b6565b8114612555575f80fd5b50565b5f8135905061256681612542565b92915050565b5f80604083850312156125825761258161228b565b5b5f61258f8582860161252e565b92505060206125a085828601612558565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b606082015f8201516125e75f850182612158565b5060208201516125fa6020850182612172565b50604082015161260d6040850182612181565b50505050565b5f61261e83836125d3565b60608301905092915050565b5f602082019050919050565b5f612640826125aa565b61264a81856125b4565b9350612655836125c4565b805f5b8381101561268557815161266c8882612613565b97506126778361262a565b925050600181019050612658565b5085935050505092915050565b5f6020820190508181035f8301526126aa8184612636565b905092915050565b6126bb81612147565b82525050565b6126ca81612110565b82525050565b5f60c0820190506126e35f8301896126b2565b6126f060208301886126c1565b6126fd60408301876126c1565b61270a60608301866120bf565b61271760808301856126b2565b61272460a08301846120bf565b979650505050505050565b5f6020820190506127425f8301846126b2565b92915050565b61275181612167565b811461275b575f80fd5b50565b5f8135905061276c81612748565b92915050565b5f805f606084860312156127895761278861228b565b5b5f612796868287016122a9565b93505060206127a78682870161243f565b92505060406127b88682870161275e565b9150509250925092565b5f80604083850312156127d8576127d761228b565b5b5f6127e585828601612558565b92505060206127f685828601612558565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61284e82612808565b810181811067ffffffffffffffff8211171561286d5761286c612818565b5b80604052505050565b5f61287f612282565b905061288b8282612845565b919050565b5f67ffffffffffffffff8211156128aa576128a9612818565b5b6128b382612808565b9050602081019050919050565b828183375f83830152505050565b5f6128e06128db84612890565b612876565b9050828152602081018484840111156128fc576128fb612804565b5b6129078482856128c0565b509392505050565b5f82601f83011261292357612922612800565b5b81356129338482602086016128ce565b91505092915050565b5f805f805f8060c087890312156129565761295561228b565b5b5f61296389828a016122a9565b965050602061297489828a0161243f565b955050604061298589828a01612558565b945050606061299689828a0161275e565b935050608087013567ffffffffffffffff8111156129b7576129b661228f565b5b6129c389828a0161290f565b92505060a06129d489828a016122a9565b9150509295509295509295565b5f6020820190506129f45f8301846126c1565b92915050565b5f606082019050612a0d5f8301866126b2565b612a1a60208301856124df565b612a2760408301846120bf565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612a66826120b6565b9150612a71836120b6565b9250828201905080821115612a8957612a88612a2f565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81905092915050565b50565b5f612ad45f83612abc565b9150612adf82612ac6565b5f82019050919050565b5f612af382612ac9565b9150819050919050565b5f82825260208201905092915050565b7f4661696c656400000000000000000000000000000000000000000000000000005f82015250565b5f612b41600683612afd565b9150612b4c82612b0d565b602082019050919050565b5f6020820190508181035f830152612b6e81612b35565b9050919050565b5f612b7f826120b6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612bb157612bb0612a2f565b5b600182019050919050565b612bc58161247e565b82525050565b5f602082019050612bde5f830184612bbc565b92915050565b5f604082019050612bf75f8301856126b2565b612c0460208301846126b2565b9392505050565b5f612c15826120b6565b9150612c20836120b6565b9250828202612c2e816120b6565b91508282048414831517612c4557612c44612a2f565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612c83826120b6565b9150612c8e836120b6565b925082612c9e57612c9d612c4c565b5b828204905092915050565b5f612cb38261247e565b9150612cbe8361247e565b9250828203905060ff811115612cd757612cd6612a2f565b5b92915050565b7f4661696c656420746f2073656e6420457468657220746f20746865206d616e615f8201527f6765720000000000000000000000000000000000000000000000000000000000602082015250565b5f612d37602383612afd565b9150612d4282612cdd565b604082019050919050565b5f6020820190508181035f830152612d6481612d2b565b9050919050565b5f81519050612d7981612542565b92915050565b5f60208284031215612d9457612d9361228b565b5b5f612da184828501612d6b565b91505092915050565b5f604082019050612dbd5f8301856120bf565b612dca60208301846120bf565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612e08578082015181840152602081019050612ded565b5f8484015250505050565b5f612e1d82612dd1565b612e278185612ddb565b9350612e37818560208601612deb565b612e4081612808565b840191505092915050565b5f60a082019050612e5e5f8301886126b2565b612e6b60208301876126b2565b612e7860408301866120bf565b612e8560608301856124df565b8181036080830152612e978184612e13565b90509695505050505050565b5f606082019050612eb65f8301866126b2565b612ec360208301856126b2565b612ed060408301846120bf565b949350505050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f7700000000005f82015250565b5f612f0c601b83612afd565b9150612f1782612ed8565b602082019050919050565b5f6020820190508181035f830152612f3981612f00565b905091905056fea2646970667358221220fbe700276f2d99e495cbad5d5faa8c5c21e783c5363adbf45213b4ac37c8e13a64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x165 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75E6E600 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xB2F7C6E0 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xE6062E1A GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE6062E1A EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xF1A3B943 EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xF7EDBBAC EQ PUSH2 0x5D8 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0xB2F7C6E0 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0xCACF11E7 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xD48BFCA7 EQ PUSH2 0x4FA JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x75E6E600 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x9230B2BC EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x95A7A953 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0xA37B06D4 EQ PUSH2 0x452 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x443910E0 GT PUSH2 0x122 JUMPI DUP1 PUSH4 0x443910E0 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x4DF71212 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x56A6D9EF EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x59770438 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x355 JUMPI PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x273CBAA0 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x3D496362 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x410A1D32 EQ PUSH2 0x225 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x174 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH2 0x602 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0x788 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH2 0xA26 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x275 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x296 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH2 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH2 0xE67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x2692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH2 0x10EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x369 PUSH2 0x1101 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x1114 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C0 PUSH2 0x118A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D6 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x400 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x421 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x478 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x27C2 JUMP JUMPDEST PUSH2 0x129F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x24EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x1823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x520 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x29E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x541 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x55C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x59A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x595 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH2 0x1C45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EC PUSH2 0x1CC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x616 PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x668 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x655 PUSH2 0x1FDF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x64D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH2 0x677 PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP4 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 PUSH1 0x1 DUP6 PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 PUSH1 0x1 DUP6 PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 PUSH0 PUSH1 0x1 DUP6 PUSH2 0x73F SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x768 JUMPI PUSH2 0x767 PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x66D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x790 PUSH2 0x1CE0 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 PUSH2 0x79D PUSH2 0x119C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7C0 SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7FA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83A SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x854 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x86D JUMPI PUSH2 0x86C PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8A6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x893 PUSH2 0x201E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x88B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0x8B6 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA1B JUMPI DUP5 PUSH1 0x4 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0xA0E JUMPI PUSH1 0x4 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9F4 JUMPI PUSH2 0x9F3 PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xA0A SWAP1 PUSH2 0x2B75 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x8AC JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2E PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0xA36 PUSH2 0x1D67 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA45 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5D PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA97 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA84 PUSH2 0x201E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA7C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0xAA7 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC56 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH0 PUSH1 0x1 DUP5 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC49 JUMPI PUSH1 0x4 PUSH0 PUSH1 0x1 DUP4 PUSH2 0xB31 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC2F JUMPI PUSH2 0xC2E PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xC45 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA9D JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xC6E PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC87 JUMPI PUSH2 0xC86 PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCC0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xCAD PUSH2 0x201E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xCA5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST PUSH2 0xCCF PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x4 PUSH0 PUSH1 0x1 DUP4 PUSH2 0xCE6 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDE4 JUMPI PUSH2 0xDE3 PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xCC5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xE0D PUSH2 0x1CE0 JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xB5C0FBE3C7E536E86EA6D91EC04BD37128A9BF1E981E06DAE9834031254831F9 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE56 SWAP2 SWAP1 PUSH2 0x2BCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6F PUSH2 0x1CE0 JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xE94 SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xECE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0E SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xF29 PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF42 JUMPI PUSH2 0xF41 PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF7B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xF68 PUSH2 0x2080 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF60 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0xF8B PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x10E1 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 PUSH1 0x1 DUP5 PUSH2 0xFB9 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10D4 JUMPI PUSH1 0x5 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x1015 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10BA JUMPI PUSH2 0x10B9 PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x10D0 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF81 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1109 PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0x1112 PUSH0 PUSH2 0x1DC8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x1192 PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0x119A PUSH2 0x1E89 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x11D7 PUSH2 0x1CE0 JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 PUSH32 0x178CC6533AFB1053A370099DE33A8F4A6C10ADF023EBA537C33721E13DC1273 DUP5 PUSH2 0x127E PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128C SWAP3 SWAP2 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 DUP3 DUP5 PUSH2 0x12AE SWAP2 SWAP1 PUSH2 0x2C0B JUMP JUMPDEST LT ISZERO PUSH2 0x12B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x64 DUP3 DUP5 PUSH2 0x12C6 SWAP2 SWAP1 PUSH2 0x2C0B JUMP JUMPDEST PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x2C79 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12E1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SHL DUP3 SUB PUSH2 0x1403 JUMPI PUSH0 CALLVALUE SUB PUSH2 0x132F JUMPI CALLVALUE PUSH1 0x40 MLOAD PUSH32 0x9266535100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP2 SWAP1 PUSH2 0x20CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x136E DUP8 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x64 PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x129F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137A SWAP1 PUSH2 0x2AE9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F4 SWAP1 PUSH2 0x2D4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1696 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65AEAA95 ADDRESS PUSH2 0x145B PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1478 SWAP3 SWAP2 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1493 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B7 SWAP2 SWAP1 PUSH2 0x2D7F JUMP JUMPDEST SWAP1 POP DUP6 DUP2 EQ PUSH2 0x14FF JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH32 0xA24F8BE900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F6 SWAP3 SWAP2 SWAP1 PUSH2 0x2DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x760D9BBA PUSH2 0x1555 PUSH2 0x1EEB JUMP JUMPDEST DUP10 PUSH2 0x157D DUP11 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x64 PUSH2 0x1575 SWAP2 SWAP1 PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x129F JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E4B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x760D9BBA PUSH2 0x1622 PUSH2 0x1EEB JUMP JUMPDEST PUSH2 0x162A PUSH2 0x119C JUMP JUMPDEST PUSH2 0x1645 DUP11 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH2 0x129F JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1667 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E4B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x167E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1690 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH2 0x16A0 PUSH1 0x1 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x16B3 PUSH2 0x1EEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x4 PUSH0 PUSH2 0x170D PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP DUP7 DUP3 PUSH32 0xD96B33CD6E9829949C7F13033F0A8230587EFC5E5D0CFF68861945EFDED28B8A PUSH2 0x17FC PUSH2 0x1EEB JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x180D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1830 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1848 PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1882 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x186F PUSH2 0x201E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1867 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH2 0x1892 PUSH1 0x1 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x19F7 JUMPI DUP5 PUSH1 0x4 PUSH0 PUSH1 0x1 DUP5 PUSH2 0x18AA SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x19EA JUMPI PUSH1 0x4 PUSH0 PUSH1 0x1 DUP4 PUSH2 0x18D2 SWAP2 SWAP1 PUSH2 0x2A5C JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x19D0 JUMPI PUSH2 0x19CF PUSH2 0x2A8F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x19E6 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1888 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0B PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0x1A15 PUSH1 0x2 PUSH2 0x1F33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x5 PUSH0 PUSH2 0x1A55 PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH0 SHL DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0x1ADE PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH0 SHL PUSH32 0xE50FFA2B79CB01D7C5404BFE02189A4C5B297CD59BC80608EFDC52E3B334616 DUP4 PUSH2 0x1B0A PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B18 SWAP3 SWAP2 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1B2A PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH2 0x1B8D PUSH2 0x1CE0 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP PUSH2 0x1BEA PUSH1 0x2 PUSH2 0x1F47 JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST PUSH0 SHL PUSH32 0x3AFBC119E23990903D2EF3FDF9210A7B06B5F6F85438B0EDFCFBF630AD594FCC PUSH2 0x1C1F PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2C SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1C3E PUSH1 0x2 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C4D PUSH2 0x1CE0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB4 SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CC6 DUP2 PUSH2 0x1DC8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE8 PUSH2 0x1EEB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D06 PUSH2 0x119C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D65 JUMPI PUSH2 0x1D29 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D5C SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1D6F PUSH2 0x1F9F JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1DB1 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DBE SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1E91 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1ED4 PUSH2 0x1EEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE1 SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1EFA PUSH2 0x10EC JUMP JUMPDEST ISZERO PUSH2 0x1F31 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1F90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F87 SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1FA7 PUSH2 0x10EC JUMP JUMPDEST PUSH2 0x1FDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C8 DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x20BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2122 DUP2 PUSH2 0x2110 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2151 DUP3 PUSH2 0x2128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2161 DUP2 PUSH2 0x2147 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x217B DUP2 PUSH2 0x2167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x218A DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x21A4 PUSH0 DUP6 ADD DUP3 PUSH2 0x2119 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x21B7 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2158 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x21CA PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2172 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x21DD PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2181 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21EE DUP4 DUP4 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2210 DUP3 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x221A DUP2 DUP6 PUSH2 0x20F1 JUMP JUMPDEST SWAP4 POP PUSH2 0x2225 DUP4 PUSH2 0x2101 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2255 JUMPI DUP2 MLOAD PUSH2 0x223C DUP9 DUP3 PUSH2 0x21E3 JUMP JUMPDEST SWAP8 POP PUSH2 0x2247 DUP4 PUSH2 0x21FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2228 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x227A DUP2 DUP5 PUSH2 0x2206 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x229C DUP2 PUSH2 0x2110 JUMP JUMPDEST DUP2 EQ PUSH2 0x22A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22B7 DUP2 PUSH2 0x2293 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D2 JUMPI PUSH2 0x22D1 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22DF DUP5 DUP3 DUP6 ADD PUSH2 0x22A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x2325 PUSH0 DUP6 ADD DUP3 PUSH2 0x2158 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2338 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2119 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x234B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2119 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x235E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2181 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2371 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2158 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2384 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2181 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2395 DUP4 DUP4 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B7 DUP3 PUSH2 0x22E8 JUMP JUMPDEST PUSH2 0x23C1 DUP2 DUP6 PUSH2 0x22F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x23CC DUP4 PUSH2 0x2302 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23FC JUMPI DUP2 MLOAD PUSH2 0x23E3 DUP9 DUP3 PUSH2 0x238A JUMP JUMPDEST SWAP8 POP PUSH2 0x23EE DUP4 PUSH2 0x23A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23CF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2421 DUP2 DUP5 PUSH2 0x23AD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2432 DUP2 PUSH2 0x2147 JUMP JUMPDEST DUP2 EQ PUSH2 0x243C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x244D DUP2 PUSH2 0x2429 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2475 DUP5 DUP3 DUP6 ADD PUSH2 0x243F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2493 DUP2 PUSH2 0x247E JUMP JUMPDEST DUP2 EQ PUSH2 0x249D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24AE DUP2 PUSH2 0x248A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C9 JUMPI PUSH2 0x24C8 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24D6 DUP5 DUP3 DUP6 ADD PUSH2 0x24A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24E8 DUP2 PUSH2 0x2167 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2501 PUSH0 DUP4 ADD DUP5 PUSH2 0x24DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2511 DUP3 PUSH2 0x2128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2521 DUP2 PUSH2 0x2507 JUMP JUMPDEST DUP2 EQ PUSH2 0x252B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x253C DUP2 PUSH2 0x2518 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x254B DUP2 PUSH2 0x20B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2555 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2566 DUP2 PUSH2 0x2542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2582 JUMPI PUSH2 0x2581 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x258F DUP6 DUP3 DUP7 ADD PUSH2 0x252E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25A0 DUP6 DUP3 DUP7 ADD PUSH2 0x2558 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x25E7 PUSH0 DUP6 ADD DUP3 PUSH2 0x2158 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x25FA PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2172 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x260D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2181 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x261E DUP4 DUP4 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2640 DUP3 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x264A DUP2 DUP6 PUSH2 0x25B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2655 DUP4 PUSH2 0x25C4 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2685 JUMPI DUP2 MLOAD PUSH2 0x266C DUP9 DUP3 PUSH2 0x2613 JUMP JUMPDEST SWAP8 POP PUSH2 0x2677 DUP4 PUSH2 0x262A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2658 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26AA DUP2 DUP5 PUSH2 0x2636 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26BB DUP2 PUSH2 0x2147 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26CA DUP2 PUSH2 0x2110 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x26E3 PUSH0 DUP4 ADD DUP10 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x26F0 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0x26FD PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x26C1 JUMP JUMPDEST PUSH2 0x270A PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x2717 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2724 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x20BF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2742 PUSH0 DUP4 ADD DUP5 PUSH2 0x26B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2751 DUP2 PUSH2 0x2167 JUMP JUMPDEST DUP2 EQ PUSH2 0x275B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x276C DUP2 PUSH2 0x2748 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2789 JUMPI PUSH2 0x2788 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2796 DUP7 DUP3 DUP8 ADD PUSH2 0x22A9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x27A7 DUP7 DUP3 DUP8 ADD PUSH2 0x243F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x27B8 DUP7 DUP3 DUP8 ADD PUSH2 0x275E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27D8 JUMPI PUSH2 0x27D7 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27E5 DUP6 DUP3 DUP7 ADD PUSH2 0x2558 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27F6 DUP6 DUP3 DUP7 ADD PUSH2 0x2558 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x284E DUP3 PUSH2 0x2808 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x286D JUMPI PUSH2 0x286C PUSH2 0x2818 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x287F PUSH2 0x2282 JUMP JUMPDEST SWAP1 POP PUSH2 0x288B DUP3 DUP3 PUSH2 0x2845 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28AA JUMPI PUSH2 0x28A9 PUSH2 0x2818 JUMP JUMPDEST JUMPDEST PUSH2 0x28B3 DUP3 PUSH2 0x2808 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28E0 PUSH2 0x28DB DUP5 PUSH2 0x2890 JUMP JUMPDEST PUSH2 0x2876 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x28FC JUMPI PUSH2 0x28FB PUSH2 0x2804 JUMP JUMPDEST JUMPDEST PUSH2 0x2907 DUP5 DUP3 DUP6 PUSH2 0x28C0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2923 JUMPI PUSH2 0x2922 PUSH2 0x2800 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2933 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x28CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2956 JUMPI PUSH2 0x2955 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2963 DUP10 DUP3 DUP11 ADD PUSH2 0x22A9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2974 DUP10 DUP3 DUP11 ADD PUSH2 0x243F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2985 DUP10 DUP3 DUP11 ADD PUSH2 0x2558 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x2996 DUP10 DUP3 DUP11 ADD PUSH2 0x275E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29B7 JUMPI PUSH2 0x29B6 PUSH2 0x228F JUMP JUMPDEST JUMPDEST PUSH2 0x29C3 DUP10 DUP3 DUP11 ADD PUSH2 0x290F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x29D4 DUP10 DUP3 DUP11 ADD PUSH2 0x22A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x26C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A0D PUSH0 DUP4 ADD DUP7 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2A1A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x2A27 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A66 DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A71 DUP4 PUSH2 0x20B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A89 JUMPI PUSH2 0x2A88 PUSH2 0x2A2F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2AD4 PUSH0 DUP4 PUSH2 0x2ABC JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADF DUP3 PUSH2 0x2AC6 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AF3 DUP3 PUSH2 0x2AC9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C65640000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B41 PUSH1 0x6 DUP4 PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP PUSH2 0x2B4C DUP3 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B6E DUP2 PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B7F DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2BB1 JUMPI PUSH2 0x2BB0 PUSH2 0x2A2F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC5 DUP2 PUSH2 0x247E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BDE PUSH0 DUP4 ADD DUP5 PUSH2 0x2BBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BF7 PUSH0 DUP4 ADD DUP6 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2C04 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26B2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2C15 DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C20 DUP4 PUSH2 0x20B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2C2E DUP2 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2C45 JUMPI PUSH2 0x2C44 PUSH2 0x2A2F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2C83 DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C8E DUP4 PUSH2 0x20B6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2C9E JUMPI PUSH2 0x2C9D PUSH2 0x2C4C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CB3 DUP3 PUSH2 0x247E JUMP JUMPDEST SWAP2 POP PUSH2 0x2CBE DUP4 PUSH2 0x247E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x2CD7 JUMPI PUSH2 0x2CD6 PUSH2 0x2A2F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E6420457468657220746F20746865206D616E61 PUSH0 DUP3 ADD MSTORE PUSH32 0x6765720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D37 PUSH1 0x23 DUP4 PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP PUSH2 0x2D42 DUP3 PUSH2 0x2CDD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D64 DUP2 PUSH2 0x2D2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D79 DUP2 PUSH2 0x2542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D94 JUMPI PUSH2 0x2D93 PUSH2 0x228B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DA1 DUP5 DUP3 DUP6 ADD PUSH2 0x2D6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DBD PUSH0 DUP4 ADD DUP6 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x2DCA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E08 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DED JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E1D DUP3 PUSH2 0x2DD1 JUMP JUMPDEST PUSH2 0x2E27 DUP2 DUP6 PUSH2 0x2DDB JUMP JUMPDEST SWAP4 POP PUSH2 0x2E37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DEB JUMP JUMPDEST PUSH2 0x2E40 DUP2 PUSH2 0x2808 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2E5E PUSH0 DUP4 ADD DUP9 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2E6B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2E78 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x20BF JUMP JUMPDEST PUSH2 0x2E85 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x24DF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E97 DUP2 DUP5 PUSH2 0x2E13 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EB6 PUSH0 DUP4 ADD DUP7 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2EC3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x26B2 JUMP JUMPDEST PUSH2 0x2ED0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F0C PUSH1 0x1B DUP4 PUSH2 0x2AFD JUMP JUMPDEST SWAP2 POP PUSH2 0x2F17 DUP3 PUSH2 0x2ED8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F39 DUP2 PUSH2 0x2F00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xE7 STOP 0x27 PUSH16 0x2D99E495CBAD5D5FAA8C5C21E783C536 GASPRICE 0xDB DELEGATECALL MSTORE SGT 0xB4 0xAC CALLDATACOPY 0xC8 0xE1 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "671:7565:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7957:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1566:394;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7408:188;;;;;;;;;;;;;:::i;:::-;;3381:486;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8171:63;;;;;;;;;;;;;:::i;:::-;;2834:489;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2478:298;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7164:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7670:229;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1991:451;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1871:84:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2314:101:13;;;;;;;;;;;;;:::i;:::-;;1268:50:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;8082:59;;;;;;;;;;;;;:::i;:::-;;1659:85:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;819:37:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6800:331;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5847:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4434:1269;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3925:481;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6048:379;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1324:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6464:301;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2564:215:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;775:38:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7957:97;8000:7;8026:21;8019:28;;7957:97;:::o;1566:394::-;1611:31;1654:33;1714:23;:13;:21;:23::i;:::-;1690:48;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1654:84;;1753:9;1748:182;1772:23;:13;:21;:23::i;:::-;1768:1;:27;1748:182;;;1814:116;;;;;;;;1844:1;1840;:5;;;;:::i;:::-;1832:14;;1814:116;;;;1848:5;:21;1866:1;1862;:5;;;;:::i;:::-;1854:14;;1848:21;;;;;;;;;;;:26;;;;;;;;;;;;1814:116;;;;;;1876:5;:21;1894:1;1890;:5;;;;:::i;:::-;1882:14;;1876:21;;;;;;;;;;;:27;;;;;;;;;;;;1814:116;;;;;;1905:5;:21;1923:1;1919;:5;;;;:::i;:::-;1911:14;;1905:21;;;;;;;;;;;:24;;;1814:116;;;1802:6;1809:1;1802:9;;;;;;;;:::i;:::-;;;;;;;:128;;;;1797:3;;;;;;;1748:182;;;;1947:6;1940:13;;;1566:394;:::o;7408:188::-;1552:13:13;:11;:13::i;:::-;7455:14:10::1;7472:21;7455:38;;7504:12;7522:7;:5;:7::i;:::-;:12;;7542:6;7522:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7503:50;;;7571:7;7563:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;7445:151;;7408:188::o:0;3381:486::-;3448:28;3488:30;3542:24;:14;:22;:24::i;:::-;3521:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3488:79;;3578:15;3612:9;3607:231;3631:24;:14;:22;:24::i;:::-;3627:1;:28;3607:231;;;3716:8;3680;:24;3701:1;3697;:5;;;;:::i;:::-;3689:14;;3680:24;;;;;;;;;;;:32;;;:44;3676:152;;3762:8;:24;3783:1;3779;:5;;;;:::i;:::-;3771:14;;3762:24;;;;;;;;;;;3744:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;3751:7;3744:15;;;;;;;;:::i;:::-;;;;;;;:42;;;;3804:9;;;;;:::i;:::-;;;;3676:152;3657:3;;;;;;;3607:231;;;;3854:6;3847:13;;;;3381:486;;;:::o;8171:63::-;1552:13:13;:11;:13::i;:::-;8217:10:10::1;:8;:10::i;:::-;8171:63::o:0;2834:489::-;2894:28;2934:30;2988:24;:14;:22;:24::i;:::-;2967:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2934:79;;3024:15;3058:9;3053:240;3077:24;:14;:22;:24::i;:::-;3073:1;:28;3053:240;;;3170:8;3126:53;;:8;:24;3147:1;3143;:5;;;;:::i;:::-;3135:14;;3126:24;;;;;;;;;;;:32;;;;;;;;;;;;:53;;;3122:161;;3217:8;:24;3238:1;3234;:5;;;;:::i;:::-;3226:14;;3217:24;;;;;;;;;;;3199:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;3206:7;3199:15;;;;;;;;:::i;:::-;;;;;;;:42;;;;3259:9;;;;;:::i;:::-;;;;3122:161;3103:3;;;;;;;3053:240;;;;3310:6;3303:13;;;;2834:489;;;:::o;2478:298::-;2526:28;2566:30;2620:24;:14;:22;:24::i;:::-;2599:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2566:79;;2660:9;2655:91;2679:24;:14;:22;:24::i;:::-;2675:1;:28;2655:91;;;2722:8;:24;2743:1;2739;:5;;;;:::i;:::-;2731:14;;2722:24;;;;;;;;;;;2710:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;2717:1;2710:9;;;;;;;;:::i;:::-;;;;;;;:36;;;;2705:3;;;;;;;2655:91;;;;2763:6;2756:13;;;2478:298;:::o;7164:144::-;7223:4;1552:13:13;:11;:13::i;:::-;7245:4:10::1;7239:3;;:10;;;;;;;;;;;;;;;;;;7264:16;7275:4;7264:16;;;;;;:::i;:::-;;;;;;;;7297:4;7290:11;;7164:144:::0;;;:::o;7670:229::-;1552:13:13;:11;:13::i;:::-;7810:12:10::1;7828:3;:8;;7844:7;7828:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7809:47;;;7874:7;7866:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;7750:149;7670:229:::0;;:::o;1991:451::-;2045:25;2082:27;2130:23;:13;:21;:23::i;:::-;2112:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2082:72;;2165:15;2199:9;2194:218;2218:23;:13;:21;:23::i;:::-;2214:1;:27;2194:218;;;2296:5;2266:35;;:5;:21;2284:1;2280;:5;;;;:::i;:::-;2272:14;;2266:21;;;;;;;;;;;:26;;;;;;;;;;;;:35;;;2262:140;;2339:5;:21;2357:1;2353;:5;;;;:::i;:::-;2345:14;;2339:21;;;;;;;;;;;2321:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;2328:7;2321:15;;;;;;;;:::i;:::-;;;;;;;:39;;;;2378:9;;;;;:::i;:::-;;;;2262:140;2243:3;;;;;;;2194:218;;;;2429:6;2422:13;;;;1991:451;;;:::o;1871:84:14:-;1918:4;1941:7;;;;;;;;;;;1934:14;;1871:84;:::o;2314:101:13:-;1552:13;:11;:13::i;:::-;2378:30:::1;2405:1;2378:18;:30::i;:::-;2314:101::o:0;1268:50:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8082:59::-;1552:13:13;:11;:13::i;:::-;8126:8:10::1;:6;:8::i;:::-;8082:59::o:0;1659:85:13:-;1705:7;1731:6;;;;;;;;;;;1724:13;;1659:85;:::o;819:37:10:-;;;;;;;;;:::o;6800:331::-;6923:4;1552:13:13;:11;:13::i;:::-;6962:5:10::1;6939;:15;6945:8;6939:15;;;;;;;;;;;:20;;;:28;;;;;;;;;;;;;;;;;;7001:6;6977:5;:15;6983:8;6977:15;;;;;;;;;;;:21;;;:30;;;;;;;;;;;;;;;;;;7073:8;7060:43;7083:5;7090:12;:10;:12::i;:::-;7060:43;;;;;;;:::i;:::-;;;;;;;;7120:4;7113:11;;6800:331:::0;;;;;:::o;5847:167::-;5921:7;5966:3;5958;5949:6;:12;;;;:::i;:::-;5948:21;;5940:30;;;;;;6004:3;5997;5988:6;:12;;;;:::i;:::-;5987:20;;;;:::i;:::-;5980:27;;5847:167;;;;:::o;4434:1269::-;4639:4;1495:19:14;:17;:19::i;:::-;4687:1:10::1;4671:19;;4659:8;:31:::0;4655:758:::1;;4723:1;4710:9;:14:::0;4706:57:::1;;4753:9;4733:30;;;;;;;;;;;:::i;:::-;;;;;;;;4706:57;4778:12;4796:3;:8;;4812:34;4827:7;4842:3;;;;;;;;;;;4836;:9;;;;:::i;:::-;4812:34;;:14;:34::i;:::-;4796:55;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4777:74;;;4873:7;4865:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4692:239;4655:758;;;4951:24;4984:5;:15;4990:8;4984:15;;;;;;;;;;;:20;;;;;;;;;;;;4978:47;;;5034:4;5041:12;:10;:12::i;:::-;4978:76;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4951:103;;5092:7;5072:16;:27;5068:86;;5128:7;5137:16;5108:46;;;;;;;;;;;;:::i;:::-;;;;;;;;5068:86;5175:5;:15;5181:8;5175:15;;;;;;;;;;;:20;;;;;;;;;;;;5169:36;;;5206:12;:10;:12::i;:::-;5228:3;5234:34;5249:7;5264:3;;;;;;;;;;;5258;:9;;;;:::i;:::-;5234:34;;:14;:34::i;:::-;5270:6;5278:5;5169:115;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5304:5;:15;5310:8;5304:15;;;;;;;;;;;:20;;;;;;;;;;;;5298:36;;;5335:12;:10;:12::i;:::-;5349:7;:5;:7::i;:::-;5358:28;5373:7;5382:3;;;;;;;;;;;5358:28;;:14;:28::i;:::-;5388:6;5396:5;5298:104;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4937:476;4655:758;5423:26;:14;:24;:26::i;:::-;5505:77;;;;;;;;5520:12;:10;:12::i;:::-;5505:77;;;;;;5534:8;5505:77;;;;5544:6;5505:77;;;;5552:7;5505:77;;;;5561:3;5505:77;;;;;;5566:15;5505:77;;::::0;5459:8:::1;:43;5476:24;:14;:22;:24::i;:::-;5468:33;;5459:43;;;;;;;;;;;:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5667:6;5657:8;5621:53;5629:12;:10;:12::i;:::-;5643:3;5648:7;5621:53;;;;;;;;:::i;:::-;;;;;;;;5692:4;5685:11;;4434:1269:::0;;;;;;;;:::o;3925:481::-;3990:28;4030:30;4084:24;:14;:22;:24::i;:::-;4063:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4030:79;;4120:15;4154:9;4149:227;4173:24;:14;:22;:24::i;:::-;4169:1;:28;4149:227;;;4256:6;4222:8;:24;4243:1;4239;:5;;;;:::i;:::-;4231:14;;4222:24;;;;;;;;;;;:30;;;:40;4218:148;;4300:8;:24;4321:1;4317;:5;;;;:::i;:::-;4309:14;;4300:24;;;;;;;;;;;4282:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;4289:7;4282:15;;;;;;;;:::i;:::-;;;;;;;:42;;;;4342:9;;;;;:::i;:::-;;;;4218:148;4199:3;;;;;;;4149:227;;;;4393:6;4386:13;;;;3925:481;;;:::o;6048:379::-;6107:7;1552:13:13;:11;:13::i;:::-;6126:25:10::1;:13;:23;:25::i;:::-;6203:51;;;;;;;;6223:5;6203:51;;;;;;6231:5;6203:51;;;;;;6238:15;6203:51;;::::0;6161:5:::1;:39;6175:23;:13;:21;:23::i;:::-;6167:32;;6161:39;;;;;;;;;;;:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6316:23;:13;:21;:23::i;:::-;6308:32;;6297:74;6350:5;6358:12;:10;:12::i;:::-;6297:74;;;;;;;:::i;:::-;;;;;;;;6396:23;:13;:21;:23::i;:::-;6388:32;;6381:39;;6048:379:::0;;;:::o;1324:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6464:301::-;6529:7;1552:13:13;:11;:13::i;:::-;6555:5:10::1;:15;6561:8;6555:15;;;;;;;;;;;;6548:22:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6580:25;:13;:23;:25::i;:::-;6679:23;:13;:21;:23::i;:::-;6671:32;;6658:60;6705:12;:10;:12::i;:::-;6658:60;;;;;;:::i;:::-;;;;;;;;6735:23;:13;:21;:23::i;:::-;6728:30;;6464:301:::0;;;:::o;2564:215:13:-;1552:13;:11;:13::i;:::-;2668:1:::1;2648:22;;:8;:22;;::::0;2644:91:::1;;2721:1;2693:31;;;;;;;;;;;:::i;:::-;;;;;;;;2644:91;2744:28;2763:8;2744:18;:28::i;:::-;2564:215:::0;:::o;775:38:10:-;;;;;;;;;:::o;827:112:5:-;892:7;918;:14;;;911:21;;827:112;;;:::o;1817:162:13:-;1887:12;:10;:12::i;:::-;1876:23;;:7;:5;:7::i;:::-;:23;;;1872:101;;1949:12;:10;:12::i;:::-;1922:40;;;;;;;;;;;:::i;:::-;;;;;;;;1872:101;1817:162::o;2731:117:14:-;1742:16;:14;:16::i;:::-;2799:5:::1;2789:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2819:22;2828:12;:10;:12::i;:::-;2819:22;;;;;;:::i;:::-;;;;;;;;2731:117::o:0;2933:187:13:-;3006:16;3025:6;;;;;;;;;;;3006:25;;3050:8;3041:6;;:17;;;;;;;;;;;;;;;;;;3104:8;3073:40;;3094:8;3073:40;;;;;;;;;;;;2996:124;2933:187;:::o;2484:115:14:-;1495:19;:17;:19::i;:::-;2553:4:::1;2543:7;;:14;;;;;;;;;;;;;;;;;;2572:20;2579:12;:10;:12::i;:::-;2572:20;;;;;;:::i;:::-;;;;;;;;2484:115::o:0;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;2023:128:14:-;2088:8;:6;:8::i;:::-;2084:61;;;2119:15;;;;;;;;;;;;;;2084:61;2023:128::o;945:123:5:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;1074:229::-;1137:13;1153:7;:14;;;1137:30;;1193:1;1185:5;:9;1177:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1285:1;1277:5;:9;1260:7;:14;;:26;;;;1127:176;1074:229;:::o;2223:126:14:-;2286:8;:6;:8::i;:::-;2281:62;;2317:15;;;;;;;;;;;;;;2281:62;2223:126::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:15:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:149::-;544:6;578:5;572:12;562:22;;442:149;;;:::o;597:219::-;731:11;765:6;760:3;753:19;805:4;800:3;796:14;781:29;;597:219;;;;:::o;822:167::-;924:4;947:3;939:11;;977:4;972:3;968:14;960:22;;822:167;;;:::o;995:77::-;1032:7;1061:5;1050:16;;995:77;;;:::o;1078:108::-;1155:24;1173:5;1155:24;:::i;:::-;1150:3;1143:37;1078:108;;:::o;1192:126::-;1229:7;1269:42;1262:5;1258:54;1247:65;;1192:126;;;:::o;1324:96::-;1361:7;1390:24;1408:5;1390:24;:::i;:::-;1379:35;;1324:96;;;:::o;1426:108::-;1503:24;1521:5;1503:24;:::i;:::-;1498:3;1491:37;1426:108;;:::o;1540:90::-;1574:7;1617:5;1610:13;1603:21;1592:32;;1540:90;;;:::o;1636:99::-;1707:21;1722:5;1707:21;:::i;:::-;1702:3;1695:34;1636:99;;:::o;1741:108::-;1818:24;1836:5;1818:24;:::i;:::-;1813:3;1806:37;1741:108;;:::o;1945:856::-;2102:4;2097:3;2093:14;2187:4;2180:5;2176:16;2170:23;2206:63;2263:4;2258:3;2254:14;2240:12;2206:63;:::i;:::-;2117:162;2361:4;2354:5;2350:16;2344:23;2380:63;2437:4;2432:3;2428:14;2414:12;2380:63;:::i;:::-;2289:164;2536:4;2529:5;2525:16;2519:23;2555:57;2606:4;2601:3;2597:14;2583:12;2555:57;:::i;:::-;2463:159;2702:4;2695:5;2691:16;2685:23;2721:63;2778:4;2773:3;2769:14;2755:12;2721:63;:::i;:::-;2632:162;2071:730;1945:856;;:::o;2807:319::-;2946:10;2967:116;3079:3;3071:6;2967:116;:::i;:::-;3115:4;3110:3;3106:14;3092:28;;2807:319;;;;:::o;3132:148::-;3237:4;3269;3264:3;3260:14;3252:22;;3132:148;;;:::o;3380:1012::-;3569:3;3598:89;3681:5;3598:89;:::i;:::-;3703:121;3817:6;3812:3;3703:121;:::i;:::-;3696:128;;3848:91;3933:5;3848:91;:::i;:::-;3962:7;3993:1;3978:389;4003:6;4000:1;3997:13;3978:389;;;4079:6;4073:13;4106:133;4235:3;4220:13;4106:133;:::i;:::-;4099:140;;4262:95;4350:6;4262:95;:::i;:::-;4252:105;;4038:329;4025:1;4022;4018:9;4013:14;;3978:389;;;3982:14;4383:3;4376:10;;3574:818;;;3380:1012;;;;:::o;4398:513::-;4611:4;4649:2;4638:9;4634:18;4626:26;;4698:9;4692:4;4688:20;4684:1;4673:9;4669:17;4662:47;4726:178;4899:4;4890:6;4726:178;:::i;:::-;4718:186;;4398:513;;;;:::o;4917:75::-;4950:6;4983:2;4977:9;4967:19;;4917:75;:::o;4998:117::-;5107:1;5104;5097:12;5121:117;5230:1;5227;5220:12;5244:122;5317:24;5335:5;5317:24;:::i;:::-;5310:5;5307:35;5297:63;;5356:1;5353;5346:12;5297:63;5244:122;:::o;5372:139::-;5418:5;5456:6;5443:20;5434:29;;5472:33;5499:5;5472:33;:::i;:::-;5372:139;;;;:::o;5517:329::-;5576:6;5625:2;5613:9;5604:7;5600:23;5596:32;5593:119;;;5631:79;;:::i;:::-;5593:119;5751:1;5776:53;5821:7;5812:6;5801:9;5797:22;5776:53;:::i;:::-;5766:63;;5722:117;5517:329;;;;:::o;5852:146::-;5951:6;5985:5;5979:12;5969:22;;5852:146;;;:::o;6004:216::-;6135:11;6169:6;6164:3;6157:19;6209:4;6204:3;6200:14;6185:29;;6004:216;;;;:::o;6226:164::-;6325:4;6348:3;6340:11;;6378:4;6373:3;6369:14;6361:22;;6226:164;;;:::o;6480:1212::-;6631:4;6626:3;6622:14;6721:4;6714:5;6710:16;6704:23;6740:63;6797:4;6792:3;6788:14;6774:12;6740:63;:::i;:::-;6646:167;6898:4;6891:5;6887:16;6881:23;6917:63;6974:4;6969:3;6965:14;6951:12;6917:63;:::i;:::-;6823:167;7073:4;7066:5;7062:16;7056:23;7092:63;7149:4;7144:3;7140:14;7126:12;7092:63;:::i;:::-;7000:165;7249:4;7242:5;7238:16;7232:23;7268:63;7325:4;7320:3;7316:14;7302:12;7268:63;:::i;:::-;7175:166;7421:4;7414:5;7410:16;7404:23;7440:63;7497:4;7492:3;7488:14;7474:12;7440:63;:::i;:::-;7351:162;7593:4;7586:5;7582:16;7576:23;7612:63;7669:4;7664:3;7660:14;7646:12;7612:63;:::i;:::-;7523:162;6600:1092;6480:1212;;:::o;7698:307::-;7831:10;7852:110;7958:3;7950:6;7852:110;:::i;:::-;7994:4;7989:3;7985:14;7971:28;;7698:307;;;;:::o;8011:145::-;8113:4;8145;8140:3;8136:14;8128:22;;8011:145;;;:::o;8250:988::-;8433:3;8462:86;8542:5;8462:86;:::i;:::-;8564:118;8675:6;8670:3;8564:118;:::i;:::-;8557:125;;8706:88;8788:5;8706:88;:::i;:::-;8817:7;8848:1;8833:380;8858:6;8855:1;8852:13;8833:380;;;8934:6;8928:13;8961:127;9084:3;9069:13;8961:127;:::i;:::-;8954:134;;9111:92;9196:6;9111:92;:::i;:::-;9101:102;;8893:320;8880:1;8877;8873:9;8868:14;;8833:380;;;8837:14;9229:3;9222:10;;8438:800;;;8250:988;;;;:::o;9244:501::-;9451:4;9489:2;9478:9;9474:18;9466:26;;9538:9;9532:4;9528:20;9524:1;9513:9;9509:17;9502:47;9566:172;9733:4;9724:6;9566:172;:::i;:::-;9558:180;;9244:501;;;;:::o;9751:122::-;9824:24;9842:5;9824:24;:::i;:::-;9817:5;9814:35;9804:63;;9863:1;9860;9853:12;9804:63;9751:122;:::o;9879:139::-;9925:5;9963:6;9950:20;9941:29;;9979:33;10006:5;9979:33;:::i;:::-;9879:139;;;;:::o;10024:329::-;10083:6;10132:2;10120:9;10111:7;10107:23;10103:32;10100:119;;;10138:79;;:::i;:::-;10100:119;10258:1;10283:53;10328:7;10319:6;10308:9;10304:22;10283:53;:::i;:::-;10273:63;;10229:117;10024:329;;;;:::o;10359:86::-;10394:7;10434:4;10427:5;10423:16;10412:27;;10359:86;;;:::o;10451:118::-;10522:22;10538:5;10522:22;:::i;:::-;10515:5;10512:33;10502:61;;10559:1;10556;10549:12;10502:61;10451:118;:::o;10575:135::-;10619:5;10657:6;10644:20;10635:29;;10673:31;10698:5;10673:31;:::i;:::-;10575:135;;;;:::o;10716:325::-;10773:6;10822:2;10810:9;10801:7;10797:23;10793:32;10790:119;;;10828:79;;:::i;:::-;10790:119;10948:1;10973:51;11016:7;11007:6;10996:9;10992:22;10973:51;:::i;:::-;10963:61;;10919:115;10716:325;;;;:::o;11047:109::-;11128:21;11143:5;11128:21;:::i;:::-;11123:3;11116:34;11047:109;;:::o;11162:210::-;11249:4;11287:2;11276:9;11272:18;11264:26;;11300:65;11362:1;11351:9;11347:17;11338:6;11300:65;:::i;:::-;11162:210;;;;:::o;11378:104::-;11423:7;11452:24;11470:5;11452:24;:::i;:::-;11441:35;;11378:104;;;:::o;11488:138::-;11569:32;11595:5;11569:32;:::i;:::-;11562:5;11559:43;11549:71;;11616:1;11613;11606:12;11549:71;11488:138;:::o;11632:155::-;11686:5;11724:6;11711:20;11702:29;;11740:41;11775:5;11740:41;:::i;:::-;11632:155;;;;:::o;11793:122::-;11866:24;11884:5;11866:24;:::i;:::-;11859:5;11856:35;11846:63;;11905:1;11902;11895:12;11846:63;11793:122;:::o;11921:139::-;11967:5;12005:6;11992:20;11983:29;;12021:33;12048:5;12021:33;:::i;:::-;11921:139;;;;:::o;12066:490::-;12142:6;12150;12199:2;12187:9;12178:7;12174:23;12170:32;12167:119;;;12205:79;;:::i;:::-;12167:119;12325:1;12350:61;12403:7;12394:6;12383:9;12379:22;12350:61;:::i;:::-;12340:71;;12296:125;12460:2;12486:53;12531:7;12522:6;12511:9;12507:22;12486:53;:::i;:::-;12476:63;;12431:118;12066:490;;;;;:::o;12562:143::-;12658:6;12692:5;12686:12;12676:22;;12562:143;;;:::o;12711:213::-;12839:11;12873:6;12868:3;12861:19;12913:4;12908:3;12904:14;12889:29;;12711:213;;;;:::o;12930:161::-;13026:4;13049:3;13041:11;;13079:4;13074:3;13070:14;13062:22;;12930:161;;;:::o;13175:672::-;13320:4;13315:3;13311:14;13407:4;13400:5;13396:16;13390:23;13426:63;13483:4;13478:3;13474:14;13460:12;13426:63;:::i;:::-;13335:164;13582:4;13575:5;13571:16;13565:23;13601:57;13652:4;13647:3;13643:14;13629:12;13601:57;:::i;:::-;13509:159;13748:4;13741:5;13737:16;13731:23;13767:63;13824:4;13819:3;13815:14;13801:12;13767:63;:::i;:::-;13678:162;13289:558;13175:672;;:::o;13853:295::-;13980:10;14001:104;14101:3;14093:6;14001:104;:::i;:::-;14137:4;14132:3;14128:14;14114:28;;13853:295;;;;:::o;14154:142::-;14253:4;14285;14280:3;14276:14;14268:22;;14154:142;;;:::o;14384:964::-;14561:3;14590:83;14667:5;14590:83;:::i;:::-;14689:115;14797:6;14792:3;14689:115;:::i;:::-;14682:122;;14828:85;14907:5;14828:85;:::i;:::-;14936:7;14967:1;14952:371;14977:6;14974:1;14971:13;14952:371;;;15053:6;15047:13;15080:121;15197:3;15182:13;15080:121;:::i;:::-;15073:128;;15224:89;15306:6;15224:89;:::i;:::-;15214:99;;15012:311;14999:1;14996;14992:9;14987:14;;14952:371;;;14956:14;15339:3;15332:10;;14566:782;;;14384:964;;;;:::o;15354:489::-;15555:4;15593:2;15582:9;15578:18;15570:26;;15642:9;15636:4;15632:20;15628:1;15617:9;15613:17;15606:47;15670:166;15831:4;15822:6;15670:166;:::i;:::-;15662:174;;15354:489;;;;:::o;15849:118::-;15936:24;15954:5;15936:24;:::i;:::-;15931:3;15924:37;15849:118;;:::o;15973:::-;16060:24;16078:5;16060:24;:::i;:::-;16055:3;16048:37;15973:118;;:::o;16097:775::-;16330:4;16368:3;16357:9;16353:19;16345:27;;16382:71;16450:1;16439:9;16435:17;16426:6;16382:71;:::i;:::-;16463:72;16531:2;16520:9;16516:18;16507:6;16463:72;:::i;:::-;16545;16613:2;16602:9;16598:18;16589:6;16545:72;:::i;:::-;16627;16695:2;16684:9;16680:18;16671:6;16627:72;:::i;:::-;16709:73;16777:3;16766:9;16762:19;16753:6;16709:73;:::i;:::-;16792;16860:3;16849:9;16845:19;16836:6;16792:73;:::i;:::-;16097:775;;;;;;;;;:::o;16878:222::-;16971:4;17009:2;16998:9;16994:18;16986:26;;17022:71;17090:1;17079:9;17075:17;17066:6;17022:71;:::i;:::-;16878:222;;;;:::o;17106:116::-;17176:21;17191:5;17176:21;:::i;:::-;17169:5;17166:32;17156:60;;17212:1;17209;17202:12;17156:60;17106:116;:::o;17228:133::-;17271:5;17309:6;17296:20;17287:29;;17325:30;17349:5;17325:30;:::i;:::-;17228:133;;;;:::o;17367:613::-;17441:6;17449;17457;17506:2;17494:9;17485:7;17481:23;17477:32;17474:119;;;17512:79;;:::i;:::-;17474:119;17632:1;17657:53;17702:7;17693:6;17682:9;17678:22;17657:53;:::i;:::-;17647:63;;17603:117;17759:2;17785:53;17830:7;17821:6;17810:9;17806:22;17785:53;:::i;:::-;17775:63;;17730:118;17887:2;17913:50;17955:7;17946:6;17935:9;17931:22;17913:50;:::i;:::-;17903:60;;17858:115;17367:613;;;;;:::o;17986:474::-;18054:6;18062;18111:2;18099:9;18090:7;18086:23;18082:32;18079:119;;;18117:79;;:::i;:::-;18079:119;18237:1;18262:53;18307:7;18298:6;18287:9;18283:22;18262:53;:::i;:::-;18252:63;;18208:117;18364:2;18390:53;18435:7;18426:6;18415:9;18411:22;18390:53;:::i;:::-;18380:63;;18335:118;17986:474;;;;;:::o;18466:117::-;18575:1;18572;18565:12;18589:117;18698:1;18695;18688:12;18712:102;18753:6;18804:2;18800:7;18795:2;18788:5;18784:14;18780:28;18770:38;;18712:102;;;:::o;18820:180::-;18868:77;18865:1;18858:88;18965:4;18962:1;18955:15;18989:4;18986:1;18979:15;19006:281;19089:27;19111:4;19089:27;:::i;:::-;19081:6;19077:40;19219:6;19207:10;19204:22;19183:18;19171:10;19168:34;19165:62;19162:88;;;19230:18;;:::i;:::-;19162:88;19270:10;19266:2;19259:22;19049:238;19006:281;;:::o;19293:129::-;19327:6;19354:20;;:::i;:::-;19344:30;;19383:33;19411:4;19403:6;19383:33;:::i;:::-;19293:129;;;:::o;19428:307::-;19489:4;19579:18;19571:6;19568:30;19565:56;;;19601:18;;:::i;:::-;19565:56;19639:29;19661:6;19639:29;:::i;:::-;19631:37;;19723:4;19717;19713:15;19705:23;;19428:307;;;:::o;19741:146::-;19838:6;19833:3;19828;19815:30;19879:1;19870:6;19865:3;19861:16;19854:27;19741:146;;;:::o;19893:423::-;19970:5;19995:65;20011:48;20052:6;20011:48;:::i;:::-;19995:65;:::i;:::-;19986:74;;20083:6;20076:5;20069:21;20121:4;20114:5;20110:16;20159:3;20150:6;20145:3;20141:16;20138:25;20135:112;;;20166:79;;:::i;:::-;20135:112;20256:54;20303:6;20298:3;20293;20256:54;:::i;:::-;19976:340;19893:423;;;;;:::o;20335:338::-;20390:5;20439:3;20432:4;20424:6;20420:17;20416:27;20406:122;;20447:79;;:::i;:::-;20406:122;20564:6;20551:20;20589:78;20663:3;20655:6;20648:4;20640:6;20636:17;20589:78;:::i;:::-;20580:87;;20396:277;20335:338;;;;:::o;20679:1229::-;20789:6;20797;20805;20813;20821;20829;20878:3;20866:9;20857:7;20853:23;20849:33;20846:120;;;20885:79;;:::i;:::-;20846:120;21005:1;21030:53;21075:7;21066:6;21055:9;21051:22;21030:53;:::i;:::-;21020:63;;20976:117;21132:2;21158:53;21203:7;21194:6;21183:9;21179:22;21158:53;:::i;:::-;21148:63;;21103:118;21260:2;21286:53;21331:7;21322:6;21311:9;21307:22;21286:53;:::i;:::-;21276:63;;21231:118;21388:2;21414:50;21456:7;21447:6;21436:9;21432:22;21414:50;:::i;:::-;21404:60;;21359:115;21541:3;21530:9;21526:19;21513:33;21573:18;21565:6;21562:30;21559:117;;;21595:79;;:::i;:::-;21559:117;21700:62;21754:7;21745:6;21734:9;21730:22;21700:62;:::i;:::-;21690:72;;21484:288;21811:3;21838:53;21883:7;21874:6;21863:9;21859:22;21838:53;:::i;:::-;21828:63;;21782:119;20679:1229;;;;;;;;:::o;21914:222::-;22007:4;22045:2;22034:9;22030:18;22022:26;;22058:71;22126:1;22115:9;22111:17;22102:6;22058:71;:::i;:::-;21914:222;;;;:::o;22142:430::-;22285:4;22323:2;22312:9;22308:18;22300:26;;22336:71;22404:1;22393:9;22389:17;22380:6;22336:71;:::i;:::-;22417:66;22479:2;22468:9;22464:18;22455:6;22417:66;:::i;:::-;22493:72;22561:2;22550:9;22546:18;22537:6;22493:72;:::i;:::-;22142:430;;;;;;:::o;22578:180::-;22626:77;22623:1;22616:88;22723:4;22720:1;22713:15;22747:4;22744:1;22737:15;22764:191;22804:3;22823:20;22841:1;22823:20;:::i;:::-;22818:25;;22857:20;22875:1;22857:20;:::i;:::-;22852:25;;22900:1;22897;22893:9;22886:16;;22921:3;22918:1;22915:10;22912:36;;;22928:18;;:::i;:::-;22912:36;22764:191;;;;:::o;22961:180::-;23009:77;23006:1;22999:88;23106:4;23103:1;23096:15;23130:4;23127:1;23120:15;23147:147;23248:11;23285:3;23270:18;;23147:147;;;;:::o;23300:114::-;;:::o;23420:398::-;23579:3;23600:83;23681:1;23676:3;23600:83;:::i;:::-;23593:90;;23692:93;23781:3;23692:93;:::i;:::-;23810:1;23805:3;23801:11;23794:18;;23420:398;;;:::o;23824:379::-;24008:3;24030:147;24173:3;24030:147;:::i;:::-;24023:154;;24194:3;24187:10;;23824:379;;;:::o;24209:169::-;24293:11;24327:6;24322:3;24315:19;24367:4;24362:3;24358:14;24343:29;;24209:169;;;;:::o;24384:156::-;24524:8;24520:1;24512:6;24508:14;24501:32;24384:156;:::o;24546:365::-;24688:3;24709:66;24773:1;24768:3;24709:66;:::i;:::-;24702:73;;24784:93;24873:3;24784:93;:::i;:::-;24902:2;24897:3;24893:12;24886:19;;24546:365;;;:::o;24917:419::-;25083:4;25121:2;25110:9;25106:18;25098:26;;25170:9;25164:4;25160:20;25156:1;25145:9;25141:17;25134:47;25198:131;25324:4;25198:131;:::i;:::-;25190:139;;24917:419;;;:::o;25342:233::-;25381:3;25404:24;25422:5;25404:24;:::i;:::-;25395:33;;25450:66;25443:5;25440:77;25437:103;;25520:18;;:::i;:::-;25437:103;25567:1;25560:5;25556:13;25549:20;;25342:233;;;:::o;25581:112::-;25664:22;25680:5;25664:22;:::i;:::-;25659:3;25652:35;25581:112;;:::o;25699:214::-;25788:4;25826:2;25815:9;25811:18;25803:26;;25839:67;25903:1;25892:9;25888:17;25879:6;25839:67;:::i;:::-;25699:214;;;;:::o;25919:332::-;26040:4;26078:2;26067:9;26063:18;26055:26;;26091:71;26159:1;26148:9;26144:17;26135:6;26091:71;:::i;:::-;26172:72;26240:2;26229:9;26225:18;26216:6;26172:72;:::i;:::-;25919:332;;;;;:::o;26257:410::-;26297:7;26320:20;26338:1;26320:20;:::i;:::-;26315:25;;26354:20;26372:1;26354:20;:::i;:::-;26349:25;;26409:1;26406;26402:9;26431:30;26449:11;26431:30;:::i;:::-;26420:41;;26610:1;26601:7;26597:15;26594:1;26591:22;26571:1;26564:9;26544:83;26521:139;;26640:18;;:::i;:::-;26521:139;26305:362;26257:410;;;;:::o;26673:180::-;26721:77;26718:1;26711:88;26818:4;26815:1;26808:15;26842:4;26839:1;26832:15;26859:185;26899:1;26916:20;26934:1;26916:20;:::i;:::-;26911:25;;26950:20;26968:1;26950:20;:::i;:::-;26945:25;;26989:1;26979:35;;26994:18;;:::i;:::-;26979:35;27036:1;27033;27029:9;27024:14;;26859:185;;;;:::o;27050:191::-;27088:4;27108:18;27124:1;27108:18;:::i;:::-;27103:23;;27140:18;27156:1;27140:18;:::i;:::-;27135:23;;27182:1;27179;27175:9;27167:17;;27206:4;27200;27197:14;27194:40;;;27214:18;;:::i;:::-;27194:40;27050:191;;;;:::o;27247:222::-;27387:34;27383:1;27375:6;27371:14;27364:58;27456:5;27451:2;27443:6;27439:15;27432:30;27247:222;:::o;27475:366::-;27617:3;27638:67;27702:2;27697:3;27638:67;:::i;:::-;27631:74;;27714:93;27803:3;27714:93;:::i;:::-;27832:2;27827:3;27823:12;27816:19;;27475:366;;;:::o;27847:419::-;28013:4;28051:2;28040:9;28036:18;28028:26;;28100:9;28094:4;28090:20;28086:1;28075:9;28071:17;28064:47;28128:131;28254:4;28128:131;:::i;:::-;28120:139;;27847:419;;;:::o;28272:143::-;28329:5;28360:6;28354:13;28345:22;;28376:33;28403:5;28376:33;:::i;:::-;28272:143;;;;:::o;28421:351::-;28491:6;28540:2;28528:9;28519:7;28515:23;28511:32;28508:119;;;28546:79;;:::i;:::-;28508:119;28666:1;28691:64;28747:7;28738:6;28727:9;28723:22;28691:64;:::i;:::-;28681:74;;28637:128;28421:351;;;;:::o;28778:332::-;28899:4;28937:2;28926:9;28922:18;28914:26;;28950:71;29018:1;29007:9;29003:17;28994:6;28950:71;:::i;:::-;29031:72;29099:2;29088:9;29084:18;29075:6;29031:72;:::i;:::-;28778:332;;;;;:::o;29116:98::-;29167:6;29201:5;29195:12;29185:22;;29116:98;;;:::o;29220:168::-;29303:11;29337:6;29332:3;29325:19;29377:4;29372:3;29368:14;29353:29;;29220:168;;;;:::o;29394:246::-;29475:1;29485:113;29499:6;29496:1;29493:13;29485:113;;;29584:1;29579:3;29575:11;29569:18;29565:1;29560:3;29556:11;29549:39;29521:2;29518:1;29514:10;29509:15;;29485:113;;;29632:1;29623:6;29618:3;29614:16;29607:27;29456:184;29394:246;;;:::o;29646:373::-;29732:3;29760:38;29792:5;29760:38;:::i;:::-;29814:70;29877:6;29872:3;29814:70;:::i;:::-;29807:77;;29893:65;29951:6;29946:3;29939:4;29932:5;29928:16;29893:65;:::i;:::-;29983:29;30005:6;29983:29;:::i;:::-;29978:3;29974:39;29967:46;;29736:283;29646:373;;;;:::o;30025:739::-;30242:4;30280:3;30269:9;30265:19;30257:27;;30294:71;30362:1;30351:9;30347:17;30338:6;30294:71;:::i;:::-;30375:72;30443:2;30432:9;30428:18;30419:6;30375:72;:::i;:::-;30457;30525:2;30514:9;30510:18;30501:6;30457:72;:::i;:::-;30539:66;30601:2;30590:9;30586:18;30577:6;30539:66;:::i;:::-;30653:9;30647:4;30643:20;30637:3;30626:9;30622:19;30615:49;30681:76;30752:4;30743:6;30681:76;:::i;:::-;30673:84;;30025:739;;;;;;;;:::o;30770:442::-;30919:4;30957:2;30946:9;30942:18;30934:26;;30970:71;31038:1;31027:9;31023:17;31014:6;30970:71;:::i;:::-;31051:72;31119:2;31108:9;31104:18;31095:6;31051:72;:::i;:::-;31133;31201:2;31190:9;31186:18;31177:6;31133:72;:::i;:::-;30770:442;;;;;;:::o;31218:177::-;31358:29;31354:1;31346:6;31342:14;31335:53;31218:177;:::o;31401:366::-;31543:3;31564:67;31628:2;31623:3;31564:67;:::i;:::-;31557:74;;31640:93;31729:3;31640:93;:::i;:::-;31758:2;31753:3;31749:12;31742:19;;31401:366;;;:::o;31773:419::-;31939:4;31977:2;31966:9;31962:18;31954:26;;32026:9;32020:4;32016:20;32012:1;32001:9;31997:17;31990:47;32054:131;32180:4;32054:131;:::i;:::-;32046:139;;31773:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2430000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_donateCounter()": "2548",
								"_tokenCounter()": "2527",
								"addToken(address)": "infinite",
								"calcPercentage(uint256,uint256)": "infinite",
								"deleteToken(bytes32)": "infinite",
								"donate(bytes32,address,uint256,bool,bytes,bytes32)": "infinite",
								"donation(bytes32)": "infinite",
								"getBalance()": "358",
								"getDonation(address)": "infinite",
								"getDonationByAppId(bytes32)": "infinite",
								"getDonationByToekn(bytes32)": "infinite",
								"getDonationList()": "infinite",
								"getToken(address)": "infinite",
								"getTokenList()": "infinite",
								"owner()": "2582",
								"pause()": "infinite",
								"paused()": "2635",
								"renounceOwnership()": "infinite",
								"token(bytes32)": "7407",
								"transferBalance(address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateToken(bytes32,address,bool)": "infinite",
								"updateToken(uint8)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 671,
									"end": 8236,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 874,
									"end": 875,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 862,
									"end": 875,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 862,
									"end": 875,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 875,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 862,
									"end": 875,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 862,
									"end": 875,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 862,
									"end": 875,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 862,
									"end": 875,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1530,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1530,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1530,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1530,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1375,
									"end": 1530,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1530,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1375,
									"end": 1530,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1530,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1530,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1375,
									"end": 1530,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1375,
									"end": 1530,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 706,
									"end": 716,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1318,
									"end": 1319,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1294,
									"end": 1306,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1294,
									"end": 1320,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH",
									"source": 13,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 1343,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "tag",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1374,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "tag",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 1290,
									"end": 1385,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1413,
									"end": 1425,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1394,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 1394,
									"end": 1412,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1394,
									"end": 1412,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1394,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1394,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1246,
									"end": 1433,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1262,
									"end": 1267,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1252,
									"end": 1259,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1259,
									"name": "PUSH",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "PUSH",
									"source": 14,
									"value": "FF"
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1252,
									"end": 1267,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1399,
									"end": 1412,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1399,
									"end": 1422,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1399,
									"end": 1424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1496,
									"end": 1497,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1505,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1507,
									"end": 1522,
									"name": "TIMESTAMP",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1476,
									"end": 1523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1439,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1471,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1448,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1448,
									"end": 1469,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1448,
									"end": 1469,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1448,
									"end": 1471,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1448,
									"end": 1471,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1448,
									"end": 1471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1448,
									"end": 1471,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1448,
									"end": 1471,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1440,
									"end": 1472,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1440,
									"end": 1472,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1473,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2933,
									"end": 3120,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 2933,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3006,
									"end": 3022,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3025,
									"end": 3031,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3006,
									"end": 3031,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3006,
									"end": 3031,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3050,
									"end": 3058,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3047,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3041,
									"end": 3047,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3104,
									"end": 3112,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3094,
									"end": 3102,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 13,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3073,
									"end": 3113,
									"name": "LOG3",
									"source": 13
								},
								{
									"begin": 2996,
									"end": 3120,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2933,
									"end": 3120,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2933,
									"end": 3120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 945,
									"end": 1068,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 945,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1032,
									"end": 1039,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1046,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1046,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1046,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1051,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1068,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 945,
									"end": 1068,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 827,
									"end": 939,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 827,
									"end": 939,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 892,
									"end": 899,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 918,
									"end": 925,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 918,
									"end": 932,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 918,
									"end": 932,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 918,
									"end": 932,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 911,
									"end": 932,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 911,
									"end": 932,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 827,
									"end": 939,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 827,
									"end": 939,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 827,
									"end": 939,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 827,
									"end": 939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 671,
									"end": 8236,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fbe700276f2d99e495cbad5d5faa8c5c21e783c5363adbf45213b4ac37c8e13a64736f6c63430008180033",
									".code": [
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "75E6E600"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "B2F7C6E0"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "E6062E1A"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "E6062E1A"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "F1A3B943"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "F7EDBBAC"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "B2F7C6E0"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "CACF11E7"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "D48BFCA7"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "75E6E600"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "9230B2BC"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "95A7A953"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "A37B06D4"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "443910E0"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "443910E0"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "4DF71212"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "56A6D9EF"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "59770438"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "12065FE0"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "273CBAA0"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "3CCFD60B"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "3D496362"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "410A1D32"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 671,
											"end": 8236,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 7957,
											"end": 8054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 7957,
											"end": 8054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1566,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 7408,
											"end": 7596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3381,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 3381,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3381,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 8171,
											"end": 8234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2834,
											"end": 3323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2834,
											"end": 3323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2834,
											"end": 3323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2478,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 2478,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 7164,
											"end": 7308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 7164,
											"end": 7308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 7164,
											"end": 7308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 7670,
											"end": 7899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 7670,
											"end": 7899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1991,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1991,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1991,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "tag",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 1871,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 1871,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2314,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1268,
											"end": 1318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1268,
											"end": 1318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1268,
											"end": 1318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 8082,
											"end": 8141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1659,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1659,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 819,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 819,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 819,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 6800,
											"end": 7131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 6800,
											"end": 7131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 6800,
											"end": 7131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 5847,
											"end": 6014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 5847,
											"end": 6014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 5847,
											"end": 6014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 4434,
											"end": 5703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 4434,
											"end": 5703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4434,
											"end": 5703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 3925,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 3925,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3925,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 6048,
											"end": 6427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 6048,
											"end": 6427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 6048,
											"end": 6427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1324,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1324,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1324,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 6464,
											"end": 6765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 6464,
											"end": 6765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 6464,
											"end": 6765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 2564,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 2564,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 775,
											"end": 813,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 775,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 775,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8000,
											"end": 8007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8047,
											"name": "SELFBALANCE",
											"source": 10
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8019,
											"end": 8047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7957,
											"end": 8054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1642,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1714,
											"end": 1727,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1714,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1714,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1714,
											"end": 1737,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1714,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1690,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1690,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1690,
											"end": 1738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1654,
											"end": 1738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1753,
											"end": 1762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1930,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1748,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1772,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1772,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1772,
											"end": 1795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1772,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1795,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1930,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1748,
											"end": 1930,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1845,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1840,
											"end": 1841,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1840,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1832,
											"end": 1846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1846,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1862,
											"end": 1863,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1862,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1862,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1868,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1874,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1881,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1895,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1890,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1882,
											"end": 1896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1896,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1897,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1910,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1919,
											"end": 1920,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1919,
											"end": 1924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1925,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1929,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1905,
											"end": 1929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1905,
											"end": 1929,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1814,
											"end": 1930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1808,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1809,
											"end": 1810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1802,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1930,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1802,
											"end": 1930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1748,
											"end": 1930,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1930,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 1748,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1940,
											"end": 1953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 7408,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7455,
											"end": 7469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7493,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 10
										},
										{
											"begin": 7455,
											"end": 7493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7455,
											"end": 7493,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7522,
											"end": 7527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7522,
											"end": 7529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7522,
											"end": 7529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7522,
											"end": 7534,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7542,
											"end": 7548,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7522,
											"end": 7553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7503,
											"end": 7553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7503,
											"end": 7553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7503,
											"end": 7553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7571,
											"end": 7578,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 7563,
											"end": 7589,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 7563,
											"end": 7589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7445,
											"end": 7596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7445,
											"end": 7596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7408,
											"end": 7596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3476,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3488,
											"end": 3518,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3542,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3542,
											"end": 3566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3566,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 3542,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3521,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 3521,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3521,
											"end": 3567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3578,
											"end": 3593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3838,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3607,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3631,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3631,
											"end": 3645,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3631,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3631,
											"end": 3655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3631,
											"end": 3655,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 3631,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3655,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3838,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3607,
											"end": 3838,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3724,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3688,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3702,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3697,
											"end": 3702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3724,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3676,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3676,
											"end": 3828,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3770,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3784,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3779,
											"end": 3784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3771,
											"end": 3785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3785,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3751,
											"end": 3758,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3744,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 3804,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3676,
											"end": 3828,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3676,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3660,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3660,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3660,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3660,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 3607,
											"end": 3838,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3838,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 3607,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3854,
											"end": 3860,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3860,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3860,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3860,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3860,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 8171,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 8217,
											"end": 8225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 8217,
											"end": 8227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 8217,
											"end": 8227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8171,
											"end": 8234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2894,
											"end": 2922,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2934,
											"end": 2964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2988,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2988,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 2967,
											"end": 3013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2967,
											"end": 3013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3024,
											"end": 3039,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3293,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3053,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3077,
											"end": 3091,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3077,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3077,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3101,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3293,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3053,
											"end": 3293,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3170,
											"end": 3178,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3134,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3148,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3143,
											"end": 3144,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3143,
											"end": 3148,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3148,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3143,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3148,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3143,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3149,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3150,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3126,
											"end": 3158,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3122,
											"end": 3283,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3225,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3239,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3234,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3226,
											"end": 3240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3240,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3241,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3213,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3199,
											"end": 3214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 3259,
											"end": 3268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3283,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3122,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3106,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3106,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3106,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3103,
											"end": 3106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3053,
											"end": 3293,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3293,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3053,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3310,
											"end": 3316,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3316,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 3323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2554,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2566,
											"end": 2596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2620,
											"end": 2634,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2620,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2620,
											"end": 2644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2644,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2620,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 2599,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 2599,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2746,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2655,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2679,
											"end": 2693,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2679,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2679,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2703,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2679,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2703,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2746,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2655,
											"end": 2746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2730,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2744,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2739,
											"end": 2744,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2739,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2739,
											"end": 2744,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2739,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2717,
											"end": 2718,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2710,
											"end": 2719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2655,
											"end": 2746,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2746,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2655,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2478,
											"end": 2776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7223,
											"end": 7227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 7239,
											"end": 7242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7239,
											"end": 7249,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B5C0FBE3C7E536E86EA6D91EC04BD37128A9BF1E981E06DAE9834031254831F9"
										},
										{
											"begin": 7275,
											"end": 7279,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 7264,
											"end": 7280,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7280,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 7297,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7290,
											"end": 7301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7290,
											"end": 7301,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7831,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7828,
											"end": 7836,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7844,
											"end": 7851,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 7828,
											"end": 7856,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7874,
											"end": 7881,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 7866,
											"end": 7892,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7866,
											"end": 7892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7750,
											"end": 7899,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2045,
											"end": 2070,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2082,
											"end": 2109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2130,
											"end": 2143,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2130,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2130,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 2112,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2112,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2165,
											"end": 2180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2208,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2412,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2194,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 2218,
											"end": 2231,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2218,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2241,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2412,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2194,
											"end": 2412,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2301,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2266,
											"end": 2301,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2271,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2285,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2280,
											"end": 2281,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 2280,
											"end": 2285,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2280,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2285,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 2280,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2272,
											"end": 2286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2286,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2287,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2266,
											"end": 2292,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2301,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2266,
											"end": 2301,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2301,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2262,
											"end": 2402,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2344,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2358,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2353,
											"end": 2354,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2353,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 2353,
											"end": 2358,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2353,
											"end": 2358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2353,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2353,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2353,
											"end": 2358,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 2353,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2359,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2359,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2360,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2327,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2328,
											"end": 2335,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2321,
											"end": 2336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 2378,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2402,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2262,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2194,
											"end": 2412,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2412,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2194,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 1922,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1934,
											"end": 1948,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2314,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2378,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 2405,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2396,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 2378,
											"end": 2408,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2378,
											"end": 2408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 2378,
											"end": 2408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 8082,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8126,
											"end": 8134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8126,
											"end": 8132,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 8126,
											"end": 8134,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8126,
											"end": 8134,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8126,
											"end": 8134,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8082,
											"end": 8141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1712,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1724,
											"end": 1737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 819,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 819,
											"end": 856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6923,
											"end": 6927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6962,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6945,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6954,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6959,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 6967,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7001,
											"end": 7007,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 6991,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6977,
											"end": 6992,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6977,
											"end": 6998,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 6998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6977,
											"end": 7007,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7073,
											"end": 7081,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "178CC6533AFB1053A370099DE33A8F4A6C10ADF023EBA537C33721E13DC1273"
										},
										{
											"begin": 7083,
											"end": 7088,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 7090,
											"end": 7100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 7090,
											"end": 7102,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 7090,
											"end": 7102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7060,
											"end": 7103,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7103,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 7120,
											"end": 7124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7113,
											"end": 7124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7113,
											"end": 7124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6800,
											"end": 7131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5921,
											"end": 5928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5969,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5958,
											"end": 5961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5955,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5949,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5949,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5948,
											"end": 5969,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5948,
											"end": 5969,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6004,
											"end": 6007,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5997,
											"end": 6000,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 5994,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5988,
											"end": 6000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 6000,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5988,
											"end": 6000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5988,
											"end": 6000,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5988,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5987,
											"end": 6007,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 6007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 5987,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 6007,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5987,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 6007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 1495,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 1495,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4687,
											"end": 4688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4671,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4690,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4659,
											"end": 4667,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4659,
											"end": 4690,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4655,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4655,
											"end": 5413,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4723,
											"end": 4724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4719,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4724,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4706,
											"end": 4763,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4753,
											"end": 4762,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9266535100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 4733,
											"end": 4763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4763,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 4706,
											"end": 4763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4796,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4796,
											"end": 4804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 4827,
											"end": 4834,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4842,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4845,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4842,
											"end": 4845,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4845,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4842,
											"end": 4845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4836,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4836,
											"end": 4845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 4836,
											"end": 4845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4836,
											"end": 4845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4836,
											"end": 4845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4812,
											"end": 4846,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 4812,
											"end": 4846,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4846,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 4812,
											"end": 4846,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4796,
											"end": 4851,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4777,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4777,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4777,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4873,
											"end": 4880,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 4865,
											"end": 4920,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 4865,
											"end": 4920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4655,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 4655,
											"end": 5413,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4655,
											"end": 5413,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4655,
											"end": 5413,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 4975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 4989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4998,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 4999,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4984,
											"end": 5004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4978,
											"end": 5025,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "65AEAA95"
										},
										{
											"begin": 5034,
											"end": 5038,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5041,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5041,
											"end": 5053,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 5041,
											"end": 5053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4978,
											"end": 5054,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 5054,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 4978,
											"end": 5054,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 4978,
											"end": 5054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 5054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 5054,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5099,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5099,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5068,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 5068,
											"end": 5154,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5135,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5153,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A24F8BE900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 5108,
											"end": 5154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5154,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5068,
											"end": 5154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 5068,
											"end": 5154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5189,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5190,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5175,
											"end": 5195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5169,
											"end": 5205,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "760D9BBA"
										},
										{
											"begin": 5206,
											"end": 5218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 5206,
											"end": 5216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5206,
											"end": 5218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 5206,
											"end": 5218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5231,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 5249,
											"end": 5256,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5264,
											"end": 5267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5267,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5267,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5267,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5264,
											"end": 5267,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5267,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5267,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5264,
											"end": 5267,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5258,
											"end": 5261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5258,
											"end": 5267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 5258,
											"end": 5267,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5258,
											"end": 5267,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5258,
											"end": 5267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 5258,
											"end": 5267,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5258,
											"end": 5267,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 5258,
											"end": 5267,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5234,
											"end": 5268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 5234,
											"end": 5268,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 5234,
											"end": 5268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5276,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5283,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 5169,
											"end": 5284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5284,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5284,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5169,
											"end": 5284,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5318,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5319,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5304,
											"end": 5324,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5298,
											"end": 5334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "760D9BBA"
										},
										{
											"begin": 5335,
											"end": 5347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 5335,
											"end": 5345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5335,
											"end": 5347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 5335,
											"end": 5347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5349,
											"end": 5356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 5349,
											"end": 5354,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5349,
											"end": 5356,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5349,
											"end": 5356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 5349,
											"end": 5356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 5373,
											"end": 5380,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5382,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5382,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5382,
											"end": 5385,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5385,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5385,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5382,
											"end": 5385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5382,
											"end": 5385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5358,
											"end": 5386,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 5358,
											"end": 5386,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 5358,
											"end": 5386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5388,
											"end": 5394,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5396,
											"end": 5401,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 5298,
											"end": 5402,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5402,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5402,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5402,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 5413,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4655,
											"end": 5413,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 4655,
											"end": 5413,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 5423,
											"end": 5437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5423,
											"end": 5447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 5423,
											"end": 5449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 5423,
											"end": 5449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 5520,
											"end": 5530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5520,
											"end": 5532,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5532,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 5520,
											"end": 5532,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5534,
											"end": 5542,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5544,
											"end": 5550,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5552,
											"end": 5559,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5561,
											"end": 5564,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5581,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5476,
											"end": 5490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5476,
											"end": 5498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5476,
											"end": 5500,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5476,
											"end": 5500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5476,
											"end": 5500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5468,
											"end": 5501,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5502,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5582,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5667,
											"end": 5673,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5657,
											"end": 5665,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D96B33CD6E9829949C7F13033F0A8230587EFC5E5D0CFF68861945EFDED28B8A"
										},
										{
											"begin": 5629,
											"end": 5641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5629,
											"end": 5639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5629,
											"end": 5641,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 5629,
											"end": 5641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5643,
											"end": 5646,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 5655,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 5621,
											"end": 5674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5674,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5685,
											"end": 5696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5685,
											"end": 5696,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 5703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4018,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4030,
											"end": 4060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4084,
											"end": 4098,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4084,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 4063,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4063,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4063,
											"end": 4109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4030,
											"end": 4109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4030,
											"end": 4109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4120,
											"end": 4135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4163,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4376,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 4149,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4173,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 4173,
											"end": 4187,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4173,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4173,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4173,
											"end": 4197,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 4173,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4197,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4376,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4149,
											"end": 4376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4230,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4244,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4239,
											"end": 4240,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4239,
											"end": 4244,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4239,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4244,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4239,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4245,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4245,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4246,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4252,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4222,
											"end": 4252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4252,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4222,
											"end": 4262,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4218,
											"end": 4366,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4308,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4317,
											"end": 4318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4317,
											"end": 4322,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4317,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4322,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4317,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4309,
											"end": 4323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4323,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4324,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4288,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4296,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4282,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4282,
											"end": 4324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4342,
											"end": 4351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4366,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 4218,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 4149,
											"end": 4376,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4376,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4149,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4399,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4386,
											"end": 4399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3925,
											"end": 4406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6107,
											"end": 6114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6126,
											"end": 6139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6126,
											"end": 6149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 6126,
											"end": 6151,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6126,
											"end": 6151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6126,
											"end": 6151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6228,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6231,
											"end": 6236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6238,
											"end": 6253,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 6175,
											"end": 6188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6175,
											"end": 6196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 6175,
											"end": 6198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 6175,
											"end": 6198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6167,
											"end": 6199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6199,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6200,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6161,
											"end": 6254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6316,
											"end": 6329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6316,
											"end": 6337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 6316,
											"end": 6339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6316,
											"end": 6339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6308,
											"end": 6340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6340,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E50FFA2B79CB01D7C5404BFE02189A4C5B297CD59BC80608EFDC52E3B334616"
										},
										{
											"begin": 6350,
											"end": 6355,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6358,
											"end": 6370,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6358,
											"end": 6368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 6358,
											"end": 6370,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6358,
											"end": 6370,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6358,
											"end": 6370,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 6297,
											"end": 6371,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6371,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6396,
											"end": 6409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6396,
											"end": 6417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 6396,
											"end": 6419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6396,
											"end": 6419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6388,
											"end": 6420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6388,
											"end": 6420,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6381,
											"end": 6420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6381,
											"end": 6420,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1324,
											"end": 1368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6529,
											"end": 6536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6555,
											"end": 6560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6569,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6555,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6570,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6580,
											"end": 6605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6580,
											"end": 6593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6580,
											"end": 6603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 6580,
											"end": 6605,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6580,
											"end": 6605,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 6580,
											"end": 6605,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6679,
											"end": 6702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 6679,
											"end": 6692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6679,
											"end": 6700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 6679,
											"end": 6702,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6679,
											"end": 6702,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 6679,
											"end": 6702,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6671,
											"end": 6703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6703,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3AFBC119E23990903D2EF3FDF9210A7B06B5F6F85438B0EDFCFBF630AD594FCC"
										},
										{
											"begin": 6705,
											"end": 6717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 6705,
											"end": 6715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 6705,
											"end": 6717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 6705,
											"end": 6717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 6658,
											"end": 6718,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6658,
											"end": 6718,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 6735,
											"end": 6748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6735,
											"end": 6756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 6735,
											"end": 6758,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 6735,
											"end": 6758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 1552,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1552,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 1552,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2648,
											"end": 2670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2648,
											"end": 2656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2648,
											"end": 2670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2648,
											"end": 2670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 2693,
											"end": 2724,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2724,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 2644,
											"end": 2735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2744,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2763,
											"end": 2771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2744,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 2744,
											"end": 2772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2744,
											"end": 2772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2744,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 775,
											"end": 813,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 813,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 775,
											"end": 813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1979,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1817,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 1887,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 1887,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 1887,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 1876,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1876,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 1872,
											"end": 1973,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 1949,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 1949,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH",
											"source": 13,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1922,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1962,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 1973,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 1872,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1817,
											"end": 1979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2848,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 2731,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 1742,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 1742,
											"end": 1758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2799,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2796,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2804,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2828,
											"end": 2840,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 2828,
											"end": 2838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 2828,
											"end": 2840,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2828,
											"end": 2840,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 2828,
											"end": 2840,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 2819,
											"end": 2841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2841,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 2731,
											"end": 2848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2933,
											"end": 3120,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 2933,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3025,
											"end": 3031,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3031,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3104,
											"end": 3112,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 13,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3113,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3120,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 3120,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2599,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 2484,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 1495,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 1495,
											"end": 1514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 1495,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2553,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2543,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2579,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 2579,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 2579,
											"end": 2591,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 2579,
											"end": 2591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 2572,
											"end": 2592,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2592,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 2484,
											"end": 2599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2023,
											"end": 2151,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 2023,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2088,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 2088,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2088,
											"end": 2096,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 2088,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2084,
											"end": 2145,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2084,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 2084,
											"end": 2145,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "PUSH",
											"source": 14,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2084,
											"end": 2145,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 2084,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1137,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 1177,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1286,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2349,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 2223,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2286,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 2286,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2286,
											"end": 2294,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 2286,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2281,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 2281,
											"end": 2343,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "PUSH",
											"source": 14,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2281,
											"end": 2343,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 2281,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2223,
											"end": 2349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "164"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "197"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "266"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 442,
											"end": 591,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 442,
											"end": 591,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 544,
											"end": 550,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 572,
											"end": 584,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 562,
											"end": 584,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 562,
											"end": 584,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 442,
											"end": 591,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 442,
											"end": 591,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 442,
											"end": 591,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 442,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 597,
											"end": 816,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 597,
											"end": 816,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 731,
											"end": 742,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 771,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 760,
											"end": 763,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 753,
											"end": 772,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 805,
											"end": 809,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 803,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 796,
											"end": 810,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 781,
											"end": 810,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 781,
											"end": 810,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 597,
											"end": 816,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 597,
											"end": 816,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 597,
											"end": 816,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 597,
											"end": 816,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 597,
											"end": 816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 822,
											"end": 989,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 822,
											"end": 989,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 924,
											"end": 928,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 950,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 939,
											"end": 950,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 939,
											"end": 950,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 977,
											"end": 981,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 975,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 968,
											"end": 982,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 960,
											"end": 982,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 960,
											"end": 982,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 822,
											"end": 989,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 822,
											"end": 989,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 822,
											"end": 989,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 822,
											"end": 989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 995,
											"end": 1072,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 995,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1066,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1050,
											"end": 1066,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1050,
											"end": 1066,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 995,
											"end": 1072,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 995,
											"end": 1072,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 995,
											"end": 1072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 995,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1155,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 1173,
											"end": 1178,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1155,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 1155,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1155,
											"end": 1179,
											"name": "tag",
											"source": 15,
											"value": "513"
										},
										{
											"begin": 1155,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1150,
											"end": 1153,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1143,
											"end": 1180,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1078,
											"end": 1186,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1078,
											"end": 1186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1192,
											"end": 1318,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 1192,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1229,
											"end": 1236,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1311,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1258,
											"end": 1312,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1192,
											"end": 1318,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1192,
											"end": 1318,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1192,
											"end": 1318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1192,
											"end": 1318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1324,
											"end": 1420,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 1324,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1361,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 1408,
											"end": 1413,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1390,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 1390,
											"end": 1414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1390,
											"end": 1414,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 1390,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1414,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1379,
											"end": 1414,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1324,
											"end": 1420,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1324,
											"end": 1420,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1324,
											"end": 1420,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1324,
											"end": 1420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1534,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 1426,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 1503,
											"end": 1527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "tag",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 1503,
											"end": 1527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1491,
											"end": 1528,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1534,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1534,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1540,
											"end": 1630,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 1540,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1581,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1610,
											"end": 1623,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1603,
											"end": 1624,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1592,
											"end": 1624,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1592,
											"end": 1624,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1540,
											"end": 1630,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1540,
											"end": 1630,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1540,
											"end": 1630,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1540,
											"end": 1630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1636,
											"end": 1735,
											"name": "tag",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 1636,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 1707,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1728,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 1707,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1702,
											"end": 1705,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1695,
											"end": 1729,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1636,
											"end": 1735,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1636,
											"end": 1735,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1636,
											"end": 1735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1741,
											"end": 1849,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 1741,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1818,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 1836,
											"end": 1841,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1818,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 1818,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1818,
											"end": 1842,
											"name": "tag",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 1818,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1813,
											"end": 1816,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1741,
											"end": 1849,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1741,
											"end": 1849,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1741,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2801,
											"name": "tag",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 1945,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2102,
											"end": 2106,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2093,
											"end": 2107,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2185,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2170,
											"end": 2193,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 2263,
											"end": 2267,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2261,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 2206,
											"end": 2269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2206,
											"end": 2269,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 2206,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2117,
											"end": 2279,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2361,
											"end": 2365,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2380,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 2437,
											"end": 2441,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2435,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2428,
											"end": 2442,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2426,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2380,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 2380,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2380,
											"end": 2443,
											"name": "tag",
											"source": 15,
											"value": "526"
										},
										{
											"begin": 2380,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2289,
											"end": 2453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2540,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2529,
											"end": 2534,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 2541,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2519,
											"end": 2542,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2555,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 2606,
											"end": 2610,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2604,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2597,
											"end": 2611,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2583,
											"end": 2595,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2555,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 2555,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2555,
											"end": 2612,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 2555,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2463,
											"end": 2622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2695,
											"end": 2700,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2707,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2685,
											"end": 2708,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2721,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2773,
											"end": 2776,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2769,
											"end": 2783,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2755,
											"end": 2767,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2721,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 2721,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2721,
											"end": 2784,
											"name": "tag",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 2721,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2632,
											"end": 2794,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2071,
											"end": 2801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2807,
											"end": 3126,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 2807,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2946,
											"end": 2956,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3077,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2967,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 2967,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2967,
											"end": 3083,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 2967,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3115,
											"end": 3119,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3110,
											"end": 3113,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3106,
											"end": 3120,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3092,
											"end": 3120,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3092,
											"end": 3120,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2807,
											"end": 3126,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2807,
											"end": 3126,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2807,
											"end": 3126,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2807,
											"end": 3126,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2807,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3132,
											"end": 3280,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 3132,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3237,
											"end": 3241,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3273,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3267,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3252,
											"end": 3274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3252,
											"end": 3274,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3132,
											"end": 3280,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3132,
											"end": 3280,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3132,
											"end": 3280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3132,
											"end": 3280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3380,
											"end": 4392,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 3380,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3569,
											"end": 3572,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3598,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 3598,
											"end": 3687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3598,
											"end": 3687,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 3598,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3703,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 3817,
											"end": 3823,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3812,
											"end": 3815,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3703,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 3703,
											"end": 3824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3703,
											"end": 3824,
											"name": "tag",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 3703,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3696,
											"end": 3824,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3696,
											"end": 3824,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 3933,
											"end": 3938,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 3848,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 3939,
											"name": "tag",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 3848,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3962,
											"end": 3969,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4367,
											"name": "tag",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 3978,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4000,
											"end": 4001,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3997,
											"end": 4010,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3978,
											"end": 4367,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3978,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 3978,
											"end": 4367,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4079,
											"end": 4085,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4073,
											"end": 4086,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4106,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 4235,
											"end": 4238,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4220,
											"end": 4233,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4106,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 4106,
											"end": 4239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4106,
											"end": 4239,
											"name": "tag",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 4106,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4099,
											"end": 4239,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 4099,
											"end": 4239,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 4350,
											"end": 4356,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 4262,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4262,
											"end": 4357,
											"name": "tag",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 4262,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4252,
											"end": 4357,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4252,
											"end": 4357,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4038,
											"end": 4367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4025,
											"end": 4026,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4013,
											"end": 4027,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4013,
											"end": 4027,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3978,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 3978,
											"end": 4367,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3978,
											"end": 4367,
											"name": "tag",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 3978,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3982,
											"end": 3996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4383,
											"end": 4386,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4376,
											"end": 4386,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4376,
											"end": 4386,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3574,
											"end": 4392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3574,
											"end": 4392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3574,
											"end": 4392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3380,
											"end": 4392,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3380,
											"end": 4392,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3380,
											"end": 4392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3380,
											"end": 4392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3380,
											"end": 4392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4398,
											"end": 4911,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4611,
											"end": 4615,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4651,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4638,
											"end": 4647,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4634,
											"end": 4652,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4626,
											"end": 4652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4692,
											"end": 4696,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4688,
											"end": 4708,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4684,
											"end": 4685,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4682,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4669,
											"end": 4686,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4662,
											"end": 4709,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4726,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4890,
											"end": 4896,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4726,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 4726,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4726,
											"end": 4904,
											"name": "tag",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 4726,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4718,
											"end": 4904,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4718,
											"end": 4904,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4398,
											"end": 4911,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4398,
											"end": 4911,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4398,
											"end": 4911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4398,
											"end": 4911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4398,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4992,
											"name": "tag",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 4917,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 4985,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4967,
											"end": 4986,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4967,
											"end": 4986,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4992,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4917,
											"end": 4992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4998,
											"end": 5115,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 4998,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5107,
											"end": 5108,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5097,
											"end": 5109,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5121,
											"end": 5238,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 5121,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5366,
											"name": "tag",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 5244,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5317,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 5335,
											"end": 5340,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5317,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 5317,
											"end": 5341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5317,
											"end": 5341,
											"name": "tag",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 5317,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5310,
											"end": 5315,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5307,
											"end": 5342,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 5297,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 5297,
											"end": 5360,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5356,
											"end": 5357,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 5354,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5346,
											"end": 5358,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5297,
											"end": 5360,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 5297,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5366,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5372,
											"end": 5511,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 5372,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5418,
											"end": 5423,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5462,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5443,
											"end": 5463,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5434,
											"end": 5463,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5434,
											"end": 5463,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5472,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 5499,
											"end": 5504,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5472,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "444"
										},
										{
											"begin": 5472,
											"end": 5505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5472,
											"end": 5505,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 5472,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5372,
											"end": 5511,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5372,
											"end": 5511,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5372,
											"end": 5511,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5372,
											"end": 5511,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5372,
											"end": 5511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5846,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 5517,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5576,
											"end": 5582,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5627,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5613,
											"end": 5622,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5600,
											"end": 5623,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5596,
											"end": 5628,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5593,
											"end": 5712,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5593,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 5593,
											"end": 5712,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5631,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 5631,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 5631,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5631,
											"end": 5710,
											"name": "tag",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 5631,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5593,
											"end": 5712,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 5593,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5751,
											"end": 5752,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 5821,
											"end": 5828,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5812,
											"end": 5818,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5801,
											"end": 5810,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5797,
											"end": 5819,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5776,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 5776,
											"end": 5829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5776,
											"end": 5829,
											"name": "tag",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 5776,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5766,
											"end": 5829,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5766,
											"end": 5829,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5846,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5846,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5846,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5846,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5517,
											"end": 5846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5852,
											"end": 5998,
											"name": "tag",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 5852,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5985,
											"end": 5990,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5979,
											"end": 5991,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5969,
											"end": 5991,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5969,
											"end": 5991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5852,
											"end": 5998,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5852,
											"end": 5998,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5852,
											"end": 5998,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5852,
											"end": 5998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6004,
											"end": 6220,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 6004,
											"end": 6220,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6135,
											"end": 6146,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6175,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6164,
											"end": 6167,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6157,
											"end": 6176,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6209,
											"end": 6213,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6207,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6200,
											"end": 6214,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6185,
											"end": 6214,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6185,
											"end": 6214,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6004,
											"end": 6220,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6004,
											"end": 6220,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6004,
											"end": 6220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6004,
											"end": 6220,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6004,
											"end": 6220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6390,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 6226,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6351,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6378,
											"end": 6382,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6373,
											"end": 6376,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6369,
											"end": 6383,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6361,
											"end": 6383,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6361,
											"end": 6383,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6390,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6390,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6390,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6226,
											"end": 6390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6480,
											"end": 7692,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 6480,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6631,
											"end": 6635,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 6626,
											"end": 6629,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6622,
											"end": 6636,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6721,
											"end": 6725,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6719,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6710,
											"end": 6726,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6704,
											"end": 6727,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6740,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6792,
											"end": 6795,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6788,
											"end": 6802,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6774,
											"end": 6786,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6740,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 6740,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6740,
											"end": 6803,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 6740,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6646,
											"end": 6813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6898,
											"end": 6902,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6891,
											"end": 6896,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6887,
											"end": 6903,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6881,
											"end": 6904,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6917,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 6974,
											"end": 6978,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6969,
											"end": 6972,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6965,
											"end": 6979,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6917,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 6917,
											"end": 6980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6917,
											"end": 6980,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 6917,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6823,
											"end": 6990,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7066,
											"end": 7071,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7062,
											"end": 7078,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7056,
											"end": 7079,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7092,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7144,
											"end": 7147,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7140,
											"end": 7154,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7126,
											"end": 7138,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7092,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 7092,
											"end": 7155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7092,
											"end": 7155,
											"name": "tag",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 7092,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7000,
											"end": 7165,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7249,
											"end": 7253,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 7242,
											"end": 7247,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7238,
											"end": 7254,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7232,
											"end": 7255,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7268,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 7325,
											"end": 7329,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 7320,
											"end": 7323,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7316,
											"end": 7330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7302,
											"end": 7314,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7268,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 7268,
											"end": 7331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7268,
											"end": 7331,
											"name": "tag",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 7268,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7175,
											"end": 7341,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7421,
											"end": 7425,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 7414,
											"end": 7419,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7410,
											"end": 7426,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7404,
											"end": 7427,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7440,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 7497,
											"end": 7501,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 7492,
											"end": 7495,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7488,
											"end": 7502,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7474,
											"end": 7486,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7440,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 7440,
											"end": 7503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7440,
											"end": 7503,
											"name": "tag",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 7440,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7351,
											"end": 7513,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 7586,
											"end": 7591,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7582,
											"end": 7598,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7576,
											"end": 7599,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7612,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 7669,
											"end": 7673,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 7664,
											"end": 7667,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7660,
											"end": 7674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7612,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 7612,
											"end": 7675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7612,
											"end": 7675,
											"name": "tag",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 7612,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7523,
											"end": 7685,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6600,
											"end": 7692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6480,
											"end": 7692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6480,
											"end": 7692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6480,
											"end": 7692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7698,
											"end": 8005,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 7698,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7831,
											"end": 7841,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 7958,
											"end": 7961,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7950,
											"end": 7956,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7852,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 7852,
											"end": 7962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7852,
											"end": 7962,
											"name": "tag",
											"source": 15,
											"value": "566"
										},
										{
											"begin": 7852,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7994,
											"end": 7998,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 7989,
											"end": 7992,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7971,
											"end": 7999,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7698,
											"end": 8005,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7698,
											"end": 8005,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7698,
											"end": 8005,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7698,
											"end": 8005,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7698,
											"end": 8005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8011,
											"end": 8156,
											"name": "tag",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 8011,
											"end": 8156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8113,
											"end": 8117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8145,
											"end": 8149,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8140,
											"end": 8143,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8150,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8128,
											"end": 8150,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8128,
											"end": 8150,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8011,
											"end": 8156,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8011,
											"end": 8156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8011,
											"end": 8156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8011,
											"end": 8156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8250,
											"end": 9238,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 8250,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8433,
											"end": 8436,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8462,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 8542,
											"end": 8547,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8462,
											"end": 8548,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 8462,
											"end": 8548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8462,
											"end": 8548,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 8462,
											"end": 8548,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8564,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 8675,
											"end": 8681,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8670,
											"end": 8673,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8564,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 8564,
											"end": 8682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8564,
											"end": 8682,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 8564,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8557,
											"end": 8682,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8557,
											"end": 8682,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8706,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 8788,
											"end": 8793,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8706,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 8706,
											"end": 8794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8706,
											"end": 8794,
											"name": "tag",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 8706,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8817,
											"end": 8824,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8848,
											"end": 8849,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8833,
											"end": 9213,
											"name": "tag",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 8833,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8858,
											"end": 8864,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8855,
											"end": 8856,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8852,
											"end": 8865,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 8833,
											"end": 9213,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8833,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 8833,
											"end": 9213,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8934,
											"end": 8940,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8928,
											"end": 8941,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8961,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 9084,
											"end": 9087,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9069,
											"end": 9082,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8961,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 8961,
											"end": 9088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8961,
											"end": 9088,
											"name": "tag",
											"source": 15,
											"value": "575"
										},
										{
											"begin": 8961,
											"end": 9088,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9088,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 8954,
											"end": 9088,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9111,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9111,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 9111,
											"end": 9203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9111,
											"end": 9203,
											"name": "tag",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 9111,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9101,
											"end": 9203,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9101,
											"end": 9203,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8893,
											"end": 9213,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8880,
											"end": 8881,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 8877,
											"end": 8878,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8873,
											"end": 8882,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8868,
											"end": 8882,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8868,
											"end": 8882,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8833,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 8833,
											"end": 9213,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8833,
											"end": 9213,
											"name": "tag",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 8833,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8837,
											"end": 8851,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9229,
											"end": 9232,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9222,
											"end": 9232,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9222,
											"end": 9232,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8438,
											"end": 9238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8438,
											"end": 9238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8438,
											"end": 9238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8250,
											"end": 9238,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8250,
											"end": 9238,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8250,
											"end": 9238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8250,
											"end": 9238,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8250,
											"end": 9238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9244,
											"end": 9745,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 9244,
											"end": 9745,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9451,
											"end": 9455,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9489,
											"end": 9491,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9478,
											"end": 9487,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9466,
											"end": 9492,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9466,
											"end": 9492,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9532,
											"end": 9536,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9524,
											"end": 9525,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9513,
											"end": 9522,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9509,
											"end": 9526,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9502,
											"end": 9549,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9566,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 9733,
											"end": 9737,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9724,
											"end": 9730,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9566,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 9566,
											"end": 9738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9566,
											"end": 9738,
											"name": "tag",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 9566,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9558,
											"end": 9738,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9558,
											"end": 9738,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9244,
											"end": 9745,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9244,
											"end": 9745,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9244,
											"end": 9745,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9244,
											"end": 9745,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9244,
											"end": 9745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9751,
											"end": 9873,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 9751,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9824,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 9842,
											"end": 9847,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9824,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 9824,
											"end": 9848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9824,
											"end": 9848,
											"name": "tag",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 9824,
											"end": 9848,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9817,
											"end": 9822,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9814,
											"end": 9849,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 9804,
											"end": 9867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 9804,
											"end": 9867,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9860,
											"end": 9861,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9853,
											"end": 9865,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9804,
											"end": 9867,
											"name": "tag",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 9804,
											"end": 9867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9751,
											"end": 9873,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9751,
											"end": 9873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9879,
											"end": 10018,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 9879,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9925,
											"end": 9930,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9950,
											"end": 9970,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9941,
											"end": 9970,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9941,
											"end": 9970,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 10006,
											"end": 10011,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 10012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 9979,
											"end": 10012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 10012,
											"name": "tag",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 9979,
											"end": 10012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9879,
											"end": 10018,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9879,
											"end": 10018,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9879,
											"end": 10018,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9879,
											"end": 10018,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9879,
											"end": 10018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10024,
											"end": 10353,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 10024,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10132,
											"end": 10134,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10120,
											"end": 10129,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10111,
											"end": 10118,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10107,
											"end": 10130,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10100,
											"end": 10219,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10100,
											"end": 10219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 10100,
											"end": 10219,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10138,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 10138,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 10138,
											"end": 10217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10138,
											"end": 10217,
											"name": "tag",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 10138,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10100,
											"end": 10219,
											"name": "tag",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 10100,
											"end": 10219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10258,
											"end": 10259,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10283,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 10328,
											"end": 10335,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10319,
											"end": 10325,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10308,
											"end": 10317,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10283,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 10283,
											"end": 10336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10283,
											"end": 10336,
											"name": "tag",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 10283,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10273,
											"end": 10336,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10273,
											"end": 10336,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10229,
											"end": 10346,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10024,
											"end": 10353,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10024,
											"end": 10353,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10024,
											"end": 10353,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10024,
											"end": 10353,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10024,
											"end": 10353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10359,
											"end": 10445,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 10359,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10394,
											"end": 10401,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10434,
											"end": 10438,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 10427,
											"end": 10432,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10423,
											"end": 10439,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 10412,
											"end": 10439,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10412,
											"end": 10439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10359,
											"end": 10445,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10359,
											"end": 10445,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10359,
											"end": 10445,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10359,
											"end": 10445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10569,
											"name": "tag",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 10451,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10522,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 10538,
											"end": 10543,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10522,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 10522,
											"end": 10544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10522,
											"end": 10544,
											"name": "tag",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 10522,
											"end": 10544,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10515,
											"end": 10520,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10512,
											"end": 10545,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 10502,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 10502,
											"end": 10563,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10557,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10549,
											"end": 10561,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10502,
											"end": 10563,
											"name": "tag",
											"source": 15,
											"value": "591"
										},
										{
											"begin": 10502,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10451,
											"end": 10569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10575,
											"end": 10710,
											"name": "tag",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 10575,
											"end": 10710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10619,
											"end": 10624,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10657,
											"end": 10663,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10644,
											"end": 10664,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10635,
											"end": 10664,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10635,
											"end": 10664,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10673,
											"end": 10704,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 10698,
											"end": 10703,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10673,
											"end": 10704,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 10673,
											"end": 10704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10673,
											"end": 10704,
											"name": "tag",
											"source": 15,
											"value": "593"
										},
										{
											"begin": 10673,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10575,
											"end": 10710,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10575,
											"end": 10710,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10575,
											"end": 10710,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10575,
											"end": 10710,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10575,
											"end": 10710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10716,
											"end": 11041,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 10716,
											"end": 11041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10773,
											"end": 10779,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10822,
											"end": 10824,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10810,
											"end": 10819,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10801,
											"end": 10808,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10797,
											"end": 10820,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10793,
											"end": 10825,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10790,
											"end": 10909,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10790,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 10790,
											"end": 10909,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10828,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 10828,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 10828,
											"end": 10907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10828,
											"end": 10907,
											"name": "tag",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 10828,
											"end": 10907,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10790,
											"end": 10909,
											"name": "tag",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 10790,
											"end": 10909,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10948,
											"end": 10949,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10973,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 11016,
											"end": 11023,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11007,
											"end": 11013,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10996,
											"end": 11005,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10992,
											"end": 11014,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10973,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 10973,
											"end": 11024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10973,
											"end": 11024,
											"name": "tag",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 10973,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10963,
											"end": 11024,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10963,
											"end": 11024,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10919,
											"end": 11034,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10716,
											"end": 11041,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10716,
											"end": 11041,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10716,
											"end": 11041,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10716,
											"end": 11041,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10716,
											"end": 11041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11047,
											"end": 11156,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 11047,
											"end": 11156,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11128,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 11143,
											"end": 11148,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11128,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 11128,
											"end": 11149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11128,
											"end": 11149,
											"name": "tag",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 11128,
											"end": 11149,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11123,
											"end": 11126,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11116,
											"end": 11150,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11047,
											"end": 11156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11047,
											"end": 11156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11047,
											"end": 11156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11162,
											"end": 11372,
											"name": "tag",
											"source": 15,
											"value": "70"
										},
										{
											"begin": 11162,
											"end": 11372,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11249,
											"end": 11253,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11287,
											"end": 11289,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11276,
											"end": 11285,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11272,
											"end": 11290,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11264,
											"end": 11290,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11264,
											"end": 11290,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11300,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 11362,
											"end": 11363,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11351,
											"end": 11360,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11347,
											"end": 11364,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11338,
											"end": 11344,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11300,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 11300,
											"end": 11365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11300,
											"end": 11365,
											"name": "tag",
											"source": 15,
											"value": "601"
										},
										{
											"begin": 11300,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11162,
											"end": 11372,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11162,
											"end": 11372,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11162,
											"end": 11372,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11162,
											"end": 11372,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11162,
											"end": 11372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11378,
											"end": 11482,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 11378,
											"end": 11482,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11452,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 11470,
											"end": 11475,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11452,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 11452,
											"end": 11476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11452,
											"end": 11476,
											"name": "tag",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 11452,
											"end": 11476,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11441,
											"end": 11476,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11441,
											"end": 11476,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11378,
											"end": 11482,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11378,
											"end": 11482,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11378,
											"end": 11482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11378,
											"end": 11482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11488,
											"end": 11626,
											"name": "tag",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 11488,
											"end": 11626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11569,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 11595,
											"end": 11600,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11569,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 11569,
											"end": 11601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11569,
											"end": 11601,
											"name": "tag",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 11569,
											"end": 11601,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11562,
											"end": 11567,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11559,
											"end": 11602,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 11549,
											"end": 11620,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 11549,
											"end": 11620,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11616,
											"end": 11617,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11613,
											"end": 11614,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11606,
											"end": 11618,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11549,
											"end": 11620,
											"name": "tag",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 11549,
											"end": 11620,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11488,
											"end": 11626,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11488,
											"end": 11626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11632,
											"end": 11787,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 11632,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11686,
											"end": 11691,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11724,
											"end": 11730,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11711,
											"end": 11731,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 11731,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11702,
											"end": 11731,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11740,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 11775,
											"end": 11780,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11740,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 11740,
											"end": 11781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11740,
											"end": 11781,
											"name": "tag",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 11740,
											"end": 11781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11632,
											"end": 11787,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11632,
											"end": 11787,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11632,
											"end": 11787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11632,
											"end": 11787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11632,
											"end": 11787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11793,
											"end": 11915,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 11793,
											"end": 11915,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11866,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 11884,
											"end": 11889,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11866,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 11866,
											"end": 11890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11866,
											"end": 11890,
											"name": "tag",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 11866,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11859,
											"end": 11864,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11856,
											"end": 11891,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 11846,
											"end": 11909,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 11846,
											"end": 11909,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11905,
											"end": 11906,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11902,
											"end": 11903,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11895,
											"end": 11907,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11846,
											"end": 11909,
											"name": "tag",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 11846,
											"end": 11909,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11793,
											"end": 11915,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11793,
											"end": 11915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11921,
											"end": 12060,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 11921,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11967,
											"end": 11972,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12005,
											"end": 12011,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11992,
											"end": 12012,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11983,
											"end": 12012,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11983,
											"end": 12012,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12021,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 12048,
											"end": 12053,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12021,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 12021,
											"end": 12054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12021,
											"end": 12054,
											"name": "tag",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 12021,
											"end": 12054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11921,
											"end": 12060,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11921,
											"end": 12060,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11921,
											"end": 12060,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11921,
											"end": 12060,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11921,
											"end": 12060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12066,
											"end": 12556,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 12066,
											"end": 12556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12142,
											"end": 12148,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12150,
											"end": 12156,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12199,
											"end": 12201,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12187,
											"end": 12196,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12178,
											"end": 12185,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12174,
											"end": 12197,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12170,
											"end": 12202,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12167,
											"end": 12286,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12167,
											"end": 12286,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 12167,
											"end": 12286,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12205,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 12205,
											"end": 12284,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 12205,
											"end": 12284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12205,
											"end": 12284,
											"name": "tag",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 12205,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12167,
											"end": 12286,
											"name": "tag",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 12167,
											"end": 12286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12325,
											"end": 12326,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12350,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "617"
										},
										{
											"begin": 12403,
											"end": 12410,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12394,
											"end": 12400,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12383,
											"end": 12392,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12401,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12350,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 12350,
											"end": 12411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12350,
											"end": 12411,
											"name": "tag",
											"source": 15,
											"value": "617"
										},
										{
											"begin": 12350,
											"end": 12411,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12340,
											"end": 12411,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12340,
											"end": 12411,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12296,
											"end": 12421,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12460,
											"end": 12462,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12486,
											"end": 12539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "618"
										},
										{
											"begin": 12531,
											"end": 12538,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12522,
											"end": 12528,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12511,
											"end": 12520,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12507,
											"end": 12529,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12486,
											"end": 12539,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 12486,
											"end": 12539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12486,
											"end": 12539,
											"name": "tag",
											"source": 15,
											"value": "618"
										},
										{
											"begin": 12486,
											"end": 12539,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12476,
											"end": 12539,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12476,
											"end": 12539,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12431,
											"end": 12549,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12066,
											"end": 12556,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12066,
											"end": 12556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12066,
											"end": 12556,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12066,
											"end": 12556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12066,
											"end": 12556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12066,
											"end": 12556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12562,
											"end": 12705,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 12562,
											"end": 12705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12658,
											"end": 12664,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12692,
											"end": 12697,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12698,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 12676,
											"end": 12698,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12676,
											"end": 12698,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12562,
											"end": 12705,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12562,
											"end": 12705,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12562,
											"end": 12705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12562,
											"end": 12705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12711,
											"end": 12924,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 12711,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12850,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12873,
											"end": 12879,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12868,
											"end": 12871,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12861,
											"end": 12880,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12913,
											"end": 12917,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12908,
											"end": 12911,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12889,
											"end": 12918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12889,
											"end": 12918,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12711,
											"end": 12924,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12711,
											"end": 12924,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12711,
											"end": 12924,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12711,
											"end": 12924,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12711,
											"end": 12924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12930,
											"end": 13091,
											"name": "tag",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 12930,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13026,
											"end": 13030,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13049,
											"end": 13052,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13041,
											"end": 13052,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13041,
											"end": 13052,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13079,
											"end": 13083,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13074,
											"end": 13077,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13070,
											"end": 13084,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13062,
											"end": 13084,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13062,
											"end": 13084,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12930,
											"end": 13091,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12930,
											"end": 13091,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12930,
											"end": 13091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12930,
											"end": 13091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13175,
											"end": 13847,
											"name": "tag",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 13175,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13320,
											"end": 13324,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 13315,
											"end": 13318,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13311,
											"end": 13325,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13407,
											"end": 13411,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13400,
											"end": 13405,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13396,
											"end": 13412,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13390,
											"end": 13413,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13426,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 13483,
											"end": 13487,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13478,
											"end": 13481,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13474,
											"end": 13488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13460,
											"end": 13472,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13426,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 13426,
											"end": 13489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13426,
											"end": 13489,
											"name": "tag",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 13426,
											"end": 13489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13335,
											"end": 13499,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13582,
											"end": 13586,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13575,
											"end": 13580,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13571,
											"end": 13587,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13565,
											"end": 13588,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13601,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 13652,
											"end": 13656,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13647,
											"end": 13650,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13643,
											"end": 13657,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13629,
											"end": 13641,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13601,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "435"
										},
										{
											"begin": 13601,
											"end": 13658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13601,
											"end": 13658,
											"name": "tag",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 13601,
											"end": 13658,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13509,
											"end": 13668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13748,
											"end": 13752,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13741,
											"end": 13746,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13737,
											"end": 13753,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13731,
											"end": 13754,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13767,
											"end": 13830,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 13824,
											"end": 13828,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13819,
											"end": 13822,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13815,
											"end": 13829,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13801,
											"end": 13813,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13767,
											"end": 13830,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 13767,
											"end": 13830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13767,
											"end": 13830,
											"name": "tag",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 13767,
											"end": 13830,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13678,
											"end": 13840,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13289,
											"end": 13847,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13175,
											"end": 13847,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13175,
											"end": 13847,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13175,
											"end": 13847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13853,
											"end": 14148,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 13853,
											"end": 14148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13980,
											"end": 13990,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "627"
										},
										{
											"begin": 14101,
											"end": 14104,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14093,
											"end": 14099,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14001,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "467"
										},
										{
											"begin": 14001,
											"end": 14105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14001,
											"end": 14105,
											"name": "tag",
											"source": 15,
											"value": "627"
										},
										{
											"begin": 14001,
											"end": 14105,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14137,
											"end": 14141,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 14132,
											"end": 14135,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14128,
											"end": 14142,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14114,
											"end": 14142,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14114,
											"end": 14142,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13853,
											"end": 14148,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13853,
											"end": 14148,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13853,
											"end": 14148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13853,
											"end": 14148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13853,
											"end": 14148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14154,
											"end": 14296,
											"name": "tag",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 14154,
											"end": 14296,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14253,
											"end": 14257,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14285,
											"end": 14289,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14280,
											"end": 14283,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14276,
											"end": 14290,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14268,
											"end": 14290,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14268,
											"end": 14290,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14154,
											"end": 14296,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14154,
											"end": 14296,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14154,
											"end": 14296,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14154,
											"end": 14296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14384,
											"end": 15348,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 14384,
											"end": 15348,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14561,
											"end": 14564,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14590,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 14667,
											"end": 14672,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14590,
											"end": 14673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 14590,
											"end": 14673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14590,
											"end": 14673,
											"name": "tag",
											"source": 15,
											"value": "630"
										},
										{
											"begin": 14590,
											"end": 14673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14689,
											"end": 14804,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "631"
										},
										{
											"begin": 14797,
											"end": 14803,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14792,
											"end": 14795,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14689,
											"end": 14804,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 14689,
											"end": 14804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14689,
											"end": 14804,
											"name": "tag",
											"source": 15,
											"value": "631"
										},
										{
											"begin": 14689,
											"end": 14804,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14682,
											"end": 14804,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14682,
											"end": 14804,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14828,
											"end": 14913,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "632"
										},
										{
											"begin": 14907,
											"end": 14912,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14828,
											"end": 14913,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 14828,
											"end": 14913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14828,
											"end": 14913,
											"name": "tag",
											"source": 15,
											"value": "632"
										},
										{
											"begin": 14828,
											"end": 14913,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14936,
											"end": 14943,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 14967,
											"end": 14968,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14952,
											"end": 15323,
											"name": "tag",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 14952,
											"end": 15323,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14977,
											"end": 14983,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14974,
											"end": 14975,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14971,
											"end": 14984,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 14952,
											"end": 15323,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14952,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 14952,
											"end": 15323,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15053,
											"end": 15059,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15047,
											"end": 15060,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15080,
											"end": 15201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 15197,
											"end": 15200,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 15182,
											"end": 15195,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15080,
											"end": 15201,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 15080,
											"end": 15201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15080,
											"end": 15201,
											"name": "tag",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 15080,
											"end": 15201,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15073,
											"end": 15201,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 15073,
											"end": 15201,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15224,
											"end": 15313,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "637"
										},
										{
											"begin": 15306,
											"end": 15312,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15224,
											"end": 15313,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 15224,
											"end": 15313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15224,
											"end": 15313,
											"name": "tag",
											"source": 15,
											"value": "637"
										},
										{
											"begin": 15224,
											"end": 15313,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15214,
											"end": 15313,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15214,
											"end": 15313,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15012,
											"end": 15323,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14999,
											"end": 15000,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 14996,
											"end": 14997,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14992,
											"end": 15001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14987,
											"end": 15001,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14987,
											"end": 15001,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14952,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 14952,
											"end": 15323,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14952,
											"end": 15323,
											"name": "tag",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 14952,
											"end": 15323,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14956,
											"end": 14970,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15339,
											"end": 15342,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15332,
											"end": 15342,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 15332,
											"end": 15342,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14566,
											"end": 15348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14566,
											"end": 15348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14566,
											"end": 15348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14384,
											"end": 15348,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14384,
											"end": 15348,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14384,
											"end": 15348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14384,
											"end": 15348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14384,
											"end": 15348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15354,
											"end": 15843,
											"name": "tag",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 15354,
											"end": 15843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15555,
											"end": 15559,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15593,
											"end": 15595,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15582,
											"end": 15591,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15578,
											"end": 15596,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15570,
											"end": 15596,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15570,
											"end": 15596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15642,
											"end": 15651,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15636,
											"end": 15640,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15632,
											"end": 15652,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15628,
											"end": 15629,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15626,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15613,
											"end": 15630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15606,
											"end": 15653,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15670,
											"end": 15836,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "639"
										},
										{
											"begin": 15831,
											"end": 15835,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15822,
											"end": 15828,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15670,
											"end": 15836,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 15670,
											"end": 15836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15670,
											"end": 15836,
											"name": "tag",
											"source": 15,
											"value": "639"
										},
										{
											"begin": 15670,
											"end": 15836,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15662,
											"end": 15836,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15662,
											"end": 15836,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15354,
											"end": 15843,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15354,
											"end": 15843,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15354,
											"end": 15843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15354,
											"end": 15843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15354,
											"end": 15843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15849,
											"end": 15967,
											"name": "tag",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 15849,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15936,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 15954,
											"end": 15959,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15936,
											"end": 15960,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 15936,
											"end": 15960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15936,
											"end": 15960,
											"name": "tag",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 15936,
											"end": 15960,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15931,
											"end": 15934,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15924,
											"end": 15961,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15849,
											"end": 15967,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15849,
											"end": 15967,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15849,
											"end": 15967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15973,
											"end": 16091,
											"name": "tag",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 15973,
											"end": 16091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16060,
											"end": 16084,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "643"
										},
										{
											"begin": 16078,
											"end": 16083,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16060,
											"end": 16084,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 16060,
											"end": 16084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16060,
											"end": 16084,
											"name": "tag",
											"source": 15,
											"value": "643"
										},
										{
											"begin": 16060,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16055,
											"end": 16058,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16048,
											"end": 16085,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15973,
											"end": 16091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15973,
											"end": 16091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15973,
											"end": 16091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16872,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 16097,
											"end": 16872,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16330,
											"end": 16334,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16368,
											"end": 16371,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 16357,
											"end": 16366,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16353,
											"end": 16372,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16345,
											"end": 16372,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16345,
											"end": 16372,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16382,
											"end": 16453,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 16450,
											"end": 16451,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16439,
											"end": 16448,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16435,
											"end": 16452,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16426,
											"end": 16432,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 16382,
											"end": 16453,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 16382,
											"end": 16453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16382,
											"end": 16453,
											"name": "tag",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 16382,
											"end": 16453,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16463,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 16531,
											"end": 16533,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16520,
											"end": 16529,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16516,
											"end": 16534,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16507,
											"end": 16513,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 16463,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 16463,
											"end": 16535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16463,
											"end": 16535,
											"name": "tag",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 16463,
											"end": 16535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "647"
										},
										{
											"begin": 16613,
											"end": 16615,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16602,
											"end": 16611,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16598,
											"end": 16616,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16589,
											"end": 16595,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 16545,
											"end": 16617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16617,
											"name": "tag",
											"source": 15,
											"value": "647"
										},
										{
											"begin": 16545,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16627,
											"end": 16699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 16695,
											"end": 16697,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16684,
											"end": 16693,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16680,
											"end": 16698,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16671,
											"end": 16677,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16627,
											"end": 16699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 16627,
											"end": 16699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16627,
											"end": 16699,
											"name": "tag",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 16627,
											"end": 16699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16709,
											"end": 16782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "649"
										},
										{
											"begin": 16777,
											"end": 16780,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 16766,
											"end": 16775,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16762,
											"end": 16781,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16753,
											"end": 16759,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16709,
											"end": 16782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 16709,
											"end": 16782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16709,
											"end": 16782,
											"name": "tag",
											"source": 15,
											"value": "649"
										},
										{
											"begin": 16709,
											"end": 16782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16792,
											"end": 16865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 16860,
											"end": 16863,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 16849,
											"end": 16858,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16845,
											"end": 16864,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16836,
											"end": 16842,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16792,
											"end": 16865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 16792,
											"end": 16865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16792,
											"end": 16865,
											"name": "tag",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 16792,
											"end": 16865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16872,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16872,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16097,
											"end": 16872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16878,
											"end": 17100,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 16878,
											"end": 17100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16971,
											"end": 16975,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17009,
											"end": 17011,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16998,
											"end": 17007,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16994,
											"end": 17012,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16986,
											"end": 17012,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16986,
											"end": 17012,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17022,
											"end": 17093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 17090,
											"end": 17091,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17079,
											"end": 17088,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17075,
											"end": 17092,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17066,
											"end": 17072,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17022,
											"end": 17093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 17022,
											"end": 17093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17022,
											"end": 17093,
											"name": "tag",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 17022,
											"end": 17093,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16878,
											"end": 17100,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16878,
											"end": 17100,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16878,
											"end": 17100,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16878,
											"end": 17100,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16878,
											"end": 17100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17106,
											"end": 17222,
											"name": "tag",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 17106,
											"end": 17222,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17176,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 17191,
											"end": 17196,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17176,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 17176,
											"end": 17197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17176,
											"end": 17197,
											"name": "tag",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 17176,
											"end": 17197,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17169,
											"end": 17174,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17166,
											"end": 17198,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 17156,
											"end": 17216,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "655"
										},
										{
											"begin": 17156,
											"end": 17216,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17212,
											"end": 17213,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17209,
											"end": 17210,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17202,
											"end": 17214,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 17156,
											"end": 17216,
											"name": "tag",
											"source": 15,
											"value": "655"
										},
										{
											"begin": 17156,
											"end": 17216,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17106,
											"end": 17222,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17106,
											"end": 17222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17228,
											"end": 17361,
											"name": "tag",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 17228,
											"end": 17361,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17271,
											"end": 17276,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17309,
											"end": 17315,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17296,
											"end": 17316,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 17287,
											"end": 17316,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17287,
											"end": 17316,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17325,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "657"
										},
										{
											"begin": 17349,
											"end": 17354,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17325,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 17325,
											"end": 17355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17325,
											"end": 17355,
											"name": "tag",
											"source": 15,
											"value": "657"
										},
										{
											"begin": 17325,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17228,
											"end": 17361,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17228,
											"end": 17361,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17228,
											"end": 17361,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17228,
											"end": 17361,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17228,
											"end": 17361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17367,
											"end": 17980,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 17367,
											"end": 17980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17441,
											"end": 17447,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17449,
											"end": 17455,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17457,
											"end": 17463,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17506,
											"end": 17508,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 17494,
											"end": 17503,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17485,
											"end": 17492,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 17481,
											"end": 17504,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 17477,
											"end": 17509,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 17474,
											"end": 17593,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17474,
											"end": 17593,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 17474,
											"end": 17593,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17512,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 17512,
											"end": 17591,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 17512,
											"end": 17591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17512,
											"end": 17591,
											"name": "tag",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 17512,
											"end": 17591,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17474,
											"end": 17593,
											"name": "tag",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 17474,
											"end": 17593,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17632,
											"end": 17633,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17657,
											"end": 17710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 17702,
											"end": 17709,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 17693,
											"end": 17699,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17682,
											"end": 17691,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17678,
											"end": 17700,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17657,
											"end": 17710,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 17657,
											"end": 17710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17657,
											"end": 17710,
											"name": "tag",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 17657,
											"end": 17710,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17647,
											"end": 17710,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 17647,
											"end": 17710,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17603,
											"end": 17720,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17759,
											"end": 17761,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17785,
											"end": 17838,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 17830,
											"end": 17837,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 17821,
											"end": 17827,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17810,
											"end": 17819,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17806,
											"end": 17828,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17785,
											"end": 17838,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 17785,
											"end": 17838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17785,
											"end": 17838,
											"name": "tag",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 17785,
											"end": 17838,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17775,
											"end": 17838,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17775,
											"end": 17838,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17730,
											"end": 17848,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17887,
											"end": 17889,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17913,
											"end": 17963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 17955,
											"end": 17962,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 17946,
											"end": 17952,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17935,
											"end": 17944,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17931,
											"end": 17953,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17913,
											"end": 17963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 17913,
											"end": 17963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17913,
											"end": 17963,
											"name": "tag",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 17913,
											"end": 17963,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17903,
											"end": 17963,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17903,
											"end": 17963,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17858,
											"end": 17973,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17367,
											"end": 17980,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17367,
											"end": 17980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17367,
											"end": 17980,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17367,
											"end": 17980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17367,
											"end": 17980,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17367,
											"end": 17980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17986,
											"end": 18460,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 17986,
											"end": 18460,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18054,
											"end": 18060,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18062,
											"end": 18068,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18111,
											"end": 18113,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 18099,
											"end": 18108,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18090,
											"end": 18097,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18086,
											"end": 18109,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 18082,
											"end": 18114,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 18079,
											"end": 18198,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18079,
											"end": 18198,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "665"
										},
										{
											"begin": 18079,
											"end": 18198,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18117,
											"end": 18196,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "666"
										},
										{
											"begin": 18117,
											"end": 18196,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 18117,
											"end": 18196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18117,
											"end": 18196,
											"name": "tag",
											"source": 15,
											"value": "666"
										},
										{
											"begin": 18117,
											"end": 18196,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18079,
											"end": 18198,
											"name": "tag",
											"source": 15,
											"value": "665"
										},
										{
											"begin": 18079,
											"end": 18198,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18237,
											"end": 18238,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18262,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 18307,
											"end": 18314,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18298,
											"end": 18304,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18287,
											"end": 18296,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 18283,
											"end": 18305,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18262,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 18262,
											"end": 18315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18262,
											"end": 18315,
											"name": "tag",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 18262,
											"end": 18315,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18252,
											"end": 18315,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18252,
											"end": 18315,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18208,
											"end": 18325,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18364,
											"end": 18366,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18390,
											"end": 18443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "668"
										},
										{
											"begin": 18435,
											"end": 18442,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18426,
											"end": 18432,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18415,
											"end": 18424,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 18411,
											"end": 18433,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18390,
											"end": 18443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 18390,
											"end": 18443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18390,
											"end": 18443,
											"name": "tag",
											"source": 15,
											"value": "668"
										},
										{
											"begin": 18390,
											"end": 18443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18380,
											"end": 18443,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18380,
											"end": 18443,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18335,
											"end": 18453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17986,
											"end": 18460,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17986,
											"end": 18460,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17986,
											"end": 18460,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17986,
											"end": 18460,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17986,
											"end": 18460,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17986,
											"end": 18460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18466,
											"end": 18583,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 18466,
											"end": 18583,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18575,
											"end": 18576,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18572,
											"end": 18573,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18565,
											"end": 18577,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 18589,
											"end": 18706,
											"name": "tag",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 18589,
											"end": 18706,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18698,
											"end": 18699,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18695,
											"end": 18696,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18688,
											"end": 18700,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 18712,
											"end": 18814,
											"name": "tag",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 18712,
											"end": 18814,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18753,
											"end": 18759,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18804,
											"end": 18806,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 18800,
											"end": 18807,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 18795,
											"end": 18797,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 18788,
											"end": 18793,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18784,
											"end": 18798,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18780,
											"end": 18808,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 18770,
											"end": 18808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18770,
											"end": 18808,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18712,
											"end": 18814,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18712,
											"end": 18814,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18712,
											"end": 18814,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18712,
											"end": 18814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18820,
											"end": 19000,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 18820,
											"end": 19000,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18868,
											"end": 18945,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18865,
											"end": 18866,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18858,
											"end": 18946,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18965,
											"end": 18969,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 18962,
											"end": 18963,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 18955,
											"end": 18970,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18989,
											"end": 18993,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18986,
											"end": 18987,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18979,
											"end": 18994,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 19006,
											"end": 19287,
											"name": "tag",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 19006,
											"end": 19287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19089,
											"end": 19116,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 19111,
											"end": 19115,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19089,
											"end": 19116,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 19089,
											"end": 19116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19089,
											"end": 19116,
											"name": "tag",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 19089,
											"end": 19116,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19081,
											"end": 19087,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19077,
											"end": 19117,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19219,
											"end": 19225,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19207,
											"end": 19217,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19204,
											"end": 19226,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 19183,
											"end": 19201,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19171,
											"end": 19181,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19168,
											"end": 19202,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 19165,
											"end": 19227,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 19162,
											"end": 19250,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 19162,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "675"
										},
										{
											"begin": 19162,
											"end": 19250,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19230,
											"end": 19248,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "676"
										},
										{
											"begin": 19230,
											"end": 19248,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 19230,
											"end": 19248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19230,
											"end": 19248,
											"name": "tag",
											"source": 15,
											"value": "676"
										},
										{
											"begin": 19230,
											"end": 19248,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19162,
											"end": 19250,
											"name": "tag",
											"source": 15,
											"value": "675"
										},
										{
											"begin": 19162,
											"end": 19250,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19270,
											"end": 19280,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19266,
											"end": 19268,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 19259,
											"end": 19281,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19049,
											"end": 19287,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19006,
											"end": 19287,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19006,
											"end": 19287,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19006,
											"end": 19287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19293,
											"end": 19422,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 19293,
											"end": 19422,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19327,
											"end": 19333,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19354,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "678"
										},
										{
											"begin": 19354,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "441"
										},
										{
											"begin": 19354,
											"end": 19374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19354,
											"end": 19374,
											"name": "tag",
											"source": 15,
											"value": "678"
										},
										{
											"begin": 19354,
											"end": 19374,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19344,
											"end": 19374,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19344,
											"end": 19374,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19383,
											"end": 19416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 19411,
											"end": 19415,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19403,
											"end": 19409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19383,
											"end": 19416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 19383,
											"end": 19416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19383,
											"end": 19416,
											"name": "tag",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 19383,
											"end": 19416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19293,
											"end": 19422,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19293,
											"end": 19422,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19293,
											"end": 19422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19293,
											"end": 19422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19428,
											"end": 19735,
											"name": "tag",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 19428,
											"end": 19735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19489,
											"end": 19493,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19579,
											"end": 19597,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19571,
											"end": 19577,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19568,
											"end": 19598,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 19565,
											"end": 19621,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 19565,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "681"
										},
										{
											"begin": 19565,
											"end": 19621,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "682"
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 19601,
											"end": 19619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "tag",
											"source": 15,
											"value": "682"
										},
										{
											"begin": 19601,
											"end": 19619,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19565,
											"end": 19621,
											"name": "tag",
											"source": 15,
											"value": "681"
										},
										{
											"begin": 19565,
											"end": 19621,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19639,
											"end": 19668,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 19661,
											"end": 19667,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19639,
											"end": 19668,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 19639,
											"end": 19668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19639,
											"end": 19668,
											"name": "tag",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 19639,
											"end": 19668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19631,
											"end": 19668,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19631,
											"end": 19668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19723,
											"end": 19727,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19717,
											"end": 19721,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19713,
											"end": 19728,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19705,
											"end": 19728,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19705,
											"end": 19728,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19428,
											"end": 19735,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19428,
											"end": 19735,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19428,
											"end": 19735,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19428,
											"end": 19735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19741,
											"end": 19887,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 19741,
											"end": 19887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19838,
											"end": 19844,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19833,
											"end": 19836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19828,
											"end": 19831,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19815,
											"end": 19845,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 19879,
											"end": 19880,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19870,
											"end": 19876,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19865,
											"end": 19868,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19861,
											"end": 19877,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19854,
											"end": 19881,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19741,
											"end": 19887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19741,
											"end": 19887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19741,
											"end": 19887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19741,
											"end": 19887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19893,
											"end": 20316,
											"name": "tag",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 19893,
											"end": 20316,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19970,
											"end": 19975,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19995,
											"end": 20060,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 20011,
											"end": 20059,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "687"
										},
										{
											"begin": 20052,
											"end": 20058,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20011,
											"end": 20059,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "480"
										},
										{
											"begin": 20011,
											"end": 20059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20011,
											"end": 20059,
											"name": "tag",
											"source": 15,
											"value": "687"
										},
										{
											"begin": 20011,
											"end": 20059,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19995,
											"end": 20060,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 19995,
											"end": 20060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19995,
											"end": 20060,
											"name": "tag",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 19995,
											"end": 20060,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19986,
											"end": 20060,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19986,
											"end": 20060,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20083,
											"end": 20089,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20076,
											"end": 20081,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20069,
											"end": 20090,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20121,
											"end": 20125,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20114,
											"end": 20119,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20110,
											"end": 20126,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20159,
											"end": 20162,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20150,
											"end": 20156,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20145,
											"end": 20148,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20141,
											"end": 20157,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20138,
											"end": 20163,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 20135,
											"end": 20247,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20135,
											"end": 20247,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "688"
										},
										{
											"begin": 20135,
											"end": 20247,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20166,
											"end": 20245,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "689"
										},
										{
											"begin": 20166,
											"end": 20245,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 20166,
											"end": 20245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20166,
											"end": 20245,
											"name": "tag",
											"source": 15,
											"value": "689"
										},
										{
											"begin": 20166,
											"end": 20245,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20135,
											"end": 20247,
											"name": "tag",
											"source": 15,
											"value": "688"
										},
										{
											"begin": 20135,
											"end": 20247,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20256,
											"end": 20310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 20303,
											"end": 20309,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20298,
											"end": 20301,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20293,
											"end": 20296,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20256,
											"end": 20310,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 20256,
											"end": 20310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20256,
											"end": 20310,
											"name": "tag",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 20256,
											"end": 20310,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19976,
											"end": 20316,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19893,
											"end": 20316,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 19893,
											"end": 20316,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19893,
											"end": 20316,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19893,
											"end": 20316,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19893,
											"end": 20316,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19893,
											"end": 20316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20335,
											"end": 20673,
											"name": "tag",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 20335,
											"end": 20673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20390,
											"end": 20395,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20439,
											"end": 20442,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20432,
											"end": 20436,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 20424,
											"end": 20430,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20420,
											"end": 20437,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20416,
											"end": 20443,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 20406,
											"end": 20528,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "692"
										},
										{
											"begin": 20406,
											"end": 20528,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20447,
											"end": 20526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 20447,
											"end": 20526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 20447,
											"end": 20526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20447,
											"end": 20526,
											"name": "tag",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 20447,
											"end": 20526,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20406,
											"end": 20528,
											"name": "tag",
											"source": 15,
											"value": "692"
										},
										{
											"begin": 20406,
											"end": 20528,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20564,
											"end": 20570,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20551,
											"end": 20571,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 20589,
											"end": 20667,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "694"
										},
										{
											"begin": 20663,
											"end": 20666,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20655,
											"end": 20661,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20648,
											"end": 20652,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20640,
											"end": 20646,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 20636,
											"end": 20653,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20589,
											"end": 20667,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 20589,
											"end": 20667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20589,
											"end": 20667,
											"name": "tag",
											"source": 15,
											"value": "694"
										},
										{
											"begin": 20589,
											"end": 20667,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20580,
											"end": 20667,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20580,
											"end": 20667,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20396,
											"end": 20673,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20335,
											"end": 20673,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20335,
											"end": 20673,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20335,
											"end": 20673,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20335,
											"end": 20673,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20335,
											"end": 20673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20679,
											"end": 21908,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 20679,
											"end": 21908,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20789,
											"end": 20795,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20797,
											"end": 20803,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 20805,
											"end": 20811,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20813,
											"end": 20819,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 20821,
											"end": 20827,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20829,
											"end": 20835,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 20878,
											"end": 20881,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 20866,
											"end": 20875,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 20857,
											"end": 20864,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20853,
											"end": 20876,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 20849,
											"end": 20882,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 20846,
											"end": 20966,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20846,
											"end": 20966,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "696"
										},
										{
											"begin": 20846,
											"end": 20966,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 20964,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "697"
										},
										{
											"begin": 20885,
											"end": 20964,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 20885,
											"end": 20964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 20964,
											"name": "tag",
											"source": 15,
											"value": "697"
										},
										{
											"begin": 20885,
											"end": 20964,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20846,
											"end": 20966,
											"name": "tag",
											"source": 15,
											"value": "696"
										},
										{
											"begin": 20846,
											"end": 20966,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21005,
											"end": 21006,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21030,
											"end": 21083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "698"
										},
										{
											"begin": 21075,
											"end": 21082,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 21066,
											"end": 21072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21055,
											"end": 21064,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 21051,
											"end": 21073,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21030,
											"end": 21083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 21030,
											"end": 21083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21030,
											"end": 21083,
											"name": "tag",
											"source": 15,
											"value": "698"
										},
										{
											"begin": 21030,
											"end": 21083,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21020,
											"end": 21083,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 21020,
											"end": 21083,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20976,
											"end": 21093,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21132,
											"end": 21134,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21158,
											"end": 21211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "699"
										},
										{
											"begin": 21203,
											"end": 21210,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 21194,
											"end": 21200,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21183,
											"end": 21192,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 21179,
											"end": 21201,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21158,
											"end": 21211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 21158,
											"end": 21211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21158,
											"end": 21211,
											"name": "tag",
											"source": 15,
											"value": "699"
										},
										{
											"begin": 21158,
											"end": 21211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21148,
											"end": 21211,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 21148,
											"end": 21211,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21103,
											"end": 21221,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21260,
											"end": 21262,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 21286,
											"end": 21339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 21331,
											"end": 21338,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 21322,
											"end": 21328,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21311,
											"end": 21320,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 21307,
											"end": 21329,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21286,
											"end": 21339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 21286,
											"end": 21339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21286,
											"end": 21339,
											"name": "tag",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 21286,
											"end": 21339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21276,
											"end": 21339,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 21276,
											"end": 21339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21231,
											"end": 21349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21388,
											"end": 21390,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 21414,
											"end": 21464,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "701"
										},
										{
											"begin": 21456,
											"end": 21463,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 21447,
											"end": 21453,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21436,
											"end": 21445,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 21432,
											"end": 21454,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21414,
											"end": 21464,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "474"
										},
										{
											"begin": 21414,
											"end": 21464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21414,
											"end": 21464,
											"name": "tag",
											"source": 15,
											"value": "701"
										},
										{
											"begin": 21414,
											"end": 21464,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21404,
											"end": 21464,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 21404,
											"end": 21464,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21359,
											"end": 21474,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21541,
											"end": 21544,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 21530,
											"end": 21539,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 21526,
											"end": 21545,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21513,
											"end": 21546,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 21573,
											"end": 21591,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21565,
											"end": 21571,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21562,
											"end": 21592,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 21559,
											"end": 21676,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 21559,
											"end": 21676,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "702"
										},
										{
											"begin": 21559,
											"end": 21676,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 21595,
											"end": 21674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "703"
										},
										{
											"begin": 21595,
											"end": 21674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 21595,
											"end": 21674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21595,
											"end": 21674,
											"name": "tag",
											"source": 15,
											"value": "703"
										},
										{
											"begin": 21595,
											"end": 21674,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21559,
											"end": 21676,
											"name": "tag",
											"source": 15,
											"value": "702"
										},
										{
											"begin": 21559,
											"end": 21676,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21700,
											"end": 21762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "704"
										},
										{
											"begin": 21754,
											"end": 21761,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 21745,
											"end": 21751,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21734,
											"end": 21743,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 21730,
											"end": 21752,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21700,
											"end": 21762,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 21700,
											"end": 21762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21700,
											"end": 21762,
											"name": "tag",
											"source": 15,
											"value": "704"
										},
										{
											"begin": 21700,
											"end": 21762,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21690,
											"end": 21762,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21690,
											"end": 21762,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21484,
											"end": 21772,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21811,
											"end": 21814,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 21838,
											"end": 21891,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "705"
										},
										{
											"begin": 21883,
											"end": 21890,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 21874,
											"end": 21880,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21863,
											"end": 21872,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 21859,
											"end": 21881,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21838,
											"end": 21891,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 21838,
											"end": 21891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21838,
											"end": 21891,
											"name": "tag",
											"source": 15,
											"value": "705"
										},
										{
											"begin": 21838,
											"end": 21891,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21828,
											"end": 21891,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21828,
											"end": 21891,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21782,
											"end": 21901,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20679,
											"end": 21908,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20679,
											"end": 21908,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 20679,
											"end": 21908,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20679,
											"end": 21908,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20679,
											"end": 21908,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 20679,
											"end": 21908,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20679,
											"end": 21908,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20679,
											"end": 21908,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 20679,
											"end": 21908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21914,
											"end": 22136,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 21914,
											"end": 22136,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22007,
											"end": 22011,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22045,
											"end": 22047,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22034,
											"end": 22043,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22030,
											"end": 22048,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22022,
											"end": 22048,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22022,
											"end": 22048,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22058,
											"end": 22129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "707"
										},
										{
											"begin": 22126,
											"end": 22127,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22115,
											"end": 22124,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22111,
											"end": 22128,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22102,
											"end": 22108,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22058,
											"end": 22129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 22058,
											"end": 22129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22058,
											"end": 22129,
											"name": "tag",
											"source": 15,
											"value": "707"
										},
										{
											"begin": 22058,
											"end": 22129,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21914,
											"end": 22136,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21914,
											"end": 22136,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21914,
											"end": 22136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21914,
											"end": 22136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21914,
											"end": 22136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22142,
											"end": 22572,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 22142,
											"end": 22572,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22285,
											"end": 22289,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22323,
											"end": 22325,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 22312,
											"end": 22321,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22308,
											"end": 22326,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22300,
											"end": 22326,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22300,
											"end": 22326,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22336,
											"end": 22407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "709"
										},
										{
											"begin": 22404,
											"end": 22405,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22393,
											"end": 22402,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22389,
											"end": 22406,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22380,
											"end": 22386,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 22336,
											"end": 22407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 22336,
											"end": 22407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22336,
											"end": 22407,
											"name": "tag",
											"source": 15,
											"value": "709"
										},
										{
											"begin": 22336,
											"end": 22407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22417,
											"end": 22483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "710"
										},
										{
											"begin": 22479,
											"end": 22481,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22468,
											"end": 22477,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22464,
											"end": 22482,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22455,
											"end": 22461,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22417,
											"end": 22483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 22417,
											"end": 22483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22417,
											"end": 22483,
											"name": "tag",
											"source": 15,
											"value": "710"
										},
										{
											"begin": 22417,
											"end": 22483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22493,
											"end": 22565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "711"
										},
										{
											"begin": 22561,
											"end": 22563,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 22550,
											"end": 22559,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22546,
											"end": 22564,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22537,
											"end": 22543,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22493,
											"end": 22565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 22493,
											"end": 22565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22493,
											"end": 22565,
											"name": "tag",
											"source": 15,
											"value": "711"
										},
										{
											"begin": 22493,
											"end": 22565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22142,
											"end": 22572,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 22142,
											"end": 22572,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 22142,
											"end": 22572,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22142,
											"end": 22572,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22142,
											"end": 22572,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22142,
											"end": 22572,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22142,
											"end": 22572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22578,
											"end": 22758,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 22578,
											"end": 22758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22626,
											"end": 22703,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22623,
											"end": 22624,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22616,
											"end": 22704,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22723,
											"end": 22727,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 22720,
											"end": 22721,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 22713,
											"end": 22728,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22747,
											"end": 22751,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 22744,
											"end": 22745,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22737,
											"end": 22752,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 22764,
											"end": 22955,
											"name": "tag",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 22764,
											"end": 22955,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22804,
											"end": 22807,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22823,
											"end": 22843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "714"
										},
										{
											"begin": 22841,
											"end": 22842,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22823,
											"end": 22843,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 22823,
											"end": 22843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22823,
											"end": 22843,
											"name": "tag",
											"source": 15,
											"value": "714"
										},
										{
											"begin": 22823,
											"end": 22843,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22818,
											"end": 22843,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22818,
											"end": 22843,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22857,
											"end": 22877,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "715"
										},
										{
											"begin": 22875,
											"end": 22876,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22857,
											"end": 22877,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 22857,
											"end": 22877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22857,
											"end": 22877,
											"name": "tag",
											"source": 15,
											"value": "715"
										},
										{
											"begin": 22857,
											"end": 22877,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22852,
											"end": 22877,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 22852,
											"end": 22877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22900,
											"end": 22901,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22897,
											"end": 22898,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22893,
											"end": 22902,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22886,
											"end": 22902,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22886,
											"end": 22902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22921,
											"end": 22924,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 22918,
											"end": 22919,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22915,
											"end": 22925,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 22912,
											"end": 22948,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 22912,
											"end": 22948,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "716"
										},
										{
											"begin": 22912,
											"end": 22948,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 22928,
											"end": 22946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "717"
										},
										{
											"begin": 22928,
											"end": 22946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 22928,
											"end": 22946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22928,
											"end": 22946,
											"name": "tag",
											"source": 15,
											"value": "717"
										},
										{
											"begin": 22928,
											"end": 22946,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22912,
											"end": 22948,
											"name": "tag",
											"source": 15,
											"value": "716"
										},
										{
											"begin": 22912,
											"end": 22948,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22764,
											"end": 22955,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 22764,
											"end": 22955,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22764,
											"end": 22955,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22764,
											"end": 22955,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22764,
											"end": 22955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22961,
											"end": 23141,
											"name": "tag",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 22961,
											"end": 23141,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23009,
											"end": 23086,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23006,
											"end": 23007,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22999,
											"end": 23087,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23106,
											"end": 23110,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 23103,
											"end": 23104,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 23096,
											"end": 23111,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23130,
											"end": 23134,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 23127,
											"end": 23128,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23120,
											"end": 23135,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 23147,
											"end": 23294,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 23147,
											"end": 23294,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23248,
											"end": 23259,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23285,
											"end": 23288,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23270,
											"end": 23288,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23147,
											"end": 23294,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23147,
											"end": 23294,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23147,
											"end": 23294,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23147,
											"end": 23294,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23147,
											"end": 23294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23300,
											"end": 23414,
											"name": "tag",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 23300,
											"end": 23414,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23300,
											"end": 23414,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23300,
											"end": 23414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23420,
											"end": 23818,
											"name": "tag",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 23420,
											"end": 23818,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23579,
											"end": 23582,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23600,
											"end": 23683,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "722"
										},
										{
											"begin": 23681,
											"end": 23682,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23676,
											"end": 23679,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23600,
											"end": 23683,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 23600,
											"end": 23683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23600,
											"end": 23683,
											"name": "tag",
											"source": 15,
											"value": "722"
										},
										{
											"begin": 23600,
											"end": 23683,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23593,
											"end": 23683,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23593,
											"end": 23683,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23692,
											"end": 23785,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "723"
										},
										{
											"begin": 23781,
											"end": 23784,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23692,
											"end": 23785,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 23692,
											"end": 23785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23692,
											"end": 23785,
											"name": "tag",
											"source": 15,
											"value": "723"
										},
										{
											"begin": 23692,
											"end": 23785,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23810,
											"end": 23811,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23805,
											"end": 23808,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23801,
											"end": 23812,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23794,
											"end": 23812,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23794,
											"end": 23812,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23420,
											"end": 23818,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23420,
											"end": 23818,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23420,
											"end": 23818,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23420,
											"end": 23818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23824,
											"end": 24203,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 23824,
											"end": 24203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24008,
											"end": 24011,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24030,
											"end": 24177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "725"
										},
										{
											"begin": 24173,
											"end": 24176,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24030,
											"end": 24177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 24030,
											"end": 24177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24030,
											"end": 24177,
											"name": "tag",
											"source": 15,
											"value": "725"
										},
										{
											"begin": 24030,
											"end": 24177,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24023,
											"end": 24177,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24023,
											"end": 24177,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24194,
											"end": 24197,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 24187,
											"end": 24197,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24187,
											"end": 24197,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23824,
											"end": 24203,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23824,
											"end": 24203,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23824,
											"end": 24203,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23824,
											"end": 24203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24209,
											"end": 24378,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 24209,
											"end": 24378,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24293,
											"end": 24304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24327,
											"end": 24333,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24322,
											"end": 24325,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24315,
											"end": 24334,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24367,
											"end": 24371,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24362,
											"end": 24365,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24358,
											"end": 24372,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24343,
											"end": 24372,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24343,
											"end": 24372,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24209,
											"end": 24378,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 24209,
											"end": 24378,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24209,
											"end": 24378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24209,
											"end": 24378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24209,
											"end": 24378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24384,
											"end": 24540,
											"name": "tag",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 24384,
											"end": 24540,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24524,
											"end": 24532,
											"name": "PUSH",
											"source": 15,
											"value": "4661696C65640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24520,
											"end": 24521,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24512,
											"end": 24518,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24508,
											"end": 24522,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24501,
											"end": 24533,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24384,
											"end": 24540,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24384,
											"end": 24540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24546,
											"end": 24911,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 24546,
											"end": 24911,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24688,
											"end": 24691,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24709,
											"end": 24775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 24773,
											"end": 24774,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 24768,
											"end": 24771,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24709,
											"end": 24775,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 24709,
											"end": 24775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24709,
											"end": 24775,
											"name": "tag",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 24709,
											"end": 24775,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24702,
											"end": 24775,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24702,
											"end": 24775,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24784,
											"end": 24877,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "730"
										},
										{
											"begin": 24873,
											"end": 24876,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24784,
											"end": 24877,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 24784,
											"end": 24877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24784,
											"end": 24877,
											"name": "tag",
											"source": 15,
											"value": "730"
										},
										{
											"begin": 24784,
											"end": 24877,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24902,
											"end": 24904,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24897,
											"end": 24900,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24893,
											"end": 24905,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24886,
											"end": 24905,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24886,
											"end": 24905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24546,
											"end": 24911,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24546,
											"end": 24911,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24546,
											"end": 24911,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24546,
											"end": 24911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24917,
											"end": 25336,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 24917,
											"end": 25336,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25083,
											"end": 25087,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25121,
											"end": 25123,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25110,
											"end": 25119,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25106,
											"end": 25124,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25098,
											"end": 25124,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25098,
											"end": 25124,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25170,
											"end": 25179,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25164,
											"end": 25168,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25160,
											"end": 25180,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 25156,
											"end": 25157,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25145,
											"end": 25154,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25141,
											"end": 25158,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25134,
											"end": 25181,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25198,
											"end": 25329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "732"
										},
										{
											"begin": 25324,
											"end": 25328,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25198,
											"end": 25329,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 25198,
											"end": 25329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25198,
											"end": 25329,
											"name": "tag",
											"source": 15,
											"value": "732"
										},
										{
											"begin": 25198,
											"end": 25329,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25190,
											"end": 25329,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25190,
											"end": 25329,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24917,
											"end": 25336,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24917,
											"end": 25336,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24917,
											"end": 25336,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24917,
											"end": 25336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25342,
											"end": 25575,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 25342,
											"end": 25575,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25381,
											"end": 25384,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25404,
											"end": 25428,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 25422,
											"end": 25427,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25404,
											"end": 25428,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 25404,
											"end": 25428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25404,
											"end": 25428,
											"name": "tag",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 25404,
											"end": 25428,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25395,
											"end": 25428,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25395,
											"end": 25428,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25450,
											"end": 25516,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25443,
											"end": 25448,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25440,
											"end": 25517,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 25437,
											"end": 25540,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "735"
										},
										{
											"begin": 25437,
											"end": 25540,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 25520,
											"end": 25538,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "736"
										},
										{
											"begin": 25520,
											"end": 25538,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 25520,
											"end": 25538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25520,
											"end": 25538,
											"name": "tag",
											"source": 15,
											"value": "736"
										},
										{
											"begin": 25520,
											"end": 25538,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25437,
											"end": 25540,
											"name": "tag",
											"source": 15,
											"value": "735"
										},
										{
											"begin": 25437,
											"end": 25540,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25567,
											"end": 25568,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 25560,
											"end": 25565,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25556,
											"end": 25569,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25549,
											"end": 25569,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25549,
											"end": 25569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25342,
											"end": 25575,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25342,
											"end": 25575,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25342,
											"end": 25575,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25342,
											"end": 25575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25581,
											"end": 25693,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 25581,
											"end": 25693,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25664,
											"end": 25686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "738"
										},
										{
											"begin": 25680,
											"end": 25685,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25664,
											"end": 25686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 25664,
											"end": 25686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25664,
											"end": 25686,
											"name": "tag",
											"source": 15,
											"value": "738"
										},
										{
											"begin": 25664,
											"end": 25686,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25659,
											"end": 25662,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25652,
											"end": 25687,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25581,
											"end": 25693,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25581,
											"end": 25693,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25581,
											"end": 25693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25699,
											"end": 25913,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 25699,
											"end": 25913,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25788,
											"end": 25792,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25826,
											"end": 25828,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25815,
											"end": 25824,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25811,
											"end": 25829,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25803,
											"end": 25829,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25803,
											"end": 25829,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25839,
											"end": 25906,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "740"
										},
										{
											"begin": 25903,
											"end": 25904,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25892,
											"end": 25901,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25888,
											"end": 25905,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25879,
											"end": 25885,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 25839,
											"end": 25906,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 25839,
											"end": 25906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25839,
											"end": 25906,
											"name": "tag",
											"source": 15,
											"value": "740"
										},
										{
											"begin": 25839,
											"end": 25906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25699,
											"end": 25913,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 25699,
											"end": 25913,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25699,
											"end": 25913,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25699,
											"end": 25913,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25699,
											"end": 25913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25919,
											"end": 26251,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 25919,
											"end": 26251,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26040,
											"end": 26044,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26078,
											"end": 26080,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 26067,
											"end": 26076,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26063,
											"end": 26081,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26055,
											"end": 26081,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26055,
											"end": 26081,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26091,
											"end": 26162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "742"
										},
										{
											"begin": 26159,
											"end": 26160,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26148,
											"end": 26157,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26144,
											"end": 26161,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26135,
											"end": 26141,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 26091,
											"end": 26162,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 26091,
											"end": 26162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26091,
											"end": 26162,
											"name": "tag",
											"source": 15,
											"value": "742"
										},
										{
											"begin": 26091,
											"end": 26162,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26172,
											"end": 26244,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "743"
										},
										{
											"begin": 26240,
											"end": 26242,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26229,
											"end": 26238,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26225,
											"end": 26243,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26216,
											"end": 26222,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26172,
											"end": 26244,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 26172,
											"end": 26244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26172,
											"end": 26244,
											"name": "tag",
											"source": 15,
											"value": "743"
										},
										{
											"begin": 26172,
											"end": 26244,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25919,
											"end": 26251,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 25919,
											"end": 26251,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 25919,
											"end": 26251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25919,
											"end": 26251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25919,
											"end": 26251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25919,
											"end": 26251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26257,
											"end": 26667,
											"name": "tag",
											"source": 15,
											"value": "298"
										},
										{
											"begin": 26257,
											"end": 26667,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26297,
											"end": 26304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26320,
											"end": 26340,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "745"
										},
										{
											"begin": 26338,
											"end": 26339,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26320,
											"end": 26340,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 26320,
											"end": 26340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26320,
											"end": 26340,
											"name": "tag",
											"source": 15,
											"value": "745"
										},
										{
											"begin": 26320,
											"end": 26340,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26315,
											"end": 26340,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26315,
											"end": 26340,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26354,
											"end": 26374,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "746"
										},
										{
											"begin": 26372,
											"end": 26373,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26354,
											"end": 26374,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 26354,
											"end": 26374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26354,
											"end": 26374,
											"name": "tag",
											"source": 15,
											"value": "746"
										},
										{
											"begin": 26354,
											"end": 26374,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26349,
											"end": 26374,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 26349,
											"end": 26374,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26409,
											"end": 26410,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26406,
											"end": 26407,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26402,
											"end": 26411,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 26431,
											"end": 26461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "747"
										},
										{
											"begin": 26449,
											"end": 26460,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26431,
											"end": 26461,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 26431,
											"end": 26461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26431,
											"end": 26461,
											"name": "tag",
											"source": 15,
											"value": "747"
										},
										{
											"begin": 26431,
											"end": 26461,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26420,
											"end": 26461,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26420,
											"end": 26461,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26610,
											"end": 26611,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26601,
											"end": 26608,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26597,
											"end": 26612,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 26594,
											"end": 26595,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26591,
											"end": 26613,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 26571,
											"end": 26572,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26564,
											"end": 26573,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 26544,
											"end": 26627,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 26521,
											"end": 26660,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "748"
										},
										{
											"begin": 26521,
											"end": 26660,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 26640,
											"end": 26658,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "749"
										},
										{
											"begin": 26640,
											"end": 26658,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 26640,
											"end": 26658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26640,
											"end": 26658,
											"name": "tag",
											"source": 15,
											"value": "749"
										},
										{
											"begin": 26640,
											"end": 26658,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26521,
											"end": 26660,
											"name": "tag",
											"source": 15,
											"value": "748"
										},
										{
											"begin": 26521,
											"end": 26660,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26305,
											"end": 26667,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26257,
											"end": 26667,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 26257,
											"end": 26667,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26257,
											"end": 26667,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26257,
											"end": 26667,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26257,
											"end": 26667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26673,
											"end": 26853,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 26673,
											"end": 26853,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26721,
											"end": 26798,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26718,
											"end": 26719,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26711,
											"end": 26799,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26818,
											"end": 26822,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 26815,
											"end": 26816,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 26808,
											"end": 26823,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26842,
											"end": 26846,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 26839,
											"end": 26840,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26832,
											"end": 26847,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 26859,
											"end": 27044,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 26859,
											"end": 27044,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26899,
											"end": 26900,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26916,
											"end": 26936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "752"
										},
										{
											"begin": 26934,
											"end": 26935,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26916,
											"end": 26936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 26916,
											"end": 26936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26916,
											"end": 26936,
											"name": "tag",
											"source": 15,
											"value": "752"
										},
										{
											"begin": 26916,
											"end": 26936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26911,
											"end": 26936,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26911,
											"end": 26936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26950,
											"end": 26970,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "753"
										},
										{
											"begin": 26968,
											"end": 26969,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26950,
											"end": 26970,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 26950,
											"end": 26970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26950,
											"end": 26970,
											"name": "tag",
											"source": 15,
											"value": "753"
										},
										{
											"begin": 26950,
											"end": 26970,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26945,
											"end": 26970,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 26945,
											"end": 26970,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26989,
											"end": 26990,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26979,
											"end": 27014,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "754"
										},
										{
											"begin": 26979,
											"end": 27014,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 26994,
											"end": 27012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "755"
										},
										{
											"begin": 26994,
											"end": 27012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 26994,
											"end": 27012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26994,
											"end": 27012,
											"name": "tag",
											"source": 15,
											"value": "755"
										},
										{
											"begin": 26994,
											"end": 27012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26979,
											"end": 27014,
											"name": "tag",
											"source": 15,
											"value": "754"
										},
										{
											"begin": 26979,
											"end": 27014,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27036,
											"end": 27037,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27033,
											"end": 27034,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27029,
											"end": 27038,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 27024,
											"end": 27038,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27024,
											"end": 27038,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26859,
											"end": 27044,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 26859,
											"end": 27044,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26859,
											"end": 27044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26859,
											"end": 27044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26859,
											"end": 27044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27050,
											"end": 27241,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 27050,
											"end": 27241,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27088,
											"end": 27092,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27108,
											"end": 27126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "757"
										},
										{
											"begin": 27124,
											"end": 27125,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27108,
											"end": 27126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 27108,
											"end": 27126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27108,
											"end": 27126,
											"name": "tag",
											"source": 15,
											"value": "757"
										},
										{
											"begin": 27108,
											"end": 27126,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27103,
											"end": 27126,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27103,
											"end": 27126,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27140,
											"end": 27158,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "758"
										},
										{
											"begin": 27156,
											"end": 27157,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27140,
											"end": 27158,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 27140,
											"end": 27158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27140,
											"end": 27158,
											"name": "tag",
											"source": 15,
											"value": "758"
										},
										{
											"begin": 27140,
											"end": 27158,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27135,
											"end": 27158,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 27135,
											"end": 27158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27182,
											"end": 27183,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27179,
											"end": 27180,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27175,
											"end": 27184,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 27167,
											"end": 27184,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27167,
											"end": 27184,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27206,
											"end": 27210,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 27200,
											"end": 27204,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27197,
											"end": 27211,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 27194,
											"end": 27234,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 27194,
											"end": 27234,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "759"
										},
										{
											"begin": 27194,
											"end": 27234,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 27214,
											"end": 27232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "760"
										},
										{
											"begin": 27214,
											"end": 27232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 27214,
											"end": 27232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27214,
											"end": 27232,
											"name": "tag",
											"source": 15,
											"value": "760"
										},
										{
											"begin": 27214,
											"end": 27232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27194,
											"end": 27234,
											"name": "tag",
											"source": 15,
											"value": "759"
										},
										{
											"begin": 27194,
											"end": 27234,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27050,
											"end": 27241,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 27050,
											"end": 27241,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27050,
											"end": 27241,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27050,
											"end": 27241,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27050,
											"end": 27241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27247,
											"end": 27469,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 27247,
											"end": 27469,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27387,
											"end": 27421,
											"name": "PUSH",
											"source": 15,
											"value": "4661696C656420746F2073656E6420457468657220746F20746865206D616E61"
										},
										{
											"begin": 27383,
											"end": 27384,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27375,
											"end": 27381,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27371,
											"end": 27385,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27364,
											"end": 27422,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27456,
											"end": 27461,
											"name": "PUSH",
											"source": 15,
											"value": "6765720000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27451,
											"end": 27453,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27443,
											"end": 27449,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27439,
											"end": 27454,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27432,
											"end": 27462,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27247,
											"end": 27469,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27247,
											"end": 27469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27475,
											"end": 27841,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 27475,
											"end": 27841,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27617,
											"end": 27620,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27638,
											"end": 27705,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "763"
										},
										{
											"begin": 27702,
											"end": 27704,
											"name": "PUSH",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 27697,
											"end": 27700,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27638,
											"end": 27705,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 27638,
											"end": 27705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27638,
											"end": 27705,
											"name": "tag",
											"source": 15,
											"value": "763"
										},
										{
											"begin": 27638,
											"end": 27705,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27631,
											"end": 27705,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27631,
											"end": 27705,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27714,
											"end": 27807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "764"
										},
										{
											"begin": 27803,
											"end": 27806,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27714,
											"end": 27807,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 27714,
											"end": 27807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27714,
											"end": 27807,
											"name": "tag",
											"source": 15,
											"value": "764"
										},
										{
											"begin": 27714,
											"end": 27807,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27832,
											"end": 27834,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 27827,
											"end": 27830,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27823,
											"end": 27835,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27816,
											"end": 27835,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27816,
											"end": 27835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27475,
											"end": 27841,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27475,
											"end": 27841,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27475,
											"end": 27841,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27475,
											"end": 27841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27847,
											"end": 28266,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 27847,
											"end": 28266,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28013,
											"end": 28017,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28051,
											"end": 28053,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28040,
											"end": 28049,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28036,
											"end": 28054,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28028,
											"end": 28054,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28028,
											"end": 28054,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28100,
											"end": 28109,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28094,
											"end": 28098,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28090,
											"end": 28110,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28086,
											"end": 28087,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28075,
											"end": 28084,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28071,
											"end": 28088,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28064,
											"end": 28111,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28128,
											"end": 28259,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "766"
										},
										{
											"begin": 28254,
											"end": 28258,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28128,
											"end": 28259,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 28128,
											"end": 28259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28128,
											"end": 28259,
											"name": "tag",
											"source": 15,
											"value": "766"
										},
										{
											"begin": 28128,
											"end": 28259,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28120,
											"end": 28259,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28120,
											"end": 28259,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27847,
											"end": 28266,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27847,
											"end": 28266,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27847,
											"end": 28266,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27847,
											"end": 28266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28272,
											"end": 28415,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 28272,
											"end": 28415,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28329,
											"end": 28334,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28360,
											"end": 28366,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28354,
											"end": 28367,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 28345,
											"end": 28367,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28345,
											"end": 28367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28376,
											"end": 28409,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "768"
										},
										{
											"begin": 28403,
											"end": 28408,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28376,
											"end": 28409,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 28376,
											"end": 28409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28376,
											"end": 28409,
											"name": "tag",
											"source": 15,
											"value": "768"
										},
										{
											"begin": 28376,
											"end": 28409,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28272,
											"end": 28415,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 28272,
											"end": 28415,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28272,
											"end": 28415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28272,
											"end": 28415,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28272,
											"end": 28415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28421,
											"end": 28772,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 28421,
											"end": 28772,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28491,
											"end": 28497,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28540,
											"end": 28542,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28528,
											"end": 28537,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28519,
											"end": 28526,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 28515,
											"end": 28538,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28511,
											"end": 28543,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 28508,
											"end": 28627,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 28508,
											"end": 28627,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "770"
										},
										{
											"begin": 28508,
											"end": 28627,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 28546,
											"end": 28625,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "771"
										},
										{
											"begin": 28546,
											"end": 28625,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 28546,
											"end": 28625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28546,
											"end": 28625,
											"name": "tag",
											"source": 15,
											"value": "771"
										},
										{
											"begin": 28546,
											"end": 28625,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28508,
											"end": 28627,
											"name": "tag",
											"source": 15,
											"value": "770"
										},
										{
											"begin": 28508,
											"end": 28627,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28666,
											"end": 28667,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28691,
											"end": 28755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "772"
										},
										{
											"begin": 28747,
											"end": 28754,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 28738,
											"end": 28744,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28727,
											"end": 28736,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 28723,
											"end": 28745,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28691,
											"end": 28755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 28691,
											"end": 28755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28691,
											"end": 28755,
											"name": "tag",
											"source": 15,
											"value": "772"
										},
										{
											"begin": 28691,
											"end": 28755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28681,
											"end": 28755,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28681,
											"end": 28755,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28637,
											"end": 28765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28421,
											"end": 28772,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 28421,
											"end": 28772,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28421,
											"end": 28772,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28421,
											"end": 28772,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28421,
											"end": 28772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28778,
											"end": 29110,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 28778,
											"end": 29110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28899,
											"end": 28903,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28937,
											"end": 28939,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 28926,
											"end": 28935,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28922,
											"end": 28940,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28914,
											"end": 28940,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28914,
											"end": 28940,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28950,
											"end": 29021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "774"
										},
										{
											"begin": 29018,
											"end": 29019,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29007,
											"end": 29016,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29003,
											"end": 29020,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28994,
											"end": 29000,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 28950,
											"end": 29021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 28950,
											"end": 29021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28950,
											"end": 29021,
											"name": "tag",
											"source": 15,
											"value": "774"
										},
										{
											"begin": 28950,
											"end": 29021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29031,
											"end": 29103,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "775"
										},
										{
											"begin": 29099,
											"end": 29101,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29088,
											"end": 29097,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29084,
											"end": 29102,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29075,
											"end": 29081,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29031,
											"end": 29103,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 29031,
											"end": 29103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29031,
											"end": 29103,
											"name": "tag",
											"source": 15,
											"value": "775"
										},
										{
											"begin": 29031,
											"end": 29103,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28778,
											"end": 29110,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 28778,
											"end": 29110,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 28778,
											"end": 29110,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28778,
											"end": 29110,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28778,
											"end": 29110,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28778,
											"end": 29110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29116,
											"end": 29214,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 29116,
											"end": 29214,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29167,
											"end": 29173,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29201,
											"end": 29206,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29195,
											"end": 29207,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 29185,
											"end": 29207,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29185,
											"end": 29207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29116,
											"end": 29214,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29116,
											"end": 29214,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29116,
											"end": 29214,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29116,
											"end": 29214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29220,
											"end": 29388,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 29220,
											"end": 29388,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29303,
											"end": 29314,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29337,
											"end": 29343,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29332,
											"end": 29335,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29325,
											"end": 29344,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29377,
											"end": 29381,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29372,
											"end": 29375,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29368,
											"end": 29382,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29353,
											"end": 29382,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29353,
											"end": 29382,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29220,
											"end": 29388,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 29220,
											"end": 29388,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29220,
											"end": 29388,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29220,
											"end": 29388,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29220,
											"end": 29388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29394,
											"end": 29640,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 29394,
											"end": 29640,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29475,
											"end": 29476,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29485,
											"end": 29598,
											"name": "tag",
											"source": 15,
											"value": "779"
										},
										{
											"begin": 29485,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29499,
											"end": 29505,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29496,
											"end": 29497,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29493,
											"end": 29506,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 29485,
											"end": 29598,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 29485,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "781"
										},
										{
											"begin": 29485,
											"end": 29598,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 29584,
											"end": 29585,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 29579,
											"end": 29582,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29575,
											"end": 29586,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29569,
											"end": 29587,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 29565,
											"end": 29566,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29560,
											"end": 29563,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29556,
											"end": 29567,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29549,
											"end": 29588,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29521,
											"end": 29523,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29518,
											"end": 29519,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29514,
											"end": 29524,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29509,
											"end": 29524,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29509,
											"end": 29524,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29485,
											"end": 29598,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "779"
										},
										{
											"begin": 29485,
											"end": 29598,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29485,
											"end": 29598,
											"name": "tag",
											"source": 15,
											"value": "781"
										},
										{
											"begin": 29485,
											"end": 29598,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29632,
											"end": 29633,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29623,
											"end": 29629,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29618,
											"end": 29621,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29614,
											"end": 29630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29607,
											"end": 29634,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29456,
											"end": 29640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29394,
											"end": 29640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29394,
											"end": 29640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29394,
											"end": 29640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29394,
											"end": 29640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29646,
											"end": 30019,
											"name": "tag",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 29646,
											"end": 30019,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29732,
											"end": 29735,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29760,
											"end": 29798,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "783"
										},
										{
											"begin": 29792,
											"end": 29797,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29760,
											"end": 29798,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 29760,
											"end": 29798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29760,
											"end": 29798,
											"name": "tag",
											"source": 15,
											"value": "783"
										},
										{
											"begin": 29760,
											"end": 29798,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29814,
											"end": 29884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "784"
										},
										{
											"begin": 29877,
											"end": 29883,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29872,
											"end": 29875,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 29814,
											"end": 29884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 29814,
											"end": 29884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29814,
											"end": 29884,
											"name": "tag",
											"source": 15,
											"value": "784"
										},
										{
											"begin": 29814,
											"end": 29884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29807,
											"end": 29884,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 29807,
											"end": 29884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29893,
											"end": 29958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "785"
										},
										{
											"begin": 29951,
											"end": 29957,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29946,
											"end": 29949,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 29939,
											"end": 29943,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29932,
											"end": 29937,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 29928,
											"end": 29944,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29893,
											"end": 29958,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 29893,
											"end": 29958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29893,
											"end": 29958,
											"name": "tag",
											"source": 15,
											"value": "785"
										},
										{
											"begin": 29893,
											"end": 29958,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29983,
											"end": 30012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "786"
										},
										{
											"begin": 30005,
											"end": 30011,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29983,
											"end": 30012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 29983,
											"end": 30012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29983,
											"end": 30012,
											"name": "tag",
											"source": 15,
											"value": "786"
										},
										{
											"begin": 29983,
											"end": 30012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29978,
											"end": 29981,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29974,
											"end": 30013,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29967,
											"end": 30013,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29967,
											"end": 30013,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29736,
											"end": 30019,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29646,
											"end": 30019,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 29646,
											"end": 30019,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29646,
											"end": 30019,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29646,
											"end": 30019,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29646,
											"end": 30019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30025,
											"end": 30764,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 30025,
											"end": 30764,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30242,
											"end": 30246,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30280,
											"end": 30283,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 30269,
											"end": 30278,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30265,
											"end": 30284,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30257,
											"end": 30284,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30257,
											"end": 30284,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30294,
											"end": 30365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "788"
										},
										{
											"begin": 30362,
											"end": 30363,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30351,
											"end": 30360,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30347,
											"end": 30364,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30338,
											"end": 30344,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 30294,
											"end": 30365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 30294,
											"end": 30365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30294,
											"end": 30365,
											"name": "tag",
											"source": 15,
											"value": "788"
										},
										{
											"begin": 30294,
											"end": 30365,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30375,
											"end": 30447,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "789"
										},
										{
											"begin": 30443,
											"end": 30445,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30432,
											"end": 30441,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30428,
											"end": 30446,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30419,
											"end": 30425,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 30375,
											"end": 30447,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 30375,
											"end": 30447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30375,
											"end": 30447,
											"name": "tag",
											"source": 15,
											"value": "789"
										},
										{
											"begin": 30375,
											"end": 30447,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30457,
											"end": 30529,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "790"
										},
										{
											"begin": 30525,
											"end": 30527,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 30514,
											"end": 30523,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30510,
											"end": 30528,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30501,
											"end": 30507,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 30457,
											"end": 30529,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 30457,
											"end": 30529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30457,
											"end": 30529,
											"name": "tag",
											"source": 15,
											"value": "790"
										},
										{
											"begin": 30457,
											"end": 30529,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30539,
											"end": 30605,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "791"
										},
										{
											"begin": 30601,
											"end": 30603,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 30590,
											"end": 30599,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30586,
											"end": 30604,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30577,
											"end": 30583,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 30539,
											"end": 30605,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 30539,
											"end": 30605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30539,
											"end": 30605,
											"name": "tag",
											"source": 15,
											"value": "791"
										},
										{
											"begin": 30539,
											"end": 30605,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30653,
											"end": 30662,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30647,
											"end": 30651,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30643,
											"end": 30663,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30637,
											"end": 30640,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 30626,
											"end": 30635,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30622,
											"end": 30641,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30615,
											"end": 30664,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 30681,
											"end": 30757,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "792"
										},
										{
											"begin": 30752,
											"end": 30756,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30743,
											"end": 30749,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 30681,
											"end": 30757,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 30681,
											"end": 30757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30681,
											"end": 30757,
											"name": "tag",
											"source": 15,
											"value": "792"
										},
										{
											"begin": 30681,
											"end": 30757,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30673,
											"end": 30757,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30673,
											"end": 30757,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30025,
											"end": 30764,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 30025,
											"end": 30764,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 30025,
											"end": 30764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30025,
											"end": 30764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30025,
											"end": 30764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30025,
											"end": 30764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30025,
											"end": 30764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30025,
											"end": 30764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30025,
											"end": 30764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30770,
											"end": 31212,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 30770,
											"end": 31212,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30919,
											"end": 30923,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30957,
											"end": 30959,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 30946,
											"end": 30955,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30942,
											"end": 30960,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30934,
											"end": 30960,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30934,
											"end": 30960,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30970,
											"end": 31041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "794"
										},
										{
											"begin": 31038,
											"end": 31039,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31027,
											"end": 31036,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31023,
											"end": 31040,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31014,
											"end": 31020,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 30970,
											"end": 31041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 30970,
											"end": 31041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30970,
											"end": 31041,
											"name": "tag",
											"source": 15,
											"value": "794"
										},
										{
											"begin": 30970,
											"end": 31041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31051,
											"end": 31123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "795"
										},
										{
											"begin": 31119,
											"end": 31121,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31108,
											"end": 31117,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31104,
											"end": 31122,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31095,
											"end": 31101,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 31051,
											"end": 31123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 31051,
											"end": 31123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31051,
											"end": 31123,
											"name": "tag",
											"source": 15,
											"value": "795"
										},
										{
											"begin": 31051,
											"end": 31123,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31133,
											"end": 31205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "796"
										},
										{
											"begin": 31201,
											"end": 31203,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 31190,
											"end": 31199,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31186,
											"end": 31204,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31177,
											"end": 31183,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 31133,
											"end": 31205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 31133,
											"end": 31205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31133,
											"end": 31205,
											"name": "tag",
											"source": 15,
											"value": "796"
										},
										{
											"begin": 31133,
											"end": 31205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30770,
											"end": 31212,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 30770,
											"end": 31212,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 30770,
											"end": 31212,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30770,
											"end": 31212,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30770,
											"end": 31212,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30770,
											"end": 31212,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30770,
											"end": 31212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31218,
											"end": 31395,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 31218,
											"end": 31395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31358,
											"end": 31387,
											"name": "PUSH",
											"source": 15,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 31354,
											"end": 31355,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31346,
											"end": 31352,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31342,
											"end": 31356,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31335,
											"end": 31388,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 31218,
											"end": 31395,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31218,
											"end": 31395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31401,
											"end": 31767,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 31401,
											"end": 31767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31543,
											"end": 31546,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31564,
											"end": 31631,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "799"
										},
										{
											"begin": 31628,
											"end": 31630,
											"name": "PUSH",
											"source": 15,
											"value": "1B"
										},
										{
											"begin": 31623,
											"end": 31626,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31564,
											"end": 31631,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 31564,
											"end": 31631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31564,
											"end": 31631,
											"name": "tag",
											"source": 15,
											"value": "799"
										},
										{
											"begin": 31564,
											"end": 31631,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31557,
											"end": 31631,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31557,
											"end": 31631,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31640,
											"end": 31733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "800"
										},
										{
											"begin": 31729,
											"end": 31732,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31640,
											"end": 31733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 31640,
											"end": 31733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31640,
											"end": 31733,
											"name": "tag",
											"source": 15,
											"value": "800"
										},
										{
											"begin": 31640,
											"end": 31733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31758,
											"end": 31760,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31753,
											"end": 31756,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31749,
											"end": 31761,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31742,
											"end": 31761,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31742,
											"end": 31761,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31401,
											"end": 31767,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31401,
											"end": 31767,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31401,
											"end": 31767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31401,
											"end": 31767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31773,
											"end": 32192,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 31773,
											"end": 32192,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31939,
											"end": 31943,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31977,
											"end": 31979,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31966,
											"end": 31975,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31962,
											"end": 31980,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31954,
											"end": 31980,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31954,
											"end": 31980,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32026,
											"end": 32035,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32020,
											"end": 32024,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32016,
											"end": 32036,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32012,
											"end": 32013,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32001,
											"end": 32010,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31997,
											"end": 32014,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31990,
											"end": 32037,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 32054,
											"end": 32185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "802"
										},
										{
											"begin": 32180,
											"end": 32184,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32054,
											"end": 32185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 32054,
											"end": 32185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32054,
											"end": 32185,
											"name": "tag",
											"source": 15,
											"value": "802"
										},
										{
											"begin": 32054,
											"end": 32185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32046,
											"end": 32185,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32046,
											"end": 32185,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31773,
											"end": 32192,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31773,
											"end": 32192,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31773,
											"end": 32192,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31773,
											"end": 32192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
								"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
								"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"DirectDonation.sol",
								"_error.sol",
								"_event.sol",
								"_ownable.sol",
								"_pausable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_donateCounter()": "f7edbbac",
							"_tokenCounter()": "9230b2bc",
							"addToken(address)": "d48bfca7",
							"calcPercentage(uint256,uint256)": "a37b06d4",
							"deleteToken(bytes32)": "f1a3b943",
							"donate(bytes32,address,uint256,bool,bytes,bytes32)": "b2f7c6e0",
							"donation(bytes32)": "75e6e600",
							"getBalance()": "12065fe0",
							"getDonation(address)": "410a1d32",
							"getDonationByAppId(bytes32)": "cacf11e7",
							"getDonationByToekn(bytes32)": "3d496362",
							"getDonationList()": "443910e0",
							"getToken(address)": "59770438",
							"getTokenList()": "273cbaa0",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"token(bytes32)": "e6062e1a",
							"transferBalance(address,uint256)": "56a6d9ef",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateToken(bytes32,address,bool)": "95a7a953",
							"updateToken(uint8)": "4df71212",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"authorizedAmount\",\"type\":\"uint256\"}],\"name\":\"NotAuthorizedAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_appId\",\"type\":\"bytes32\"}],\"name\":\"Donated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"TokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"fee\",\"type\":\"uint8\"}],\"name\":\"feeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_donateCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bps\",\"type\":\"uint256\"}],\"name\":\"calcPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_tokenId\",\"type\":\"bytes32\"}],\"name\":\"deleteToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_appId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_tokenId\",\"type\":\"bytes32\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"donation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"donator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"appId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donator\",\"type\":\"address\"}],\"name\":\"getDonation\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"donator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"appId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dt\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectDonation.DonationStruct[]\",\"name\":\"list\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_appId\",\"type\":\"bytes32\"}],\"name\":\"getDonationByAppId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"donator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"appId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dt\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectDonation.DonationStruct[]\",\"name\":\"list\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_tokenId\",\"type\":\"bytes32\"}],\"name\":\"getDonationByToekn\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"donator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"appId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dt\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectDonation.DonationStruct[]\",\"name\":\"list\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDonationList\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"donator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"appId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dt\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectDonation.DonationStruct[]\",\"name\":\"list\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getToken\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"dt\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectDonation.TokenStruct[]\",\"name\":\"list\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenList\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"dt\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectDonation.TokenExportStruct[]\",\"name\":\"list\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"dt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_fee\",\"type\":\"uint8\"}],\"name\":\"updateToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"updateToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aratta Labs\",\"custom:emoji\":\"\\ud83d\\udcb8\",\"custom:security-contact\":\"atenyun@gmail.com\",\"details\":\"You will find the deployed contract addresses in the repo\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"calcPercentage(uint256,uint256)\":{\"params\":{\"amount\":\"The total amount\",\"bps\":\"The precentage\"},\"returns\":{\"_0\":\"percentage\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"DirectDonation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToken(address)\":{\"notice\":\"Add a token\"},\"calcPercentage(uint256,uint256)\":{\"notice\":\"calcPercentage percentage\"},\"deleteToken(bytes32)\":{\"notice\":\"Delete a token\"},\"donate(bytes32,address,uint256,bool,bytes,bytes32)\":{\"notice\":\"Donate\"},\"getBalance()\":{\"notice\":\"Return the balance of this contract\"},\"getDonation(address)\":{\"notice\":\"Get donation list, filter by donator\"},\"getDonationByAppId(bytes32)\":{\"notice\":\"Get donation list, filter by tokenId\"},\"getDonationByToekn(bytes32)\":{\"notice\":\"Get donation list, filter by tokenId\"},\"getDonationList()\":{\"notice\":\"Get token list\"},\"getToken(address)\":{\"notice\":\"Get token\"},\"getTokenList()\":{\"notice\":\"Get token list\"},\"pause()\":{\"notice\":\"Pause\"},\"transferBalance(address,uint256)\":{\"notice\":\"Transfer balance from this contract to input address\"},\"unpause()\":{\"notice\":\"Unpause\"},\"updateToken(bytes32,address,bool)\":{\"notice\":\"Update token\"},\"updateToken(uint8)\":{\"notice\":\"Update fee\"},\"withdraw()\":{\"notice\":\"Withdraw the balance from this contract and transfer it to the owner's address\"}},\"notice\":\"Direct donation mechanism\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"DirectDonation.sol\":\"DirectDonation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol\":{\"keccak256\":\"0x1500da59b41e37677458dcc3652bb5a72f58a7920dbc41f6cf60f7beadd6731d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e5bd2b8d469213eae3cd7013dc05b4c37ec183977dddb2b659ab8f9b852d7b26\",\"dweb:/ipfs/QmbNt4JEugWbRRCAge1HCM2j4HExEZzGRsgDmiATZoYvp6\"]},\"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol\":{\"keccak256\":\"0xe809a376f430ba79bf7554b3274617103f1d0434546b2d4fe68019e3079a53d0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f955f4d89c5a99f791af4a3fc7201ba0299627fca221d97a66a562eeb4860c04\",\"dweb:/ipfs/QmcAqBHYFwk6VXevUeSjefFag6EhndrXQP1D4tGjxtgUMT\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x09000342b85b1a06fa1f5b71bdeef7c449cd25799aac14fa9053d8abd18219aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cdab282a9165b685fa86da3bd331c8e319e5a5c64e16599134e738934a77d4\",\"dweb:/ipfs/QmSLcE5FmDqVQbFDB6MzUzuFi4UhJVUQ1A2rT4aJGhpERT\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"DirectDonation.sol\":{\"keccak256\":\"0xf08b9055a1906c600adf2319eaf3b8d1196996d823672730d8279b5bac510b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3905fb62bdea09b7cd9708d8e0250d4c23c50f8cbf93696986f8ed68622b9128\",\"dweb:/ipfs/QmPhVDXsPkcDaDWKhHF6rr5GbHRtyWQx9KeZExeLsNjVYj\"]},\"_error.sol\":{\"keccak256\":\"0x0da2e39c026a579a49b402d002c4fbc63cef3387d0316023077485164dff0af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5df9e397330dd80f1d1137649e5472e6307642f22196f0a465a1b861d1c243\",\"dweb:/ipfs/QmYm4j8zgUoxY79nYSB6RwFX9aWAE1JMeid3soYAsMaDS1\"]},\"_event.sol\":{\"keccak256\":\"0x9ece91a6868fa12c6ffbb94aeee09c79cfb76d036fdc8d6a4c0a9cb1d7328786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88d2eb366d5b69af7867a92c6e0ae07b287d2927b6e11cec966966da54f656e7\",\"dweb:/ipfs/QmXkdJ1uQMrSEoyaQR7vQpqV2iQfBtsYaR71V5AsUKf2e8\"]},\"_ownable.sol\":{\"keccak256\":\"0xd0eb4b66f1088976a798a35ea6f276723448d778c424898ed9a3895dd16e0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7ff7967a53aa14549700c15740d8afa60437287dfbdd386fa338001156afcfd\",\"dweb:/ipfs/QmNqebzo3Jex1uFWNTRh3p185YkVZtt28Rsv1mB2nfBWBw\"]},\"_pausable.sol\":{\"keccak256\":\"0xbcfe48dd83c79dc58f3e692bf0c564ca9732a9782290fbc463b51866075fda5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef18a3571179803f34e036529e8e0249a24aa86f315a6425bff7a12e08a2466a\",\"dweb:/ipfs/QmPcB7VKFa6S4Me9a7cxa8ukA5HZfr86uDyDeDrjJqetqe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2835,
								"contract": "DirectDonation.sol:DirectDonation",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2983,
								"contract": "DirectDonation.sol:DirectDonation",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1831,
								"contract": "DirectDonation.sol:DirectDonation",
								"label": "_donateCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)311_storage"
							},
							{
								"astId": 1834,
								"contract": "DirectDonation.sol:DirectDonation",
								"label": "_tokenCounter",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Counter)311_storage"
							},
							{
								"astId": 1837,
								"contract": "DirectDonation.sol:DirectDonation",
								"label": "fee",
								"offset": 0,
								"slot": "3",
								"type": "t_uint8"
							},
							{
								"astId": 1871,
								"contract": "DirectDonation.sol:DirectDonation",
								"label": "donation",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_bytes32,t_struct(DonationStruct)1850_storage)"
							},
							{
								"astId": 1876,
								"contract": "DirectDonation.sol:DirectDonation",
								"label": "token",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(TokenStruct)1857_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(DonationStruct)1850_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct DirectDonation.DonationStruct)",
								"numberOfBytes": "32",
								"value": "t_struct(DonationStruct)1850_storage"
							},
							"t_mapping(t_bytes32,t_struct(TokenStruct)1857_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct DirectDonation.TokenStruct)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenStruct)1857_storage"
							},
							"t_struct(Counter)311_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 310,
										"contract": "DirectDonation.sol:DirectDonation",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(DonationStruct)1850_storage": {
								"encoding": "inplace",
								"label": "struct DirectDonation.DonationStruct",
								"members": [
									{
										"astId": 1839,
										"contract": "DirectDonation.sol:DirectDonation",
										"label": "donator",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1841,
										"contract": "DirectDonation.sol:DirectDonation",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									},
									{
										"astId": 1843,
										"contract": "DirectDonation.sol:DirectDonation",
										"label": "appId",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 1845,
										"contract": "DirectDonation.sol:DirectDonation",
										"label": "amount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1847,
										"contract": "DirectDonation.sol:DirectDonation",
										"label": "to",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 1849,
										"contract": "DirectDonation.sol:DirectDonation",
										"label": "dt",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(TokenStruct)1857_storage": {
								"encoding": "inplace",
								"label": "struct DirectDonation.TokenStruct",
								"members": [
									{
										"astId": 1852,
										"contract": "DirectDonation.sol:DirectDonation",
										"label": "addr",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1854,
										"contract": "DirectDonation.sol:DirectDonation",
										"label": "pause",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1856,
										"contract": "DirectDonation.sol:DirectDonation",
										"label": "dt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addToken(address)": {
								"notice": "Add a token"
							},
							"calcPercentage(uint256,uint256)": {
								"notice": "calcPercentage percentage"
							},
							"deleteToken(bytes32)": {
								"notice": "Delete a token"
							},
							"donate(bytes32,address,uint256,bool,bytes,bytes32)": {
								"notice": "Donate"
							},
							"getBalance()": {
								"notice": "Return the balance of this contract"
							},
							"getDonation(address)": {
								"notice": "Get donation list, filter by donator"
							},
							"getDonationByAppId(bytes32)": {
								"notice": "Get donation list, filter by tokenId"
							},
							"getDonationByToekn(bytes32)": {
								"notice": "Get donation list, filter by tokenId"
							},
							"getDonationList()": {
								"notice": "Get token list"
							},
							"getToken(address)": {
								"notice": "Get token"
							},
							"getTokenList()": {
								"notice": "Get token list"
							},
							"pause()": {
								"notice": "Pause"
							},
							"transferBalance(address,uint256)": {
								"notice": "Transfer balance from this contract to input address"
							},
							"unpause()": {
								"notice": "Unpause"
							},
							"updateToken(bytes32,address,bool)": {
								"notice": "Update token"
							},
							"updateToken(uint8)": {
								"notice": "Update fee"
							},
							"withdraw()": {
								"notice": "Withdraw the balance from this contract and transfer it to the owner's address"
							}
						},
						"notice": "Direct donation mechanism",
						"version": 1
					}
				}
			},
			"_ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"_ownable.sol\":{\"keccak256\":\"0xd0eb4b66f1088976a798a35ea6f276723448d778c424898ed9a3895dd16e0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7ff7967a53aa14549700c15740d8afa60437287dfbdd386fa338001156afcfd\",\"dweb:/ipfs/QmNqebzo3Jex1uFWNTRh3p185YkVZtt28Rsv1mB2nfBWBw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2835,
								"contract": "_ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"_pausable.sol\":{\"keccak256\":\"0xbcfe48dd83c79dc58f3e692bf0c564ca9732a9782290fbc463b51866075fda5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef18a3571179803f34e036529e8e0249a24aa86f315a6425bff7a12e08a2466a\",\"dweb:/ipfs/QmPcB7VKFa6S4Me9a7cxa8ukA5HZfr86uDyDeDrjJqetqe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2983,
								"contract": "_pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
				"ast": {
					"absolutePath": "@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
					"exportedSymbols": {
						"IERC165": [
							646
						],
						"IERC725Y": [
							50
						]
					},
					"id": 51,
					"license": "CC0-1.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 51,
							"sourceUnit": 647,
							"src": "75:80:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 646,
										"src": "83:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IERC165",
										"nameLocations": [
											"502:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 646,
										"src": "502:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "502:7:0"
								}
							],
							"canonicalName": "IERC725Y",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "157:322:0",
								"text": " @title The interface for ERC725Y sub-standard, a generic data key/value store.\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."
							},
							"fullyImplemented": false,
							"id": 50,
							"linearizedBaseContracts": [
								50,
								646
							],
							"name": "IERC725Y",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "516:373:0",
										"text": " @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."
									},
									"eventSelector": "ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2",
									"id": 13,
									"name": "DataChanged",
									"nameLocation": "900:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "dataKey",
												"nameLocation": "928:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "912:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "dataValue",
												"nameLocation": "943:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "937:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "911:42:0"
									},
									"src": "894:60:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "960:361:0",
										"text": " @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n @param dataKey The data key for which to retrieve the value.\n @return dataValue The bytes value stored under the specified data key."
									},
									"functionSelector": "54f6127f",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getData",
									"nameLocation": "1335:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "dataKey",
												"nameLocation": "1360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 15,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1342:31:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "dataValue",
												"nameLocation": "1410:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1397:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 18,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1397:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:24:0"
									},
									"scope": 50,
									"src": "1326:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1427:353:0",
										"text": " @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n @param dataKeys The array of keys which values to retrieve\n @return dataValues The array of data stored at multiple keys"
									},
									"functionSelector": "dedff9c6",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDataBatch",
									"nameLocation": "1794:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "dataKeys",
												"nameLocation": "1833:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1816:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 23,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1816:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 24,
													"nodeType": "ArrayTypeName",
													"src": "1816:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:41:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "dataValues",
												"nameLocation": "1886:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1871:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 27,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "1871:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 28,
													"nodeType": "ArrayTypeName",
													"src": "1871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:27:0"
									},
									"scope": 50,
									"src": "1785:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1904:536:0",
										"text": " @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n The function is marked as payable to enable flexibility on child contracts. For instance to implement\n a fee mechanism for setting specific data.\n @param dataKey The data key for which to set a new value.\n @param dataValue The new bytes value to set."
									},
									"functionSelector": "7f23690c",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setData",
									"nameLocation": "2454:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "dataKey",
												"nameLocation": "2470:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2462:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 33,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "dataValue",
												"nameLocation": "2492:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "2479:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 35,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2479:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2461:41:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2519:0:0"
									},
									"scope": 50,
									"src": "2445:75:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "2526:478:0",
										"text": " @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n @param dataKeys An array of data keys to set bytes values for.\n @param dataValues An array of bytes values to set for each `dataKeys`."
									},
									"functionSelector": "97902421",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDataBatch",
									"nameLocation": "3018:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "dataKeys",
												"nameLocation": "3057:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "3040:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 41,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3040:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 42,
													"nodeType": "ArrayTypeName",
													"src": "3040:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "dataValues",
												"nameLocation": "3090:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "3075:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 44,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "3075:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 45,
													"nodeType": "ArrayTypeName",
													"src": "3075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3030:76:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3123:0:0"
									},
									"scope": 50,
									"src": "3009:115:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 51,
							"src": "480:2646:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "36:3091:0"
				},
				"id": 0
			},
			"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol": {
				"ast": {
					"absolutePath": "@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
					"exportedSymbols": {
						"IERC165": [
							646
						],
						"IERC725Y": [
							50
						],
						"ILSP7DigitalAsset": [
							228
						]
					},
					"id": 54,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 52,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
							"file": "@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
							"id": 53,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 54,
							"sourceUnit": 229,
							"src": "64:63:1",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "39:89:1"
				},
				"id": 1
			},
			"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol": {
				"ast": {
					"absolutePath": "@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol",
					"exportedSymbols": {
						"IERC165": [
							646
						],
						"IERC725Y": [
							50
						],
						"ILSP7DigitalAsset": [
							228
						]
					},
					"id": 229,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 55,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 57,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 647,
							"src": "79:80:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 56,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 646,
										"src": "87:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
							"file": "@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol",
							"id": 59,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 51,
							"src": "160:89:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 58,
										"name": "IERC725Y",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 50,
										"src": "173:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 61,
										"name": "IERC165",
										"nameLocations": [
											"374:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 646,
										"src": "374:7:2"
									},
									"id": 62,
									"nodeType": "InheritanceSpecifier",
									"src": "374:7:2"
								},
								{
									"baseName": {
										"id": 63,
										"name": "IERC725Y",
										"nameLocations": [
											"383:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 50,
										"src": "383:8:2"
									},
									"id": 64,
									"nodeType": "InheritanceSpecifier",
									"src": "383:8:2"
								}
							],
							"canonicalName": "ILSP7DigitalAsset",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 60,
								"nodeType": "StructuredDocumentation",
								"src": "251:91:2",
								"text": " @title Interface of the LSP7 - Digital Asset standard, a fungible digital asset."
							},
							"fullyImplemented": false,
							"id": 228,
							"linearizedBaseContracts": [
								228,
								50,
								646
							],
							"name": "ILSP7DigitalAsset",
							"nameLocation": "353:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "417:693:2",
										"text": " @dev Emitted when the `from` transferred successfully `amount` of tokens to `to`.\n @param operator The address of the operator that executed the transfer.\n @param from The address which tokens were sent from (balance decreased by `-amount`).\n @param to The address that received the tokens (balance increased by `+amount`).\n @param amount The amount of tokens transferred.\n @param force if the transferred enforced the `to` recipient address to be a contract that implements the LSP1 standard or not.\n @param data Any additional data included by the caller during the transfer, and sent in the LSP1 hooks to the `from` and `to` addresses."
									},
									"eventSelector": "3997e418d2cef0b3b0e907b1e39605c3f7d32dbd061e82ea5b4a770d46a160a6",
									"id": 79,
									"name": "Transfer",
									"nameLocation": "1121:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1139:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1189:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1173:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1203:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1239:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1231:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": false,
												"mutability": "mutable",
												"name": "force",
												"nameLocation": "1260:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1255:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 74,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1255:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1281:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1275:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1275:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:162:2"
									},
									"src": "1115:177:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "1298:371:2",
										"text": " @dev Emitted when `tokenOwner` enables `operator` for `amount` tokens.\n @param operator The address authorized as an operator\n @param tokenOwner The token owner\n @param amount The amount of tokens `operator` address has access to from `tokenOwner`\n @param operatorNotificationData The data to notify the operator about via LSP1."
									},
									"eventSelector": "f772a43bfdf4729b196e3fb54a818b91a2ca6c49d10b2e16278752f9f515c25d",
									"id": 90,
									"name": "OperatorAuthorizationChanged",
									"nameLocation": "1680:28:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1734:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1718:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "1768:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1752:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1804:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1788:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "1826:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1820:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 87,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1820:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:148:2"
									},
									"src": "1674:183:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1863:409:2",
										"text": " @dev Emitted when `tokenOwner` disables `operator` for `amount` tokens and set its {`authorizedAmountFor(...)`} to `0`.\n @param operator The address revoked from operating\n @param tokenOwner The token owner\n @param notified Bool indicating whether the operator has been notified or not\n @param operatorNotificationData The data to notify the operator about via LSP1."
									},
									"eventSelector": "0ebf5762d8855cbe012d2ca42fb33a81175e17c8a8751f8859931ba453bd4167",
									"id": 101,
									"name": "OperatorRevoked",
									"nameLocation": "2283:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2324:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2308:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "2358:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2342:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "notified",
												"nameLocation": "2391:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2378:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 96,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2378:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "2415:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2409:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2409:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:147:2"
									},
									"src": "2277:169:2"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "2478:578:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n If the asset contract has been set to be non-divisible via the `isNonDivisible_` parameter in\n the `constructor`, the decimals returned wiil be `0`. Otherwise `18` is the common value.\n @custom:notice This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {balanceOf} and {transfer}.\n @return the number of decimals. If `0` is returned, the asset is non-divisible."
									},
									"functionSelector": "313ce567",
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3070:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3078:2:2"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3104:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 104,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3103:7:2"
									},
									"scope": 228,
									"src": "3061:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "3117:147:2",
										"text": " @dev Returns the number of existing tokens that have been minted in this contract.\n @return The number of existing tokens."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3278:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:2:2"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3315:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3315:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3314:9:2"
									},
									"scope": 228,
									"src": "3269:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "3362:546:2",
										"text": " @dev Get the number of tokens owned by `tokenOwner`.\n If the token is divisible (the {decimals} function returns `18`), the amount returned should be divided\n by 1e18 to get a better picture of the actual balance of the `tokenOwner`.\n _Example:_\n ```\n balanceOf(someAddress) -> 42_000_000_000_000_000_000 / 1e18 = 42 tokens\n ```\n @param tokenOwner The address of the token holder to query the balance for.\n @return The amount of tokens owned by `tokenOwner`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3922:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "3940:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3932:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3931:20:2"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3975:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3975:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:9:2"
									},
									"scope": 228,
									"src": "3913:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "4025:692:2",
										"text": " @dev Sets an `amount` of tokens that an `operator` has access from the caller's balance (allowance). See {authorizedAmountFor}.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @param operator The address to authorize as an operator.\n @param amount The allowance amount of tokens operator has access to.\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - `operator` cannot be the zero address.\n @custom:events {OperatorAuthorizationChanged} when allowance is given to a new operator or\n an existing operator's allowance is updated."
									},
									"functionSelector": "b49506fd",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "4731:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4766:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4758:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4792:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4784:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4784:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "4821:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4808:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 127,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4808:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4748:103:2"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4860:0:2"
									},
									"scope": 228,
									"src": "4722:139:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4867:794:2",
										"text": " @dev Enables `tokenOwner` to remove `operator` for its tokens, disallowing it to send any amount of tokens on its behalf.\n This function also allows the `operator` to remove itself if it is the caller of this function\n @param operator The address to revoke as an operator.\n @param tokenOwner The address of the token owner.\n @param notify Boolean indicating whether to notify the operator or not.\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - caller MUST be `operator` or `tokenOwner`\n - `operator` cannot be the zero address.\n @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token holder)."
									},
									"functionSelector": "30d0dc37",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "5675:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5707:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5699:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "5733:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5725:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "notify",
												"nameLocation": "5758:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5753:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5753:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "5787:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5774:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5774:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5689:128:2"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5826:0:2"
									},
									"scope": 228,
									"src": "5666:161:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5833:970:2",
										"text": " @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n against double spending allowance vulnerability.\n @notice Increase the allowance of `operator` by +`addedAmount`\n @dev Atomically increases the allowance granted to `operator` by the caller.\n This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n for the double spending allowance problem.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @param operator The operator to increase the allowance for `msg.sender`\n @param addedAmount The additional amount to add on top of the current operator's allowance\n @custom:requirements\n  - `operator` cannot be the same address as `msg.sender`\n  - `operator` cannot be the zero address.\n @custom:events {OperatorAuthorizationChanged} indicating the updated allowance"
									},
									"functionSelector": "2bc1da82",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6817:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6852:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "6844:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "addedAmount",
												"nameLocation": "6878:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "6870:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "6912:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "6899:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 149,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6899:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6834:108:2"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6951:0:2"
									},
									"scope": 228,
									"src": "6808:144:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "6958:1262:2",
										"text": " @custom:info This function in the LSP7 contract can be used as a prevention mechanism\n against the double spending allowance vulnerability.\n @notice Decrease the allowance of `operator` by -`subtractedAmount`\n @dev Atomically decreases the allowance granted to `operator` by the caller.\n This is an alternative approach to {authorizeOperator} that can be used as a mitigation\n for the double spending allowance problem.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @custom:events\n  - {OperatorAuthorizationChanged} event indicating the updated allowance after decreasing it.\n  - {OperatorRevoked} event if `subtractedAmount` is the full allowance,\n    indicating `operator` does not have any alauthorizedAmountForlowance left for `msg.sender`.\n @param operator The operator to decrease allowance for `msg.sender`\n @param tokenOwner The address of the token owner.\n @param subtractedAmount The amount to decrease by in the operator's allowance.\n @custom:requirements\n  - `operator` cannot be the zero address.\n  - `operator` must have allowance for the caller of at least `subtractedAmount`."
									},
									"functionSelector": "78381670",
									"id": 165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "8234:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8269:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "8261:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "8295:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "8287:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8287:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "subtractedAmount",
												"nameLocation": "8323:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "8315:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8315:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "operatorNotificationData",
												"nameLocation": "8362:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "8349:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8349:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8251:141:2"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8401:0:2"
									},
									"scope": 228,
									"src": "8225:177:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "8408:648:2",
										"text": " @dev Get the amount of tokens `operator` address has access to from `tokenOwner`.\n Operators can send and burn tokens on behalf of their owners.\n @param operator The operator's address to query the authorized amount for.\n @param tokenOwner The token owner that `operator` has allowance on.\n @return The amount of tokens the `operator`'s address has access on the `tokenOwner`'s balance.\n @custom:info If this function is called with the same address for `operator` and `tokenOwner`, it will simply read the `tokenOwner`'s balance\n (since a tokenOwner is its own operator)."
									},
									"functionSelector": "65aeaa95",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizedAmountFor",
									"nameLocation": "9070:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9107:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "9099:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9099:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "9133:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "9125:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9125:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9089:60:2"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "9173:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9173:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9172:9:2"
									},
									"scope": 228,
									"src": "9061:121:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "9188:293:2",
										"text": " @dev Returns all `operator` addresses that are allowed to transfer or burn on behalf of `tokenOwner`.\n @param tokenOwner The token owner to get the operators for.\n @return An array of operators allowed to transfer or burn tokens on behalf of `tokenOwner`."
									},
									"functionSelector": "d72fc29a",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOperatorsOf",
									"nameLocation": "9495:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "9527:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "9519:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9519:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9509:34:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "9567:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 180,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9567:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 181,
													"nodeType": "ArrayTypeName",
													"src": "9567:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:18:2"
									},
									"scope": 228,
									"src": "9486:99:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "9626:2317:2",
										"text": " @dev Transfers an `amount` of tokens from the `from` address to the `to` address and notify both sender and recipients via the LSP1 {`universalReceiver(...)`} function.\n If the tokens are transferred by an operator on behalf of a token holder, the allowance for the operator will be decreased by `amount` once the token transfer\n has been completed (See {authorizedAmountFor}).\n @param from The sender address.\n @param to The recipient address.\n @param amount The amount of tokens to transfer.\n @param force When set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n @custom:requirements\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` and `to` cannot be the same address (`from` cannot send tokens to itself).\n - `from` MUST have a balance of at least `amount` tokens.\n - If the caller is not `from`, it must be an operator for `from` with an allowance of at least `amount` of tokens.\n @custom:events\n - {Transfer} event when tokens get successfully transferred.\n - if the transfer is triggered by an operator, either the {OperatorAuthorizationChanged} event will be emitted with the updated allowance or the {OperatorRevoked}\n event will be emitted if the operator has no more allowance left.\n @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n This even if the `force` was set to `true`."
									},
									"functionSelector": "760d9bba",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "11957:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11983:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "11975:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11975:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12005:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "11997:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11997:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12025:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "12017:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12017:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "force",
												"nameLocation": "12046:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "12041:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12041:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12074:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "12061:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12061:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11965:119:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12093:0:2"
									},
									"scope": 228,
									"src": "11948:146:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "12100:1246:2",
										"text": " @dev Same as {`transfer(...)`} but transfer multiple tokens based on the arrays of `from`, `to`, `amount`.\n @custom:info If any transfer in the batch fail or revert, the whole call will revert.\n @param from An array of sending addresses.\n @param to An array of receiving addresses.\n @param amount An array of amount of tokens to transfer for each `from -> to` transfer.\n @param force For each transfer, when set to `true`, the `to` address CAN be any address. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n @param data An array of additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n @custom:requirements\n - `from`, `to`, `amount` lists MUST be of the same length.\n - no values in `from` can be the zero address.\n - no values in `to` can be the zero address.\n - each `amount` tokens MUST be owned by `from`.\n - for each transfer, if the caller is not `from`, it MUST be an operator for `from` with access to at least `amount` tokens.\n @custom:events {Transfer} event **for each token transfer**."
									},
									"functionSelector": "2d7667c9",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferBatch",
									"nameLocation": "13360:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13400:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "13383:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 200,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13383:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 201,
													"nodeType": "ArrayTypeName",
													"src": "13383:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "13414:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 203,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13414:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 204,
													"nodeType": "ArrayTypeName",
													"src": "13414:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13460:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "13443:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 206,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13443:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 207,
													"nodeType": "ArrayTypeName",
													"src": "13443:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "force",
												"nameLocation": "13490:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "13476:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 209,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "13476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 210,
													"nodeType": "ArrayTypeName",
													"src": "13476:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13520:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "13505:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 212,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "13505:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 213,
													"nodeType": "ArrayTypeName",
													"src": "13505:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13373:157:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13539:0:2"
									},
									"scope": 228,
									"src": "13351:189:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "13546:460:2",
										"text": " @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n @param data An array of ABI encoded function calls to be called on the contract.\n @return results An array of abi-encoded data returned by the functions executed."
									},
									"functionSelector": "6963d438",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchCalls",
									"nameLocation": "14020:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14057:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "14040:21:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 219,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "14040:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 220,
													"nodeType": "ArrayTypeName",
													"src": "14040:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14030:37:2"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "14101:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "14086:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 223,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "14086:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 224,
													"nodeType": "ArrayTypeName",
													"src": "14086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14085:24:2"
									},
									"scope": 228,
									"src": "14011:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 229,
							"src": "343:13769:2",
							"usedErrors": [],
							"usedEvents": [
								13,
								79,
								90,
								101
							]
						}
					],
					"src": "40:14073:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Base64.sol",
					"exportedSymbols": {
						"Base64": [
							275
						]
					},
					"id": 276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 230,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Base64",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 231,
								"nodeType": "StructuredDocumentation",
								"src": "126:75:3",
								"text": " @dev Provides a set of functions to operate with Base64 strings."
							},
							"fullyImplemented": true,
							"id": 275,
							"linearizedBaseContracts": [
								275
							],
							"name": "Base64",
							"nameLocation": "210:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "223:54:3",
										"text": " @dev Base64 Encoding/Decoding Table"
									},
									"id": 235,
									"mutability": "constant",
									"name": "_TABLE",
									"nameLocation": "307:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 275,
									"src": "282:100:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 233,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "282:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f",
										"id": 234,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "316:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce",
											"typeString": "literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""
										},
										"value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "549:3309:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "766:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "771:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "766:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "781:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "766:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": " Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol",
												"id": 249,
												"nodeType": "IfStatement",
												"src": "762:31:3",
												"trueBody": {
													"expression": {
														"hexValue": "",
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "791:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"functionReturnParameters": 242,
													"id": 248,
													"nodeType": "Return",
													"src": "784:9:3"
												}
											},
											{
												"assignments": [
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "table",
														"nameLocation": "857:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "843:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 250,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "843:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"id": 252,
													"name": "_TABLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 235,
													"src": "865:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "843:28:3"
											},
											{
												"assignments": [
													255
												],
												"declarations": [
													{
														"constant": false,
														"id": 255,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1288:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "1274:20:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 254,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1274:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "34",
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1308:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 259,
																							"name": "data",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 238,
																							"src": "1314:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 260,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1319:6:3",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1314:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "32",
																						"id": 261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1328:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "1314:15:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 263,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1313:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1333:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "1313:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 266,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1312:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1308:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1297:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 256,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1301:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1274:62:3"
											},
											{
												"AST": {
													"nativeSrc": "1399:2429:3",
													"nodeType": "YulBlock",
													"src": "1399:2429:3",
													"statements": [
														{
															"nativeSrc": "1484:29:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1484:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "table",
																		"nativeSrc": "1504:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1504:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1511:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1500:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1500:3:3"
																},
																"nativeSrc": "1500:13:3",
																"nodeType": "YulFunctionCall",
																"src": "1500:13:3"
															},
															"variables": [
																{
																	"name": "tablePtr",
																	"nativeSrc": "1488:8:3",
																	"nodeType": "YulTypedName",
																	"src": "1488:8:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1583:34:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1583:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "1604:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1604:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1612:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1612:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1600:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:3"
																},
																"nativeSrc": "1600:17:3",
																"nodeType": "YulFunctionCall",
																"src": "1600:17:3"
															},
															"variables": [
																{
																	"name": "resultPtr",
																	"nativeSrc": "1587:9:3",
																	"nodeType": "YulTypedName",
																	"src": "1587:9:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1630:19:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1630:19:3",
															"value": {
																"name": "data",
																"nativeSrc": "1645:4:3",
																"nodeType": "YulIdentifier",
																"src": "1645:4:3"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "1634:7:3",
																	"nodeType": "YulTypedName",
																	"src": "1634:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1662:36:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1662:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1680:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "1680:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1692:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "1692:4:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1686:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "1686:5:3"
																		},
																		"nativeSrc": "1686:11:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1686:11:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1676:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1676:3:3"
																},
																"nativeSrc": "1676:22:3",
																"nodeType": "YulFunctionCall",
																"src": "1676:22:3"
															},
															"variables": [
																{
																	"name": "endPtr",
																	"nativeSrc": "1666:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1666:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1912:33:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1912:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "endPtr",
																		"nativeSrc": "1932:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1932:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1940:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1940:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1928:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1928:3:3"
																},
																"nativeSrc": "1928:17:3",
																"nodeType": "YulFunctionCall",
																"src": "1928:17:3"
															},
															"variables": [
																{
																	"name": "afterPtr",
																	"nativeSrc": "1916:8:3",
																	"nodeType": "YulTypedName",
																	"src": "1916:8:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1958:33:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1958:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "afterPtr",
																		"nativeSrc": "1982:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "1982:8:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1976:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1976:5:3"
																},
																"nativeSrc": "1976:15:3",
																"nodeType": "YulFunctionCall",
																"src": "1976:15:3"
															},
															"variables": [
																{
																	"name": "afterCache",
																	"nativeSrc": "1962:10:3",
																	"nodeType": "YulTypedName",
																	"src": "1962:10:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "afterPtr",
																		"nativeSrc": "2011:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "2011:8:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2021:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2021:4:3",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2004:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:3"
																},
																"nativeSrc": "2004:22:3",
																"nodeType": "YulFunctionCall",
																"src": "2004:22:3"
															},
															"nativeSrc": "2004:22:3",
															"nodeType": "YulExpressionStatement",
															"src": "2004:22:3"
														},
														{
															"body": {
																"nativeSrc": "2151:1201:3",
																"nodeType": "YulBlock",
																"src": "2151:1201:3",
																"statements": [
																	{
																		"nativeSrc": "2204:26:3",
																		"nodeType": "YulAssignment",
																		"src": "2204:26:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nativeSrc": "2219:7:3",
																					"nodeType": "YulIdentifier",
																					"src": "2219:7:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2228:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2228:1:3",
																					"type": "",
																					"value": "3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2215:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2215:3:3"
																			},
																			"nativeSrc": "2215:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2215:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "2204:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2204:7:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2247:27:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2247:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nativeSrc": "2266:7:3",
																					"nodeType": "YulIdentifier",
																					"src": "2266:7:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2260:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2260:5:3"
																			},
																			"nativeSrc": "2260:14:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2260:14:3"
																		},
																		"variables": [
																			{
																				"name": "input",
																				"nativeSrc": "2251:5:3",
																				"nodeType": "YulTypedName",
																				"src": "2251:5:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2802:9:3",
																					"nodeType": "YulIdentifier",
																					"src": "2802:9:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2823:8:3",
																									"nodeType": "YulIdentifier",
																									"src": "2823:8:3"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2841:2:3",
																													"nodeType": "YulLiteral",
																													"src": "2841:2:3",
																													"type": "",
																													"value": "18"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2845:5:3",
																													"nodeType": "YulIdentifier",
																													"src": "2845:5:3"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2837:3:3",
																												"nodeType": "YulIdentifier",
																												"src": "2837:3:3"
																											},
																											"nativeSrc": "2837:14:3",
																											"nodeType": "YulFunctionCall",
																											"src": "2837:14:3"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2853:4:3",
																											"nodeType": "YulLiteral",
																											"src": "2853:4:3",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2833:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "2833:3:3"
																									},
																									"nativeSrc": "2833:25:3",
																									"nodeType": "YulFunctionCall",
																									"src": "2833:25:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2819:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "2819:3:3"
																							},
																							"nativeSrc": "2819:40:3",
																							"nodeType": "YulFunctionCall",
																							"src": "2819:40:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2813:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2813:5:3"
																					},
																					"nativeSrc": "2813:47:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:47:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2794:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2794:7:3"
																			},
																			"nativeSrc": "2794:67:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2794:67:3"
																		},
																		"nativeSrc": "2794:67:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2794:67:3"
																	},
																	{
																		"nativeSrc": "2878:30:3",
																		"nodeType": "YulAssignment",
																		"src": "2878:30:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2895:9:3",
																					"nodeType": "YulIdentifier",
																					"src": "2895:9:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2906:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2906:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2891:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2891:3:3"
																			},
																			"nativeSrc": "2891:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2891:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "2878:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2878:9:3"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2945:9:3",
																					"nodeType": "YulIdentifier",
																					"src": "2945:9:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2966:8:3",
																									"nodeType": "YulIdentifier",
																									"src": "2966:8:3"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2984:2:3",
																													"nodeType": "YulLiteral",
																													"src": "2984:2:3",
																													"type": "",
																													"value": "12"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2988:5:3",
																													"nodeType": "YulIdentifier",
																													"src": "2988:5:3"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2980:3:3",
																												"nodeType": "YulIdentifier",
																												"src": "2980:3:3"
																											},
																											"nativeSrc": "2980:14:3",
																											"nodeType": "YulFunctionCall",
																											"src": "2980:14:3"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2996:4:3",
																											"nodeType": "YulLiteral",
																											"src": "2996:4:3",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2976:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "2976:3:3"
																									},
																									"nativeSrc": "2976:25:3",
																									"nodeType": "YulFunctionCall",
																									"src": "2976:25:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2962:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "2962:3:3"
																							},
																							"nativeSrc": "2962:40:3",
																							"nodeType": "YulFunctionCall",
																							"src": "2962:40:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2956:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2956:5:3"
																					},
																					"nativeSrc": "2956:47:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2956:47:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2937:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2937:7:3"
																			},
																			"nativeSrc": "2937:67:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2937:67:3"
																		},
																		"nativeSrc": "2937:67:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2937:67:3"
																	},
																	{
																		"nativeSrc": "3021:30:3",
																		"nodeType": "YulAssignment",
																		"src": "3021:30:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3038:9:3",
																					"nodeType": "YulIdentifier",
																					"src": "3038:9:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3049:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3049:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3034:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "3034:3:3"
																			},
																			"nativeSrc": "3034:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3034:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "3021:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3021:9:3"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3088:9:3",
																					"nodeType": "YulIdentifier",
																					"src": "3088:9:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "3109:8:3",
																									"nodeType": "YulIdentifier",
																									"src": "3109:8:3"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "3127:1:3",
																													"nodeType": "YulLiteral",
																													"src": "3127:1:3",
																													"type": "",
																													"value": "6"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "3130:5:3",
																													"nodeType": "YulIdentifier",
																													"src": "3130:5:3"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "3123:3:3",
																												"nodeType": "YulIdentifier",
																												"src": "3123:3:3"
																											},
																											"nativeSrc": "3123:13:3",
																											"nodeType": "YulFunctionCall",
																											"src": "3123:13:3"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3138:4:3",
																											"nodeType": "YulLiteral",
																											"src": "3138:4:3",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "3119:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "3119:3:3"
																									},
																									"nativeSrc": "3119:24:3",
																									"nodeType": "YulFunctionCall",
																									"src": "3119:24:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3105:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "3105:3:3"
																							},
																							"nativeSrc": "3105:39:3",
																							"nodeType": "YulFunctionCall",
																							"src": "3105:39:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3099:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3099:5:3"
																					},
																					"nativeSrc": "3099:46:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3099:46:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "3080:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3080:7:3"
																			},
																			"nativeSrc": "3080:66:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3080:66:3"
																		},
																		"nativeSrc": "3080:66:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3080:66:3"
																	},
																	{
																		"nativeSrc": "3163:30:3",
																		"nodeType": "YulAssignment",
																		"src": "3163:30:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3180:9:3",
																					"nodeType": "YulIdentifier",
																					"src": "3180:9:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3191:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3191:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3176:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "3176:3:3"
																			},
																			"nativeSrc": "3176:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3176:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "3163:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3163:9:3"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3230:9:3",
																					"nodeType": "YulIdentifier",
																					"src": "3230:9:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "3251:8:3",
																									"nodeType": "YulIdentifier",
																									"src": "3251:8:3"
																								},
																								{
																									"arguments": [
																										{
																											"name": "input",
																											"nativeSrc": "3265:5:3",
																											"nodeType": "YulIdentifier",
																											"src": "3265:5:3"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3272:4:3",
																											"nodeType": "YulLiteral",
																											"src": "3272:4:3",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "3261:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "3261:3:3"
																									},
																									"nativeSrc": "3261:16:3",
																									"nodeType": "YulFunctionCall",
																									"src": "3261:16:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3247:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "3247:3:3"
																							},
																							"nativeSrc": "3247:31:3",
																							"nodeType": "YulFunctionCall",
																							"src": "3247:31:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3241:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3241:5:3"
																					},
																					"nativeSrc": "3241:38:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3241:38:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "3222:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3222:7:3"
																			},
																			"nativeSrc": "3222:58:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3222:58:3"
																		},
																		"nativeSrc": "3222:58:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3222:58:3"
																	},
																	{
																		"nativeSrc": "3297:30:3",
																		"nodeType": "YulAssignment",
																		"src": "3297:30:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3314:9:3",
																					"nodeType": "YulIdentifier",
																					"src": "3314:9:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3325:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3325:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3310:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "3310:3:3"
																			},
																			"nativeSrc": "3310:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3310:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "3297:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3297:9:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "dataPtr",
																		"nativeSrc": "2117:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "2117:7:3"
																	},
																	{
																		"name": "endPtr",
																		"nativeSrc": "2126:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2114:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2114:2:3"
																},
																"nativeSrc": "2114:19:3",
																"nodeType": "YulFunctionCall",
																"src": "2114:19:3"
															},
															"nativeSrc": "2093:1259:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2134:16:3",
																"nodeType": "YulBlock",
																"src": "2134:16:3",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2097:16:3",
																"nodeType": "YulBlock",
																"src": "2097:16:3",
																"statements": []
															},
															"src": "2093:1259:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "afterPtr",
																		"nativeSrc": "3420:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "3420:8:3"
																	},
																	{
																		"name": "afterCache",
																		"nativeSrc": "3430:10:3",
																		"nodeType": "YulIdentifier",
																		"src": "3430:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3413:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:3"
																},
																"nativeSrc": "3413:28:3",
																"nodeType": "YulFunctionCall",
																"src": "3413:28:3"
															},
															"nativeSrc": "3413:28:3",
															"nodeType": "YulExpressionStatement",
															"src": "3413:28:3"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3621:113:3",
																		"nodeType": "YulBlock",
																		"src": "3621:113:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3651:9:3",
																									"nodeType": "YulIdentifier",
																									"src": "3651:9:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3662:1:3",
																									"nodeType": "YulLiteral",
																									"src": "3662:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3647:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "3647:3:3"
																							},
																							"nativeSrc": "3647:17:3",
																							"nodeType": "YulFunctionCall",
																							"src": "3647:17:3"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3666:4:3",
																							"nodeType": "YulLiteral",
																							"src": "3666:4:3",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3639:7:3",
																						"nodeType": "YulIdentifier",
																						"src": "3639:7:3"
																					},
																					"nativeSrc": "3639:32:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3639:32:3"
																				},
																				"nativeSrc": "3639:32:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "3639:32:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3700:9:3",
																									"nodeType": "YulIdentifier",
																									"src": "3700:9:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3711:1:3",
																									"nodeType": "YulLiteral",
																									"src": "3711:1:3",
																									"type": "",
																									"value": "2"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3696:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "3696:3:3"
																							},
																							"nativeSrc": "3696:17:3",
																							"nodeType": "YulFunctionCall",
																							"src": "3696:17:3"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3715:4:3",
																							"nodeType": "YulLiteral",
																							"src": "3715:4:3",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3688:7:3",
																						"nodeType": "YulIdentifier",
																						"src": "3688:7:3"
																					},
																					"nativeSrc": "3688:32:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3688:32:3"
																				},
																				"nativeSrc": "3688:32:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "3688:32:3"
																			}
																		]
																	},
																	"nativeSrc": "3614:120:3",
																	"nodeType": "YulCase",
																	"src": "3614:120:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3619:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3619:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3754:64:3",
																		"nodeType": "YulBlock",
																		"src": "3754:64:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3784:9:3",
																									"nodeType": "YulIdentifier",
																									"src": "3784:9:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3795:1:3",
																									"nodeType": "YulLiteral",
																									"src": "3795:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3780:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "3780:3:3"
																							},
																							"nativeSrc": "3780:17:3",
																							"nodeType": "YulFunctionCall",
																							"src": "3780:17:3"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3799:4:3",
																							"nodeType": "YulLiteral",
																							"src": "3799:4:3",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3772:7:3",
																						"nodeType": "YulIdentifier",
																						"src": "3772:7:3"
																					},
																					"nativeSrc": "3772:32:3",
																					"nodeType": "YulFunctionCall",
																					"src": "3772:32:3"
																				},
																				"nativeSrc": "3772:32:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "3772:32:3"
																			}
																		]
																	},
																	"nativeSrc": "3747:71:3",
																	"nodeType": "YulCase",
																	"src": "3747:71:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3752:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3752:1:3",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3592:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "3592:4:3"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3586:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "3586:5:3"
																		},
																		"nativeSrc": "3586:11:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3586:11:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3599:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3599:1:3",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "3582:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3582:3:3"
																},
																"nativeSrc": "3582:19:3",
																"nodeType": "YulFunctionCall",
																"src": "3582:19:3"
															},
															"nativeSrc": "3575:243:3",
															"nodeType": "YulSwitch",
															"src": "3575:243:3"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "1645:4:3",
														"valueSize": 1
													},
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "1680:4:3",
														"valueSize": 1
													},
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "1692:4:3",
														"valueSize": 1
													},
													{
														"declaration": 238,
														"isOffset": false,
														"isSlot": false,
														"src": "3592:4:3",
														"valueSize": 1
													},
													{
														"declaration": 255,
														"isOffset": false,
														"isSlot": false,
														"src": "1604:6:3",
														"valueSize": 1
													},
													{
														"declaration": 251,
														"isOffset": false,
														"isSlot": false,
														"src": "1504:5:3",
														"valueSize": 1
													}
												],
												"id": 270,
												"nodeType": "InlineAssembly",
												"src": "1390:2438:3"
											},
											{
												"expression": {
													"id": 271,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "3845:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 242,
												"id": 272,
												"nodeType": "Return",
												"src": "3838:13:3"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "389:82:3",
										"text": " @dev Converts a `bytes` to its Bytes64 `string` representation."
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nameLocation": "485:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "505:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "492:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "492:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:19:3"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "534:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "534:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:15:3"
									},
									"scope": 275,
									"src": "476:3382:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 276,
							"src": "202:3658:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:3761:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							305
						]
					},
					"id": 306,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 277,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 278,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 305,
							"linearizedBaseContracts": [
								305
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 283,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 282,
												"id": 285,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 305,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 292,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 291,
												"id": 294,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 305,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 300,
												"id": 302,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 305,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 306,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 307,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 308,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:5",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "Counters",
							"nameLocation": "432:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 311,
									"members": [
										{
											"constant": false,
											"id": 310,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 311,
											"src": "786:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 309,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:5",
									"nodeType": "StructDefinition",
									"scope": 379,
									"src": "447:374:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "901:38:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 319,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "918:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:5",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 310,
													"src": "918:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 318,
												"id": 321,
												"nodeType": "Return",
												"src": "911:21:5"
											}
										]
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "844:23:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 312,
														"name": "Counter",
														"nameLocations": [
															"844:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 311,
														"src": "844:7:5"
													},
													"referencedDeclaration": 311,
													"src": "844:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:5"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "892:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:5"
									},
									"scope": 379,
									"src": "827:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "998:70:5",
										"statements": [
											{
												"id": 335,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:5",
												"statements": [
													{
														"expression": {
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 329,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "1032:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:5",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "1032:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 334,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:5"
													}
												]
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "964:23:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 325,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 324,
														"name": "Counter",
														"nameLocations": [
															"964:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 311,
														"src": "964:7:5"
													},
													"referencedDeclaration": 311,
													"src": "964:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:5"
									},
									"scope": 379,
									"src": "945:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "1127:176:5",
										"statements": [
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 364,
														"src": "1137:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 343,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 347,
												"initialValue": {
													"expression": {
														"id": 345,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1153:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:5",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 310,
													"src": "1153:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "1185:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:5"
											},
											{
												"id": 363,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:5",
												"statements": [
													{
														"expression": {
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 355,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "1260:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 357,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:5",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "1260:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 358,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "1277:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 362,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:5"
													}
												]
											}
										]
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1093:23:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "Counter",
														"nameLocations": [
															"1093:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 311,
														"src": "1093:7:5"
													},
													"referencedDeclaration": 311,
													"src": "1093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:5"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:5"
									},
									"scope": 379,
									"src": "1074:229:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1358:35:5",
										"statements": [
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 371,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "1368:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:5",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "1368:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:5"
											}
										]
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1324:23:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 366,
														"name": "Counter",
														"nameLocations": [
															"1324:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 311,
														"src": "1324:7:5"
													},
													"referencedDeclaration": 311,
													"src": "1324:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:5"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:5"
									},
									"scope": 379,
									"src": "1309:84:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 380,
							"src": "424:971:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1700
						],
						"SignedMath": [
							1805
						],
						"Strings": [
							634
						]
					},
					"id": 635,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 1701,
							"src": "127:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 382,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1700,
										"src": "135:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 1806,
							"src": "165:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 384,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1805,
										"src": "173:10:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 386,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 634,
							"linearizedBaseContracts": [
								634
							],
							"name": "Strings",
							"nameLocation": "259:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 389,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "273:56:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 387,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 388,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 392,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "335:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 390,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 391,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:6",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 399,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "505:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "520:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:6"
									},
									"src": "470:66:6"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "708:627:6",
										"statements": [
											{
												"id": 445,
												"nodeType": "UncheckedBlock",
												"src": "718:611:6",
												"statements": [
													{
														"assignments": [
															408
														],
														"declarations": [
															{
																"constant": false,
																"id": 408,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 445,
																"src": "742:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 407,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 415,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 411,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "770:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 409,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1700,
																		"src": "759:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1700_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1520,
																	"src": "759:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:6"
													},
													{
														"assignments": [
															417
														],
														"declarations": [
															{
																"constant": false,
																"id": 417,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 445,
																"src": "794:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 416,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 422,
														"initialValue": {
															"arguments": [
																{
																	"id": 420,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "828:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 418,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:6"
													},
													{
														"assignments": [
															424
														],
														"declarations": [
															{
																"constant": false,
																"id": 424,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 445,
																"src": "849:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 423,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 425,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:6"
													},
													{
														"AST": {
															"nativeSrc": "930:67:6",
															"nodeType": "YulBlock",
															"src": "930:67:6",
															"statements": [
																{
																	"nativeSrc": "948:35:6",
																	"nodeType": "YulAssignment",
																	"src": "948:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:6",
																						"nodeType": "YulLiteral",
																						"src": "971:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:6"
																				},
																				"nativeSrc": "967:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:6"
																		},
																		"nativeSrc": "955:28:6",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 417,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:6",
																"valueSize": 1
															},
															{
																"declaration": 408,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:6",
																"valueSize": 1
															},
															{
																"declaration": 424,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:6",
																"valueSize": 1
															}
														],
														"id": 426,
														"nodeType": "InlineAssembly",
														"src": "921:76:6"
													},
													{
														"body": {
															"id": 441,
															"nodeType": "Block",
															"src": "1023:269:6",
															"statements": [
																{
																	"expression": {
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:6",
																		"subExpression": {
																			"id": 428,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "1041:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 430,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:6"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:6",
																		"nodeType": "YulBlock",
																		"src": "1124:86:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:6",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:6"
																									},
																									"nativeSrc": "1164:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:6"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:6"
																							},
																							"nativeSrc": "1159:32:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:6",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:6"
																					},
																					"nativeSrc": "1146:46:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:6"
																				},
																				"nativeSrc": "1146:46:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 389,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 424,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 402,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 431,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:6"
																},
																{
																	"expression": {
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 432,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "1227:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 435,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "1260:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 440,
																	"nodeType": "IfStatement",
																	"src": "1256:21:6",
																	"trueBody": {
																		"id": 439,
																		"nodeType": "Break",
																		"src": "1272:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 442,
														"nodeType": "WhileStatement",
														"src": "1010:282:6"
													},
													{
														"expression": {
															"id": 443,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "1312:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 406,
														"id": 444,
														"nodeType": "Return",
														"src": "1305:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "655:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:6"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "693:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:6"
									},
									"scope": 634,
									"src": "637:698:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "1511:92:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 458,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "1542:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:6",
															"trueExpression": {
																"hexValue": "2d",
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 467,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 450,
																			"src": "1588:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 465,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1805,
																			"src": "1573:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1805_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:6",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1804,
																		"src": "1573:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 464,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "1564:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 455,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:6",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 454,
												"id": 471,
												"nodeType": "Return",
												"src": "1521:75:6"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1459:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 449,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:6"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "1496:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:6"
									},
									"scope": 634,
									"src": "1435:168:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "1782:100:6",
										"statements": [
											{
												"id": 491,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 482,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "1835:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 485,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "1854:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 483,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1700,
																				"src": "1842:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1700_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1642,
																			"src": "1842:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 481,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	493,
																	576,
																	596
																],
																"referencedDeclaration": 576,
																"src": "1823:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 480,
														"id": 490,
														"nodeType": "Return",
														"src": "1816:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1729:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:6"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1767:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:6"
									},
									"scope": 634,
									"src": "1708:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "2095:435:6",
										"statements": [
											{
												"assignments": [
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "2105:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 503,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 506,
												"initialValue": {
													"id": 505,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 496,
													"src": "2126:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:6"
											},
											{
												"assignments": [
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "2141:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 517,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 512,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "2177:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 509,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:6"
											},
											{
												"expression": {
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 518,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "2198:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 520,
														"indexExpression": {
															"hexValue": "30",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:6"
											},
											{
												"expression": {
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 524,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "2223:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 526,
														"indexExpression": {
															"hexValue": "31",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:6"
											},
											{
												"body": {
													"id": 558,
													"nodeType": "Block",
													"src": "2293:95:6",
													"statements": [
														{
															"expression": {
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 544,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "2307:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 546,
																	"indexExpression": {
																		"id": 545,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "2314:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 547,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 389,
																		"src": "2319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 551,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 548,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "2330:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 553,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:6"
														},
														{
															"expression": {
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 554,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "2361:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 557,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 538,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "2281:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 559,
												"initializationExpression": {
													"assignments": [
														531
													],
													"declarations": [
														{
															"constant": false,
															"id": 531,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 559,
															"src": "2253:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 530,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 537,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 533,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "2269:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:6",
														"subExpression": {
															"id": 541,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "2290:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 543,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 560,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "2401:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 569,
												"nodeType": "IfStatement",
												"src": "2397:96:6",
												"trueBody": {
													"id": 568,
													"nodeType": "Block",
													"src": "2418:75:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 564,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "2468:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 565,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 498,
																		"src": "2475:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 563,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "2439:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 567,
															"nodeType": "RevertStatement",
															"src": "2432:50:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "2516:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 570,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 502,
												"id": 574,
												"nodeType": "Return",
												"src": "2502:21:6"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2026:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2041:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:6"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2080:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:6"
									},
									"scope": 634,
									"src": "2005:525:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "2762:75:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 589,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 579,
																			"src": "2807:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 587,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 585,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 592,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2815:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 584,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															493,
															576,
															596
														],
														"referencedDeclaration": 576,
														"src": "2779:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 583,
												"id": 594,
												"nodeType": "Return",
												"src": "2772:58:6"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:6"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2747:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 581,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:6"
									},
									"scope": 634,
									"src": "2689:148:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "2992:104:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 608,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "3015:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 606,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 613,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "3034:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 611,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 620,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 599,
																			"src": "3063:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 618,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 617,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 626,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "3086:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 624,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 623,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 605,
												"id": 631,
												"nodeType": "Return",
												"src": "3002:87:6"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2929:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2946:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 600,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:6"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2986:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:6"
									},
									"scope": 634,
									"src": "2914:182:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 635,
							"src": "251:2847:6",
							"usedErrors": [
								399
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							646
						]
					},
					"id": 647,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 636,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 637,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 646,
							"linearizedBaseContracts": [
								646
							],
							"name": "IERC165",
							"nameLocation": "431:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "817:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 639,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:7"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "860:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:7"
									},
									"scope": 646,
									"src": "790:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 647,
							"src": "421:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1700
						]
					},
					"id": 1701,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 648,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 649,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1700,
							"linearizedBaseContracts": [
								1700
							],
							"name": "Math",
							"nameLocation": "211:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:8",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 652,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:8"
									},
									"src": "277:29:8"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 657,
									"members": [
										{
											"id": 653,
											"name": "Floor",
											"nameLocation": "336:5:8",
											"nodeType": "EnumValue",
											"src": "336:5:8"
										},
										{
											"id": 654,
											"name": "Ceil",
											"nameLocation": "379:4:8",
											"nodeType": "EnumValue",
											"src": "379:4:8"
										},
										{
											"id": 655,
											"name": "Trunc",
											"nameLocation": "421:5:8",
											"nodeType": "EnumValue",
											"src": "421:5:8"
										},
										{
											"id": 656,
											"name": "Expand",
											"nameLocation": "451:6:8",
											"nodeType": "EnumValue",
											"src": "451:6:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:8",
									"nodeType": "EnumDefinition",
									"src": "312:169:8"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "661:140:8",
										"statements": [
											{
												"id": 687,
												"nodeType": "UncheckedBlock",
												"src": "671:124:8",
												"statements": [
													{
														"assignments": [
															670
														],
														"declarations": [
															{
																"constant": false,
																"id": 670,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 687,
																"src": "695:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 669,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 674,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 671,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "707:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 672,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "711:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 675,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "730:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 676,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "734:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 682,
														"nodeType": "IfStatement",
														"src": "726:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 680,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 668,
															"id": 681,
															"nodeType": "Return",
															"src": "737:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 684,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "782:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 685,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 668,
														"id": 686,
														"nodeType": "Return",
														"src": "768:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "612:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:8"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "646:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "652:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:8"
									},
									"scope": 1700,
									"src": "585:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "984:113:8",
										"statements": [
											{
												"id": 715,
												"nodeType": "UncheckedBlock",
												"src": "994:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 701,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "1022:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 702,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "1026:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 708,
														"nodeType": "IfStatement",
														"src": "1018:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 706,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 700,
															"id": 707,
															"nodeType": "Return",
															"src": "1029:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 710,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "1074:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 711,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 694,
																		"src": "1078:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 713,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 700,
														"id": 714,
														"nodeType": "Return",
														"src": "1060:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "924:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "935:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:8"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "969:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "975:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:8"
									},
									"scope": 1700,
									"src": "908:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "1283:417:8",
										"statements": [
											{
												"id": 757,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 729,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "1551:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 736,
														"nodeType": "IfStatement",
														"src": "1547:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 734,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 728,
															"id": 735,
															"nodeType": "Return",
															"src": "1559:16:8"
														}
													},
													{
														"assignments": [
															738
														],
														"declarations": [
															{
																"constant": false,
																"id": 738,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 757,
																"src": "1589:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 737,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 742,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 739,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "1601:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 740,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "1605:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 743,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "1624:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 744,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "1628:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 746,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "1633:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 752,
														"nodeType": "IfStatement",
														"src": "1620:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 750,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 728,
															"id": 751,
															"nodeType": "Return",
															"src": "1636:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 754,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "1681:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 755,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 728,
														"id": 756,
														"nodeType": "Return",
														"src": "1667:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "1223:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "1234:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:8"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "1268:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "1274:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:8"
									},
									"scope": 1700,
									"src": "1207:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "1887:114:8",
										"statements": [
											{
												"id": 785,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 771,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "1925:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 778,
														"nodeType": "IfStatement",
														"src": "1921:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 776,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 770,
															"id": 777,
															"nodeType": "Return",
															"src": "1933:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 780,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "1978:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 781,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "1982:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 783,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 770,
														"id": 784,
														"nodeType": "Return",
														"src": "1964:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1827:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1838:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:8"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1872:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1878:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:8"
									},
									"scope": 1700,
									"src": "1811:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "2198:114:8",
										"statements": [
											{
												"id": 813,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 799,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "2236:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 806,
														"nodeType": "IfStatement",
														"src": "2232:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 798,
															"id": 805,
															"nodeType": "Return",
															"src": "2244:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 808,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "2289:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 809,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "2293:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 811,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 798,
														"id": 812,
														"nodeType": "Return",
														"src": "2275:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2138:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2149:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:8"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2183:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2189:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:8"
									},
									"scope": 1700,
									"src": "2122:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "2449:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 825,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "2466:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 826,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "2470:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 829,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2478:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:8",
													"trueExpression": {
														"id": 828,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2474:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 824,
												"id": 831,
												"nodeType": "Return",
												"src": "2459:20:8"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "2395:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "2406:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:8"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "2440:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:8"
									},
									"scope": 1700,
									"src": "2382:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "2624:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 843,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "2641:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 844,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "2645:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 847,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "2653:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:8",
													"trueExpression": {
														"id": 846,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "2649:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 842,
												"id": 849,
												"nodeType": "Return",
												"src": "2634:20:8"
											}
										]
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2570:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2581:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:8"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "2615:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:8"
									},
									"scope": 1700,
									"src": "2557:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "2845:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 861,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "2900:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 862,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "2904:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 864,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 865,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "2910:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 866,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 856,
																		"src": "2914:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 868,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 860,
												"id": 872,
												"nodeType": "Return",
												"src": "2892:28:8"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "2791:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "2802:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:8"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "2836:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:8"
									},
									"scope": 1700,
									"src": "2774:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "3219:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "3233:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "3229:127:8",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "3241:115:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 887,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "3340:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 888,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "3344:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 883,
															"id": 890,
															"nodeType": "Return",
															"src": "3333:12:8"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 893,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "3444:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 897,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "3458:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 900,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "3467:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 883,
												"id": 906,
												"nodeType": "Return",
												"src": "3437:35:8"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "3165:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "3176:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:8"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "3210:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:8"
									},
									"scope": 1700,
									"src": "3148:331:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "3901:4018:8",
										"statements": [
											{
												"id": 1032,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:8",
												"statements": [
													{
														"assignments": [
															921
														],
														"declarations": [
															{
																"constant": false,
																"id": 921,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1032,
																"src": "4232:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 920,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 925,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 922,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "4248:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 923,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "4252:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:8"
													},
													{
														"assignments": [
															927
														],
														"declarations": [
															{
																"constant": false,
																"id": 927,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1032,
																"src": "4312:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 926,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 928,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:8"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:8",
															"nodeType": "YulBlock",
															"src": "4392:122:8",
															"statements": [
																{
																	"nativeSrc": "4410:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:8"
																				},
																				"nativeSrc": "4433:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:8"
																		},
																		"nativeSrc": "4420:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:8",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:8",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:8"
																				},
																				"nativeSrc": "4470:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:8"
																				},
																				"nativeSrc": "4486:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:8"
																		},
																		"nativeSrc": "4466:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 921,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:8",
																"valueSize": 1
															},
															{
																"declaration": 921,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:8",
																"valueSize": 1
															},
															{
																"declaration": 927,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:8",
																"valueSize": 1
															},
															{
																"declaration": 911,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:8",
																"valueSize": 1
															},
															{
																"declaration": 913,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:8",
																"valueSize": 1
															}
														],
														"id": 929,
														"nodeType": "InlineAssembly",
														"src": "4383:131:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 930,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "4595:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 938,
														"nodeType": "IfStatement",
														"src": "4591:368:8",
														"trueBody": {
															"id": 937,
															"nodeType": "Block",
															"src": "4607:352:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 933,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "4925:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 934,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "4933:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 919,
																	"id": 936,
																	"nodeType": "Return",
																	"src": "4918:26:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 939,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "5065:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 940,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "5080:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 946,
														"nodeType": "IfStatement",
														"src": "5061:88:8",
														"trueBody": {
															"id": 945,
															"nodeType": "Block",
															"src": "5087:62:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 942,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 652,
																			"src": "5112:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 944,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:8"
																}
															]
														}
													},
													{
														"assignments": [
															948
														],
														"declarations": [
															{
																"constant": false,
																"id": 948,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1032,
																"src": "5404:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 947,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 949,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:8"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:8",
															"nodeType": "YulBlock",
															"src": "5444:291:8",
															"statements": [
																{
																	"nativeSrc": "5513:38:8",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:8"
																		},
																		"nativeSrc": "5526:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:8",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:8"
																				},
																				"nativeSrc": "5653:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:8"
																		},
																		"nativeSrc": "5642:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:8",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:8"
																		},
																		"nativeSrc": "5700:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 915,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:8",
																"valueSize": 1
															},
															{
																"declaration": 921,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:8",
																"valueSize": 1
															},
															{
																"declaration": 921,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:8",
																"valueSize": 1
															},
															{
																"declaration": 921,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:8",
																"valueSize": 1
															},
															{
																"declaration": 927,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:8",
																"valueSize": 1
															},
															{
																"declaration": 927,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:8",
																"valueSize": 1
															},
															{
																"declaration": 948,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:8",
																"valueSize": 1
															},
															{
																"declaration": 948,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:8",
																"valueSize": 1
															},
															{
																"declaration": 948,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:8",
																"valueSize": 1
															},
															{
																"declaration": 911,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:8",
																"valueSize": 1
															},
															{
																"declaration": 913,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:8",
																"valueSize": 1
															}
														],
														"id": 950,
														"nodeType": "InlineAssembly",
														"src": "5435:300:8"
													},
													{
														"assignments": [
															952
														],
														"declarations": [
															{
																"constant": false,
																"id": 952,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1032,
																"src": "5939:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 951,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 959,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 953,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "5954:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 955,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "5973:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 957,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:8"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:8",
															"nodeType": "YulBlock",
															"src": "6008:362:8",
															"statements": [
																{
																	"nativeSrc": "6073:37:8",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:8"
																		},
																		"nativeSrc": "6088:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:8",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:8"
																		},
																		"nativeSrc": "6186:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:8",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:8",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:8"
																						},
																						"nativeSrc": "6333:12:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:8"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:8"
																				},
																				"nativeSrc": "6329:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:8"
																		},
																		"nativeSrc": "6325:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 915,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:8",
																"valueSize": 1
															},
															{
																"declaration": 915,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:8",
																"valueSize": 1
															},
															{
																"declaration": 921,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:8",
																"valueSize": 1
															},
															{
																"declaration": 921,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:8",
																"valueSize": 1
															},
															{
																"declaration": 952,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:8",
																"valueSize": 1
															},
															{
																"declaration": 952,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:8",
																"valueSize": 1
															},
															{
																"declaration": 952,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:8",
																"valueSize": 1
															},
															{
																"declaration": 952,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:8",
																"valueSize": 1
															},
															{
																"declaration": 952,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:8",
																"valueSize": 1
															}
														],
														"id": 960,
														"nodeType": "InlineAssembly",
														"src": "5999:371:8"
													},
													{
														"expression": {
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 961,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "6436:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 962,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "6445:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 963,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "6453:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 966,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:8"
													},
													{
														"assignments": [
															968
														],
														"declarations": [
															{
																"constant": false,
																"id": 968,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1032,
																"src": "6775:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 967,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 975,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 970,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "6798:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 972,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:8"
													},
													{
														"expression": {
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 976,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "7031:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 978,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "7046:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 979,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "7060:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 983,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:8"
													},
													{
														"expression": {
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 984,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "7100:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 986,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "7115:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 987,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "7129:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 991,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:8"
													},
													{
														"expression": {
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 992,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "7170:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 994,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "7185:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 995,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "7199:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 999,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:8"
													},
													{
														"expression": {
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1000,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "7240:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1002,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "7255:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1003,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "7269:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1007,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:8"
													},
													{
														"expression": {
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1008,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "7310:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1010,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "7325:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1011,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "7339:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1015,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:8"
													},
													{
														"expression": {
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1016,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "7381:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1018,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "7396:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1019,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "7410:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1023,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:8"
													},
													{
														"expression": {
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1024,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "7851:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1025,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "7860:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1026,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "7868:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1029,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:8"
													},
													{
														"expression": {
															"id": 1030,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "7896:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 919,
														"id": 1031,
														"nodeType": "Return",
														"src": "7889:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3819:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3830:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3841:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:8"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "3885:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:8"
									},
									"scope": 1700,
									"src": "3803:4116:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "8161:192:8",
										"statements": [
											{
												"assignments": [
													1050
												],
												"declarations": [
													{
														"constant": false,
														"id": 1050,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "8171:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1049,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"arguments": [
														{
															"id": 1052,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "8195:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1053,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "8198:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1054,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "8201:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1051,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1034,
															1077
														],
														"referencedDeclaration": 1034,
														"src": "8188:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1058,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "8244:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$657",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$657",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1057,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "8227:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$657_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1061,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "8264:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1062,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "8267:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1063,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "8270:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1060,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "8223:101:8",
												"trueBody": {
													"id": 1072,
													"nodeType": "Block",
													"src": "8288:36:8",
													"statements": [
														{
															"expression": {
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1068,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "8302:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1071,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1074,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1050,
													"src": "8340:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1048,
												"id": 1075,
												"nodeType": "Return",
												"src": "8333:13:8"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8067:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8078:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8089:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8110:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$657",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1043,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1042,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 657,
														"src": "8110:8:8"
													},
													"referencedDeclaration": 657,
													"src": "8110:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$657",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:8"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8152:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:8"
									},
									"scope": 1700,
									"src": "8051:302:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "8644:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1085,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "8658:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1091,
												"nodeType": "IfStatement",
												"src": "8654:45:8",
												"trueBody": {
													"id": 1090,
													"nodeType": "Block",
													"src": "8666:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1084,
															"id": 1089,
															"nodeType": "Return",
															"src": "8680:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1093
												],
												"declarations": [
													{
														"constant": false,
														"id": 1093,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "9378:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1092,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1096,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1080,
																			"src": "9406:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1095,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1356,
																			1391
																		],
																		"referencedDeclaration": 1356,
																		"src": "9401:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1100,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:8"
											},
											{
												"id": 1187,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:8",
												"statements": [
													{
														"expression": {
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1103,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "9839:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1104,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1093,
																				"src": "9849:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1105,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1080,
																					"src": "9858:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1106,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1093,
																					"src": "9862:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1109,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1113,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:8"
													},
													{
														"expression": {
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1114,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "9888:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1115,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1093,
																				"src": "9898:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1116,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1080,
																					"src": "9907:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1117,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1093,
																					"src": "9911:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1120,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1124,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:8"
													},
													{
														"expression": {
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1125,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "9937:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1126,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1093,
																				"src": "9947:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1127,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1080,
																					"src": "9956:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1128,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1093,
																					"src": "9960:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1131,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1135,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:8"
													},
													{
														"expression": {
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1136,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "9986:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1137,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1093,
																				"src": "9996:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1138,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1080,
																					"src": "10005:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1139,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1093,
																					"src": "10009:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1142,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1146,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:8"
													},
													{
														"expression": {
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1147,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "10035:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1148,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1093,
																				"src": "10045:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1149,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1080,
																					"src": "10054:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1150,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1093,
																					"src": "10058:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1153,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1157,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:8"
													},
													{
														"expression": {
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1158,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "10084:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1159,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1093,
																				"src": "10094:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1160,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1080,
																					"src": "10103:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1161,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1093,
																					"src": "10107:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1164,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1168,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:8"
													},
													{
														"expression": {
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1169,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "10133:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1170,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1093,
																				"src": "10143:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1171,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1080,
																					"src": "10152:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1172,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1093,
																					"src": "10156:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1175,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1179,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1181,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "10193:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1182,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "10201:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1183,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "10205:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1180,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "10189:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1084,
														"id": 1186,
														"nodeType": "Return",
														"src": "10182:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "8601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:8"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "8635:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:8"
									},
									"scope": 1700,
									"src": "8587:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "10405:164:8",
										"statements": [
											{
												"id": 1222,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:8",
												"statements": [
													{
														"assignments": [
															1201
														],
														"declarations": [
															{
																"constant": false,
																"id": 1201,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1222,
																"src": "10439:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1200,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1205,
														"initialValue": {
															"arguments": [
																{
																	"id": 1203,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "10461:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1202,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1189,
																	1224
																],
																"referencedDeclaration": 1189,
																"src": "10456:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "10484:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1208,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1195,
																						"src": "10511:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$657",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$657",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1207,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1699,
																					"src": "10494:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$657_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1214,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1212,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1210,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1201,
																						"src": "10524:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1211,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1201,
																						"src": "10533:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1213,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1192,
																					"src": "10542:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1219,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1199,
														"id": 1221,
														"nodeType": "Return",
														"src": "10477:75:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "10343:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "10354:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$657",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1193,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 657,
														"src": "10354:8:8"
													},
													"referencedDeclaration": 657,
													"src": "10354:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$657",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:8"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "10396:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:8"
									},
									"scope": 1700,
									"src": "10329:240:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "10760:922:8",
										"statements": [
											{
												"assignments": [
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1355,
														"src": "10770:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1232,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1235,
												"initialValue": {
													"hexValue": "30",
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:8"
											},
											{
												"id": 1352,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1236,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "10826:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1250,
														"nodeType": "IfStatement",
														"src": "10822:99:8",
														"trueBody": {
															"id": 1249,
															"nodeType": "Block",
															"src": "10844:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1241,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "10862:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1244,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:8"
																},
																{
																	"expression": {
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1245,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "10893:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1248,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1251,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "10938:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1265,
														"nodeType": "IfStatement",
														"src": "10934:96:8",
														"trueBody": {
															"id": 1264,
															"nodeType": "Block",
															"src": "10955:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1256,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "10973:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1259,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:8"
																},
																{
																	"expression": {
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1260,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "11003:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1263,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1266,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "11047:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1280,
														"nodeType": "IfStatement",
														"src": "11043:96:8",
														"trueBody": {
															"id": 1279,
															"nodeType": "Block",
															"src": "11064:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1271,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "11082:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1274,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:8"
																},
																{
																	"expression": {
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1275,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "11112:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1278,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1281,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "11156:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1295,
														"nodeType": "IfStatement",
														"src": "11152:96:8",
														"trueBody": {
															"id": 1294,
															"nodeType": "Block",
															"src": "11173:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1286,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "11191:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1289,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:8"
																},
																{
																	"expression": {
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1290,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "11221:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1293,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1296,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "11265:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1310,
														"nodeType": "IfStatement",
														"src": "11261:93:8",
														"trueBody": {
															"id": 1309,
															"nodeType": "Block",
															"src": "11281:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1301,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "11299:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1304,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:8"
																},
																{
																	"expression": {
																		"id": 1307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1305,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "11328:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1308,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "11371:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1325,
														"nodeType": "IfStatement",
														"src": "11367:93:8",
														"trueBody": {
															"id": 1324,
															"nodeType": "Block",
															"src": "11387:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1316,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "11405:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1319,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:8"
																},
																{
																	"expression": {
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1320,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "11434:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1323,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1326,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "11477:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1340,
														"nodeType": "IfStatement",
														"src": "11473:93:8",
														"trueBody": {
															"id": 1339,
															"nodeType": "Block",
															"src": "11493:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1331,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "11511:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1334,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:8"
																},
																{
																	"expression": {
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1335,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "11540:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1338,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1341,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "11583:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1351,
														"nodeType": "IfStatement",
														"src": "11579:64:8",
														"trueBody": {
															"id": 1350,
															"nodeType": "Block",
															"src": "11599:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1346,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1233,
																			"src": "11617:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1349,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1353,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1233,
													"src": "11669:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1231,
												"id": 1354,
												"nodeType": "Return",
												"src": "11662:13:8"
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:8",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "10713:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:8"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "10751:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:8"
									},
									"scope": 1700,
									"src": "10699:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "11915:168:8",
										"statements": [
											{
												"id": 1389,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:8",
												"statements": [
													{
														"assignments": [
															1368
														],
														"declarations": [
															{
																"constant": false,
																"id": 1368,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1389,
																"src": "11949:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1367,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1372,
														"initialValue": {
															"arguments": [
																{
																	"id": 1370,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "11971:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1369,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1356,
																	1391
																],
																"referencedDeclaration": 1356,
																"src": "11966:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1373,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "11998:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1375,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1362,
																						"src": "12025:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$657",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$657",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1374,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1699,
																					"src": "12008:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$657_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1379,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1377,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1378,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1368,
																						"src": "12043:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1380,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1359,
																					"src": "12052:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1386,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1366,
														"id": 1388,
														"nodeType": "Return",
														"src": "11991:75:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "11849:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "11864:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$657",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1361,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1360,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 657,
														"src": "11864:8:8"
													},
													"referencedDeclaration": 657,
													"src": "11864:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$657",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:8"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "11906:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:8"
									},
									"scope": 1700,
									"src": "11835:248:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "12276:854:8",
										"statements": [
											{
												"assignments": [
													1400
												],
												"declarations": [
													{
														"constant": false,
														"id": 1400,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1519,
														"src": "12286:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1399,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"hexValue": "30",
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:8"
											},
											{
												"id": 1516,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1403,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "12342:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1419,
														"nodeType": "IfStatement",
														"src": "12338:103:8",
														"trueBody": {
															"id": 1418,
															"nodeType": "Block",
															"src": "12361:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1408,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "12379:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1413,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:8"
																},
																{
																	"expression": {
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1414,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "12414:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1417,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1420,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "12458:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1436,
														"nodeType": "IfStatement",
														"src": "12454:103:8",
														"trueBody": {
															"id": 1435,
															"nodeType": "Block",
															"src": "12477:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1425,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "12495:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1430,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:8"
																},
																{
																	"expression": {
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1431,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "12530:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1434,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1437,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "12574:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1453,
														"nodeType": "IfStatement",
														"src": "12570:103:8",
														"trueBody": {
															"id": 1452,
															"nodeType": "Block",
															"src": "12593:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1442,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "12611:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1447,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:8"
																},
																{
																	"expression": {
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1448,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "12646:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1451,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1454,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "12690:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1470,
														"nodeType": "IfStatement",
														"src": "12686:100:8",
														"trueBody": {
															"id": 1469,
															"nodeType": "Block",
															"src": "12708:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1459,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "12726:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1464,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:8"
																},
																{
																	"expression": {
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1465,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "12760:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1468,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1471,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "12803:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1487,
														"nodeType": "IfStatement",
														"src": "12799:100:8",
														"trueBody": {
															"id": 1486,
															"nodeType": "Block",
															"src": "12821:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "12839:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1481,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:8"
																},
																{
																	"expression": {
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1482,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "12873:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1485,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1488,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "12916:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1504,
														"nodeType": "IfStatement",
														"src": "12912:100:8",
														"trueBody": {
															"id": 1503,
															"nodeType": "Block",
															"src": "12934:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1493,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "12952:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1498,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:8"
																},
																{
																	"expression": {
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1499,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "12986:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1502,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1505,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "13029:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1515,
														"nodeType": "IfStatement",
														"src": "13025:66:8",
														"trueBody": {
															"id": 1514,
															"nodeType": "Block",
															"src": "13047:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1510,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "13065:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1513,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1517,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1400,
													"src": "13117:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1518,
												"nodeType": "Return",
												"src": "13110:13:8"
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:8",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "12229:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:8"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "12267:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:8"
									},
									"scope": 1700,
									"src": "12214:916:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "13365:170:8",
										"statements": [
											{
												"id": 1553,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:8",
												"statements": [
													{
														"assignments": [
															1532
														],
														"declarations": [
															{
																"constant": false,
																"id": 1532,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1553,
																"src": "13399:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1531,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1536,
														"initialValue": {
															"arguments": [
																{
																	"id": 1534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "13422:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1533,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1520,
																	1555
																],
																"referencedDeclaration": 1520,
																"src": "13416:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1537,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "13449:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1539,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1526,
																						"src": "13476:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$657",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$657",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1538,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1699,
																					"src": "13459:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$657_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1541,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1542,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1532,
																						"src": "13495:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1544,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1523,
																					"src": "13504:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1530,
														"id": 1552,
														"nodeType": "Return",
														"src": "13442:76:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "13299:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "13314:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$657",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1524,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 657,
														"src": "13314:8:8"
													},
													"referencedDeclaration": 657,
													"src": "13314:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$657",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:8"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "13356:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:8"
									},
									"scope": 1700,
									"src": "13284:251:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "13855:600:8",
										"statements": [
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1641,
														"src": "13865:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"hexValue": "30",
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:8"
											},
											{
												"id": 1638,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1567,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "13921:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1581,
														"nodeType": "IfStatement",
														"src": "13917:98:8",
														"trueBody": {
															"id": 1580,
															"nodeType": "Block",
															"src": "13939:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1572,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "13957:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1575,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:8"
																},
																{
																	"expression": {
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1576,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "13988:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1579,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1582,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "14032:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1596,
														"nodeType": "IfStatement",
														"src": "14028:95:8",
														"trueBody": {
															"id": 1595,
															"nodeType": "Block",
															"src": "14049:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1587,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "14067:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1590,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:8"
																},
																{
																	"expression": {
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1591,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "14097:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1594,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1597,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "14140:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1611,
														"nodeType": "IfStatement",
														"src": "14136:95:8",
														"trueBody": {
															"id": 1610,
															"nodeType": "Block",
															"src": "14157:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1602,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "14175:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1605,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:8"
																},
																{
																	"expression": {
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "14205:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1609,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1612,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "14248:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1626,
														"nodeType": "IfStatement",
														"src": "14244:95:8",
														"trueBody": {
															"id": 1625,
															"nodeType": "Block",
															"src": "14265:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "14283:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1620,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:8"
																},
																{
																	"expression": {
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1621,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "14313:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1624,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "14356:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1637,
														"nodeType": "IfStatement",
														"src": "14352:64:8",
														"trueBody": {
															"id": 1636,
															"nodeType": "Block",
															"src": "14372:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1632,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "14390:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1635,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1639,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1564,
													"src": "14442:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1562,
												"id": 1640,
												"nodeType": "Return",
												"src": "14435:13:8"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:8",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "13808:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:8"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "13846:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:8"
									},
									"scope": 1700,
									"src": "13792:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "14692:177:8",
										"statements": [
											{
												"id": 1678,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:8",
												"statements": [
													{
														"assignments": [
															1654
														],
														"declarations": [
															{
																"constant": false,
																"id": 1654,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1678,
																"src": "14726:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1653,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1658,
														"initialValue": {
															"arguments": [
																{
																	"id": 1656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1645,
																	"src": "14750:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1655,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1642,
																	1680
																],
																"referencedDeclaration": 1642,
																"src": "14743:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1659,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "14777:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1661,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1648,
																						"src": "14804:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$657",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$657",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1660,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1699,
																					"src": "14787:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$657_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1663,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1666,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1664,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1654,
																									"src": "14823:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1665,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1667,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1669,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1645,
																					"src": "14838:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1675,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1652,
														"id": 1677,
														"nodeType": "Return",
														"src": "14770:82:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:8",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "14626:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "14641:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$657",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1647,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1646,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 657,
														"src": "14641:8:8"
													},
													"referencedDeclaration": 657,
													"src": "14641:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$657",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:8"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "14683:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:8"
									},
									"scope": 1700,
									"src": "14610:259:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "15067:48:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1691,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "15090:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$657",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$657",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1689,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1688,
												"id": 1697,
												"nodeType": "Return",
												"src": "15077:31:8"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:8",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "15019:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$657",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1682,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 657,
														"src": "15019:8:8"
													},
													"referencedDeclaration": 657,
													"src": "15019:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$657",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:8"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "15061:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1686,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:8"
									},
									"scope": 1700,
									"src": "14993:122:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1701,
							"src": "203:14914:8",
							"usedErrors": [
								652
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1805
						]
					},
					"id": 1806,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1702,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1703,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:9",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1805,
							"linearizedBaseContracts": [
								1805
							],
							"name": "SignedMath",
							"nameLocation": "224:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "376:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1713,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "393:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1714,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "397:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1717,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "405:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:9",
													"trueExpression": {
														"id": 1716,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "401:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1719,
												"nodeType": "Return",
												"src": "386:20:9"
											}
										]
									},
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:9",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "325:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1705,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "335:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1707,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:9"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "368:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1710,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:9"
									},
									"scope": 1805,
									"src": "312:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "555:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1731,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "572:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1732,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "576:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1735,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "584:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:9",
													"trueExpression": {
														"id": 1734,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "580:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1730,
												"id": 1737,
												"nodeType": "Return",
												"src": "565:20:9"
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:9",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "504:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1723,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "514:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1725,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:9"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "547:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1728,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:9"
									},
									"scope": 1805,
									"src": "491:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "797:162:9",
										"statements": [
											{
												"assignments": [
													1750
												],
												"declarations": [
													{
														"constant": false,
														"id": 1750,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "859:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1749,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1763,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1751,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "871:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1752,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "875:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1754,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1755,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1742,
																				"src": "882:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1756,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "886:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1758,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1761,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1764,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "911:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1769,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1750,
																						"src": "931:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1768,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1767,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1765,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1774,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1742,
																				"src": "945:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1775,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "949:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1777,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1779,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1748,
												"id": 1781,
												"nodeType": "Return",
												"src": "904:48:9"
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:9",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "746:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1741,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "756:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1743,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:9"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "789:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1746,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:9"
									},
									"scope": 1805,
									"src": "729:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "1103:158:9",
										"statements": [
											{
												"id": 1802,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1793,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1786,
																			"src": "1228:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:9",
																		"subExpression": {
																			"id": 1797,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1786,
																			"src": "1242:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:9",
																	"trueExpression": {
																		"id": 1796,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1786,
																		"src": "1237:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1791,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1790,
														"id": 1801,
														"nodeType": "Return",
														"src": "1213:31:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:9",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1061:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1785,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:9"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1094:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:9"
									},
									"scope": 1805,
									"src": "1048:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1806,
							"src": "216:1047:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:9"
				},
				"id": 9
			},
			"DirectDonation.sol": {
				"ast": {
					"absolutePath": "DirectDonation.sol",
					"exportedSymbols": {
						"Base64": [
							275
						],
						"Context": [
							305
						],
						"Counters": [
							379
						],
						"DirectDonation": [
							2766
						],
						"Donated": [
							2826
						],
						"ILSP7": [
							228
						],
						"InsufficientBalance": [
							2774
						],
						"Log": [
							2788
						],
						"Math": [
							1700
						],
						"NotAuthorizedAmount": [
							2780
						],
						"Ownable": [
							2974
						],
						"Pausable": [
							3091
						],
						"SignedMath": [
							1805
						],
						"Strings": [
							634
						],
						"TokenAdded": [
							2800
						],
						"TokenRemoved": [
							2814
						],
						"TokenUpdated": [
							2808
						],
						"Unauthorized": [
							2770
						],
						"feeUpdated": [
							2792
						]
					},
					"id": 2767,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1807,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
							"file": "@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol",
							"id": 1809,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2767,
							"sourceUnit": 54,
							"src": "58:119:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1808,
										"name": "ILSP7DigitalAsset",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 228,
										"src": "66:17:10",
										"typeDescriptions": {}
									},
									"local": "ILSP7",
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 1810,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2767,
							"sourceUnit": 380,
							"src": "178:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1811,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2767,
							"sourceUnit": 635,
							"src": "231:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Base64.sol",
							"file": "@openzeppelin/contracts/utils/Base64.sol",
							"id": 1813,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2767,
							"sourceUnit": 276,
							"src": "283:64:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1812,
										"name": "Base64",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 275,
										"src": "291:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "_event.sol",
							"file": "./_event.sol",
							"id": 1814,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2767,
							"sourceUnit": 2827,
							"src": "348:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_error.sol",
							"file": "./_error.sol",
							"id": 1815,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2767,
							"sourceUnit": 2781,
							"src": "371:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_pausable.sol",
							"file": "./_pausable.sol",
							"id": 1816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2767,
							"sourceUnit": 3092,
							"src": "394:25:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_ownable.sol",
							"file": "./_ownable.sol",
							"id": 1817,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2767,
							"sourceUnit": 2975,
							"src": "420:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 1820,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "706:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 1821,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "710:6:10",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "706:10:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 1819,
										"name": "Ownable",
										"nameLocations": [
											"698:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2974,
										"src": "698:7:10"
									},
									"id": 1822,
									"nodeType": "InheritanceSpecifier",
									"src": "698:19:10"
								},
								{
									"baseName": {
										"id": 1823,
										"name": "Pausable",
										"nameLocations": [
											"719:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3091,
										"src": "719:8:10"
									},
									"id": 1824,
									"nodeType": "InheritanceSpecifier",
									"src": "719:8:10"
								}
							],
							"canonicalName": "DirectDonation",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1818,
								"nodeType": "StructuredDocumentation",
								"src": "446:225:10",
								"text": "@title DirectDonation\n @author Aratta Labs\n @notice Direct donation mechanism\n @dev You will find the deployed contract addresses in the repo\n @custom:emoji ðŸ’¸\n @custom:security-contact atenyun@gmail.com"
							},
							"fullyImplemented": true,
							"id": 2766,
							"linearizedBaseContracts": [
								2766,
								3091,
								2974,
								305
							],
							"name": "DirectDonation",
							"nameLocation": "680:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1828,
									"libraryName": {
										"id": 1825,
										"name": "Counters",
										"nameLocations": [
											"740:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "740:8:10"
									},
									"nodeType": "UsingForDirective",
									"src": "734:36:10",
									"typeName": {
										"id": 1827,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1826,
											"name": "Counters.Counter",
											"nameLocations": [
												"753:8:10",
												"762:7:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 311,
											"src": "753:16:10"
										},
										"referencedDeclaration": 311,
										"src": "753:16:10",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f7edbbac",
									"id": 1831,
									"mutability": "mutable",
									"name": "_donateCounter",
									"nameLocation": "799:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2766,
									"src": "775:38:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$311_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1830,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1829,
											"name": "Counters.Counter",
											"nameLocations": [
												"775:8:10",
												"784:7:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 311,
											"src": "775:16:10"
										},
										"referencedDeclaration": 311,
										"src": "775:16:10",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9230b2bc",
									"id": 1834,
									"mutability": "mutable",
									"name": "_tokenCounter",
									"nameLocation": "843:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2766,
									"src": "819:37:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$311_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1833,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1832,
											"name": "Counters.Counter",
											"nameLocations": [
												"819:8:10",
												"828:7:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 311,
											"src": "819:16:10"
										},
										"referencedDeclaration": 311,
										"src": "819:16:10",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$311_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1837,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "868:3:10",
									"nodeType": "VariableDeclaration",
									"scope": 2766,
									"src": "862:13:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1835,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "862:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1836,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "874:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "DirectDonation.DonationStruct",
									"id": 1850,
									"members": [
										{
											"constant": false,
											"id": 1839,
											"mutability": "mutable",
											"name": "donator",
											"nameLocation": "922:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1850,
											"src": "914:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1838,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "914:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1841,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "947:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 1850,
											"src": "939:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1840,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1843,
											"mutability": "mutable",
											"name": "appId",
											"nameLocation": "972:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1850,
											"src": "964:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1842,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "964:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1845,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "995:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 1850,
											"src": "987:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1844,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "987:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1847,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "1019:2:10",
											"nodeType": "VariableDeclaration",
											"scope": 1850,
											"src": "1011:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1846,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1011:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1849,
											"mutability": "mutable",
											"name": "dt",
											"nameLocation": "1039:2:10",
											"nodeType": "VariableDeclaration",
											"scope": 1850,
											"src": "1031:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1848,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1031:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DonationStruct",
									"nameLocation": "889:14:10",
									"nodeType": "StructDefinition",
									"scope": 2766,
									"src": "882:166:10",
									"visibility": "public"
								},
								{
									"canonicalName": "DirectDonation.TokenStruct",
									"id": 1857,
									"members": [
										{
											"constant": false,
											"id": 1852,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1091:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 1857,
											"src": "1083:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1851,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1083:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1854,
											"mutability": "mutable",
											"name": "pause",
											"nameLocation": "1110:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1857,
											"src": "1105:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1853,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1105:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1856,
											"mutability": "mutable",
											"name": "dt",
											"nameLocation": "1133:2:10",
											"nodeType": "VariableDeclaration",
											"scope": 1857,
											"src": "1125:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1855,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1125:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenStruct",
									"nameLocation": "1061:11:10",
									"nodeType": "StructDefinition",
									"scope": 2766,
									"src": "1054:88:10",
									"visibility": "public"
								},
								{
									"canonicalName": "DirectDonation.TokenExportStruct",
									"id": 1866,
									"members": [
										{
											"constant": false,
											"id": 1859,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "1191:2:10",
											"nodeType": "VariableDeclaration",
											"scope": 1866,
											"src": "1183:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1858,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1183:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1861,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1211:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 1866,
											"src": "1203:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1860,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1203:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1863,
											"mutability": "mutable",
											"name": "pause",
											"nameLocation": "1230:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1866,
											"src": "1225:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1862,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1225:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1865,
											"mutability": "mutable",
											"name": "dt",
											"nameLocation": "1253:2:10",
											"nodeType": "VariableDeclaration",
											"scope": 1866,
											"src": "1245:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1864,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1245:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenExportStruct",
									"nameLocation": "1155:17:10",
									"nodeType": "StructDefinition",
									"scope": 2766,
									"src": "1148:114:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75e6e600",
									"id": 1871,
									"mutability": "mutable",
									"name": "donation",
									"nameLocation": "1310:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2766,
									"src": "1268:50:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DonationStruct_$1850_storage_$",
										"typeString": "mapping(bytes32 => struct DirectDonation.DonationStruct)"
									},
									"typeName": {
										"id": 1870,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1867,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1276:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1268:34:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DonationStruct_$1850_storage_$",
											"typeString": "mapping(bytes32 => struct DirectDonation.DonationStruct)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1869,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1868,
												"name": "DonationStruct",
												"nameLocations": [
													"1287:14:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1850,
												"src": "1287:14:10"
											},
											"referencedDeclaration": 1850,
											"src": "1287:14:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
												"typeString": "struct DirectDonation.DonationStruct"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6062e1a",
									"id": 1876,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1363:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 2766,
									"src": "1324:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
										"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct)"
									},
									"typeName": {
										"id": 1875,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1872,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1332:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1324:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
											"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1874,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1873,
												"name": "TokenStruct",
												"nameLocations": [
													"1343:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1857,
												"src": "1343:11:10"
											},
											"referencedDeclaration": 1857,
											"src": "1343:11:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenStruct_$1857_storage_ptr",
												"typeString": "struct DirectDonation.TokenStruct"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "1389:141:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1879,
															"name": "_tokenCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "1399:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$311_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1413:9:10",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "1399:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$311_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "1399:25:10"
											},
											{
												"expression": {
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1884,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "1434:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
															}
														},
														"id": 1891,
														"indexExpression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1887,
																			"name": "_tokenCounter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1834,
																			"src": "1448:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$311_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 1888,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1462:7:10",
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 323,
																		"src": "1448:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1448:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1440:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1885,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1440:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1440:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1434:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
															"typeString": "struct DirectDonation.TokenStruct storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1496:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1488:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1893,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1488:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1488:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1500:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"expression": {
																	"id": 1898,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1507:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1513:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1507:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1892,
															"name": "TokenStruct",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "1476:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenStruct_$1857_storage_ptr_$",
																"typeString": "type(struct DirectDonation.TokenStruct storage pointer)"
															}
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1476:47:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenStruct_$1857_memory_ptr",
															"typeString": "struct DirectDonation.TokenStruct memory"
														}
													},
													"src": "1434:89:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
														"typeString": "struct DirectDonation.TokenStruct storage ref"
													}
												},
												"id": 1902,
												"nodeType": "ExpressionStatement",
												"src": "1434:89:10"
											}
										]
									},
									"id": 1904,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1386:2:10"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1389:0:10"
									},
									"scope": 2766,
									"src": "1375:155:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "1644:316:10",
										"statements": [
											{
												"assignments": [
													1916
												],
												"declarations": [
													{
														"constant": false,
														"id": 1916,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1681:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1981,
														"src": "1654:33:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DirectDonation.TokenExportStruct[]"
														},
														"typeName": {
															"baseType": {
																"id": 1914,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1913,
																	"name": "TokenExportStruct",
																	"nameLocations": [
																		"1654:17:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1866,
																	"src": "1654:17:10"
																},
																"referencedDeclaration": 1866,
																"src": "1654:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenExportStruct_$1866_storage_ptr",
																	"typeString": "struct DirectDonation.TokenExportStruct"
																}
															},
															"id": 1915,
															"nodeType": "ArrayTypeName",
															"src": "1654:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenExportStruct_$1866_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.TokenExportStruct[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1925,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1921,
																	"name": "_tokenCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "1714:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$311_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1728:7:10",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 323,
																"src": "1714:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1714:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1690:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct DirectDonation.TokenExportStruct memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1918,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1917,
																	"name": "TokenExportStruct",
																	"nameLocations": [
																		"1694:17:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1866,
																	"src": "1694:17:10"
																},
																"referencedDeclaration": 1866,
																"src": "1694:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenExportStruct_$1866_storage_ptr",
																	"typeString": "struct DirectDonation.TokenExportStruct"
																}
															},
															"id": 1919,
															"nodeType": "ArrayTypeName",
															"src": "1694:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenExportStruct_$1866_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.TokenExportStruct[]"
															}
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1690:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.TokenExportStruct memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1654:84:10"
											},
											{
												"body": {
													"expression": {
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"id": 1938,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1916,
																"src": "1802:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct DirectDonation.TokenExportStruct memory[] memory"
																}
															},
															"id": 1940,
															"indexExpression": {
																"id": 1939,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1927,
																"src": "1809:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "1802:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenExportStruct_$1866_memory_ptr",
																"typeString": "struct DirectDonation.TokenExportStruct memory"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1944,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1927,
																				"src": "1840:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1844:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "1840:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1832:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 1942,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "1832:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1832:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"baseExpression": {
																			"id": 1948,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "1848:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																				"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
																			}
																		},
																		"id": 1955,
																		"indexExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1953,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1951,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1927,
																						"src": "1862:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1952,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1866:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "1862:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1854:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 1949,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "1854:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1854:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1848:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
																			"typeString": "struct DirectDonation.TokenStruct storage ref"
																		}
																	},
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1870:4:10",
																	"memberName": "addr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1852,
																	"src": "1848:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"baseExpression": {
																			"id": 1957,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "1876:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																				"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
																			}
																		},
																		"id": 1964,
																		"indexExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1962,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1960,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1927,
																						"src": "1890:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1961,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1894:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "1890:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1882:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 1958,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "1882:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1882:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1876:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
																			"typeString": "struct DirectDonation.TokenStruct storage ref"
																		}
																	},
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1898:5:10",
																	"memberName": "pause",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1854,
																	"src": "1876:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"expression": {
																		"baseExpression": {
																			"id": 1966,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "1905:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																				"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
																			}
																		},
																		"id": 1973,
																		"indexExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1971,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1969,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1927,
																						"src": "1919:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1970,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1923:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "1919:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1911:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 1967,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "1911:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1911:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1905:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
																			"typeString": "struct DirectDonation.TokenStruct storage ref"
																		}
																	},
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1927:2:10",
																	"memberName": "dt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1856,
																	"src": "1905:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1941,
																"name": "TokenExportStruct",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1866,
																"src": "1814:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_TokenExportStruct_$1866_storage_ptr_$",
																	"typeString": "type(struct DirectDonation.TokenExportStruct storage pointer)"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1814:116:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenExportStruct_$1866_memory_ptr",
																"typeString": "struct DirectDonation.TokenExportStruct memory"
															}
														},
														"src": "1802:128:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenExportStruct_$1866_memory_ptr",
															"typeString": "struct DirectDonation.TokenExportStruct memory"
														}
													},
													"id": 1977,
													"nodeType": "ExpressionStatement",
													"src": "1802:128:10"
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1930,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "1768:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1931,
																"name": "_tokenCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "1772:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$311_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1786:7:10",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 323,
															"src": "1772:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1772:23:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1768:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1978,
												"initializationExpression": {
													"assignments": [
														1927
													],
													"declarations": [
														{
															"constant": false,
															"id": 1927,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1761:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1978,
															"src": "1753:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1926,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1753:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1929,
													"initialValue": {
														"hexValue": "30",
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1765:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1753:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1797:3:10",
														"subExpression": {
															"id": 1935,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "1797:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1937,
													"nodeType": "ExpressionStatement",
													"src": "1797:3:10"
												},
												"nodeType": "ForStatement",
												"src": "1748:182:10"
											},
											{
												"expression": {
													"id": 1979,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1916,
													"src": "1947:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.TokenExportStruct memory[] memory"
													}
												},
												"functionReturnParameters": 1911,
												"id": 1980,
												"nodeType": "Return",
												"src": "1940:13:10"
											}
										]
									},
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "1536:25:10",
										"text": "@notice Get token list"
									},
									"functionSelector": "273cbaa0",
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenList",
									"nameLocation": "1575:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1587:2:10"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "list",
												"nameLocation": "1638:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "1611:31:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenExportStruct_$1866_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DirectDonation.TokenExportStruct[]"
												},
												"typeName": {
													"baseType": {
														"id": 1908,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1907,
															"name": "TokenExportStruct",
															"nameLocations": [
																"1611:17:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1866,
															"src": "1611:17:10"
														},
														"referencedDeclaration": 1866,
														"src": "1611:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenExportStruct_$1866_storage_ptr",
															"typeString": "struct DirectDonation.TokenExportStruct"
														}
													},
													"id": 1909,
													"nodeType": "ArrayTypeName",
													"src": "1611:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenExportStruct_$1866_storage_$dyn_storage_ptr",
														"typeString": "struct DirectDonation.TokenExportStruct[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:33:10"
									},
									"scope": 2766,
									"src": "1566:394:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "2072:370:10",
										"statements": [
											{
												"assignments": [
													1996
												],
												"declarations": [
													{
														"constant": false,
														"id": 1996,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2103:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2055,
														"src": "2082:27:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DirectDonation.TokenStruct[]"
														},
														"typeName": {
															"baseType": {
																"id": 1994,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1993,
																	"name": "TokenStruct",
																	"nameLocations": [
																		"2082:11:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1857,
																	"src": "2082:11:10"
																},
																"referencedDeclaration": 1857,
																"src": "2082:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenStruct_$1857_storage_ptr",
																	"typeString": "struct DirectDonation.TokenStruct"
																}
															},
															"id": 1995,
															"nodeType": "ArrayTypeName",
															"src": "2082:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenStruct_$1857_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.TokenStruct[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2005,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2001,
																	"name": "_tokenCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "2130:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$311_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2144:7:10",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 323,
																"src": "2130:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2130:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2112:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct DirectDonation.TokenStruct memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1998,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1997,
																	"name": "TokenStruct",
																	"nameLocations": [
																		"2116:11:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1857,
																	"src": "2116:11:10"
																},
																"referencedDeclaration": 1857,
																"src": "2116:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenStruct_$1857_storage_ptr",
																	"typeString": "struct DirectDonation.TokenStruct"
																}
															},
															"id": 1999,
															"nodeType": "ArrayTypeName",
															"src": "2116:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenStruct_$1857_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.TokenStruct[]"
															}
														}
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2112:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.TokenStruct memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2082:72:10"
											},
											{
												"assignments": [
													2007
												],
												"declarations": [
													{
														"constant": false,
														"id": 2007,
														"mutability": "mutable",
														"name": "counter",
														"nameLocation": "2173:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2055,
														"src": "2165:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2006,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2165:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2009,
												"initialValue": {
													"hexValue": "30",
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2183:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2165:19:10"
											},
											{
												"body": {
													"id": 2051,
													"nodeType": "Block",
													"src": "2248:164:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2022,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2266:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																				"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
																			}
																		},
																		"id": 2029,
																		"indexExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2027,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2025,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2011,
																						"src": "2280:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2026,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2284:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "2280:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2272:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 2023,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "2272:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2272:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2266:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
																			"typeString": "struct DirectDonation.TokenStruct storage ref"
																		}
																	},
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2288:4:10",
																	"memberName": "addr",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1852,
																	"src": "2266:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2031,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "2296:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2266:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2050,
															"nodeType": "IfStatement",
															"src": "2262:140:10",
															"trueBody": {
																"id": 2049,
																"nodeType": "Block",
																"src": "2303:99:10",
																"statements": [
																	{
																		"expression": {
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2033,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1996,
																					"src": "2321:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct DirectDonation.TokenStruct memory[] memory"
																					}
																				},
																				"id": 2035,
																				"indexExpression": {
																					"id": 2034,
																					"name": "counter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2007,
																					"src": "2328:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2321:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenStruct_$1857_memory_ptr",
																					"typeString": "struct DirectDonation.TokenStruct memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2036,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1876,
																					"src": "2339:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																						"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
																					}
																				},
																				"id": 2043,
																				"indexExpression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2041,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2039,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2011,
																								"src": "2353:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 2040,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2357:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "2353:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2038,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2345:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2037,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "2345:7:10",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2042,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2345:14:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2339:21:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
																					"typeString": "struct DirectDonation.TokenStruct storage ref"
																				}
																			},
																			"src": "2321:39:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenStruct_$1857_memory_ptr",
																				"typeString": "struct DirectDonation.TokenStruct memory"
																			}
																		},
																		"id": 2045,
																		"nodeType": "ExpressionStatement",
																		"src": "2321:39:10"
																	},
																	{
																		"expression": {
																			"id": 2047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2378:9:10",
																			"subExpression": {
																				"id": 2046,
																				"name": "counter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "2378:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2048,
																		"nodeType": "ExpressionStatement",
																		"src": "2378:9:10"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2014,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2011,
														"src": "2214:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2015,
																"name": "_tokenCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "2218:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$311_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2232:7:10",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 323,
															"src": "2218:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 2017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2218:23:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2214:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2052,
												"initializationExpression": {
													"assignments": [
														2011
													],
													"declarations": [
														{
															"constant": false,
															"id": 2011,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2207:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2052,
															"src": "2199:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2010,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2199:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2013,
													"initialValue": {
														"hexValue": "30",
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2211:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2199:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2243:3:10",
														"subExpression": {
															"id": 2019,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "2243:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2021,
													"nodeType": "ExpressionStatement",
													"src": "2243:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2194:218:10"
											},
											{
												"expression": {
													"id": 2053,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1996,
													"src": "2429:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.TokenStruct memory[] memory"
													}
												},
												"functionReturnParameters": 1991,
												"id": 2054,
												"nodeType": "Return",
												"src": "2422:13:10"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "1966:20:10",
										"text": "@notice Get token"
									},
									"functionSelector": "59770438",
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getToken",
									"nameLocation": "2000:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "2017:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "2009:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:10"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "list",
												"nameLocation": "2066:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "2045:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenStruct_$1857_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DirectDonation.TokenStruct[]"
												},
												"typeName": {
													"baseType": {
														"id": 1988,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1987,
															"name": "TokenStruct",
															"nameLocations": [
																"2045:11:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1857,
															"src": "2045:11:10"
														},
														"referencedDeclaration": 1857,
														"src": "2045:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenStruct_$1857_storage_ptr",
															"typeString": "struct DirectDonation.TokenStruct"
														}
													},
													"id": 1989,
													"nodeType": "ArrayTypeName",
													"src": "2045:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenStruct_$1857_storage_$dyn_storage_ptr",
														"typeString": "struct DirectDonation.TokenStruct[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2044:27:10"
									},
									"scope": 2766,
									"src": "1991:451:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "2556:220:10",
										"statements": [
											{
												"assignments": [
													2068
												],
												"declarations": [
													{
														"constant": false,
														"id": 2068,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2590:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2106,
														"src": "2566:30:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DirectDonation.DonationStruct[]"
														},
														"typeName": {
															"baseType": {
																"id": 2066,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2065,
																	"name": "DonationStruct",
																	"nameLocations": [
																		"2566:14:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1850,
																	"src": "2566:14:10"
																},
																"referencedDeclaration": 1850,
																"src": "2566:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
																	"typeString": "struct DirectDonation.DonationStruct"
																}
															},
															"id": 2067,
															"nodeType": "ArrayTypeName",
															"src": "2566:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.DonationStruct[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2077,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2073,
																	"name": "_donateCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "2620:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$311_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2635:7:10",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 323,
																"src": "2620:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2620:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2599:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct DirectDonation.DonationStruct memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2070,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2069,
																	"name": "DonationStruct",
																	"nameLocations": [
																		"2603:14:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1850,
																	"src": "2603:14:10"
																},
																"referencedDeclaration": 1850,
																"src": "2603:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
																	"typeString": "struct DirectDonation.DonationStruct"
																}
															},
															"id": 2071,
															"nodeType": "ArrayTypeName",
															"src": "2603:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.DonationStruct[]"
															}
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2599:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.DonationStruct memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2566:79:10"
											},
											{
												"body": {
													"expression": {
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"id": 2090,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "2710:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct DirectDonation.DonationStruct memory[] memory"
																}
															},
															"id": 2092,
															"indexExpression": {
																"id": 2091,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2079,
																"src": "2717:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "2710:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DonationStruct_$1850_memory_ptr",
																"typeString": "struct DirectDonation.DonationStruct memory"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"baseExpression": {
																"id": 2093,
																"name": "donation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1871,
																"src": "2722:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DonationStruct_$1850_storage_$",
																	"typeString": "mapping(bytes32 => struct DirectDonation.DonationStruct storage ref)"
																}
															},
															"id": 2100,
															"indexExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2096,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2079,
																			"src": "2739:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2743:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2739:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2731:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 2094,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2731:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2731:14:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2722:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DonationStruct_$1850_storage",
																"typeString": "struct DirectDonation.DonationStruct storage ref"
															}
														},
														"src": "2710:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DonationStruct_$1850_memory_ptr",
															"typeString": "struct DirectDonation.DonationStruct memory"
														}
													},
													"id": 2102,
													"nodeType": "ExpressionStatement",
													"src": "2710:36:10"
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2082,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "2675:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2083,
																"name": "_donateCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "2679:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$311_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 2084,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2694:7:10",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 323,
															"src": "2679:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 2085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2679:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2675:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2103,
												"initializationExpression": {
													"assignments": [
														2079
													],
													"declarations": [
														{
															"constant": false,
															"id": 2079,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2668:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2103,
															"src": "2660:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2078,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2660:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2081,
													"initialValue": {
														"hexValue": "30",
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2672:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2660:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2705:3:10",
														"subExpression": {
															"id": 2087,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "2705:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2089,
													"nodeType": "ExpressionStatement",
													"src": "2705:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2655:91:10"
											},
											{
												"expression": {
													"id": 2104,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2068,
													"src": "2763:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.DonationStruct memory[] memory"
													}
												},
												"functionReturnParameters": 2063,
												"id": 2105,
												"nodeType": "Return",
												"src": "2756:13:10"
											}
										]
									},
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "2448:25:10",
										"text": "@notice Get token list"
									},
									"functionSelector": "443910e0",
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDonationList",
									"nameLocation": "2487:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2502:2:10"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "list",
												"nameLocation": "2550:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "2526:28:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DirectDonation.DonationStruct[]"
												},
												"typeName": {
													"baseType": {
														"id": 2060,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2059,
															"name": "DonationStruct",
															"nameLocations": [
																"2526:14:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1850,
															"src": "2526:14:10"
														},
														"referencedDeclaration": 1850,
														"src": "2526:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
															"typeString": "struct DirectDonation.DonationStruct"
														}
													},
													"id": 2061,
													"nodeType": "ArrayTypeName",
													"src": "2526:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
														"typeString": "struct DirectDonation.DonationStruct[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2525:30:10"
									},
									"scope": 2766,
									"src": "2478:298:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "2924:399:10",
										"statements": [
											{
												"assignments": [
													2121
												],
												"declarations": [
													{
														"constant": false,
														"id": 2121,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2958:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2183,
														"src": "2934:30:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DirectDonation.DonationStruct[]"
														},
														"typeName": {
															"baseType": {
																"id": 2119,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2118,
																	"name": "DonationStruct",
																	"nameLocations": [
																		"2934:14:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1850,
																	"src": "2934:14:10"
																},
																"referencedDeclaration": 1850,
																"src": "2934:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
																	"typeString": "struct DirectDonation.DonationStruct"
																}
															},
															"id": 2120,
															"nodeType": "ArrayTypeName",
															"src": "2934:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.DonationStruct[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2130,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2126,
																	"name": "_donateCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "2988:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$311_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 2127,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3003:7:10",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 323,
																"src": "2988:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2988:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2967:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct DirectDonation.DonationStruct memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2123,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2122,
																	"name": "DonationStruct",
																	"nameLocations": [
																		"2971:14:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1850,
																	"src": "2971:14:10"
																},
																"referencedDeclaration": 1850,
																"src": "2971:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
																	"typeString": "struct DirectDonation.DonationStruct"
																}
															},
															"id": 2124,
															"nodeType": "ArrayTypeName",
															"src": "2971:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.DonationStruct[]"
															}
														}
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2967:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.DonationStruct memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2934:79:10"
											},
											{
												"assignments": [
													2132
												],
												"declarations": [
													{
														"constant": false,
														"id": 2132,
														"mutability": "mutable",
														"name": "counter",
														"nameLocation": "3032:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2183,
														"src": "3024:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2131,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3024:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2134,
												"initialValue": {
													"hexValue": "30",
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3042:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3024:19:10"
											},
											{
												"body": {
													"id": 2179,
													"nodeType": "Block",
													"src": "3108:185:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2147,
																			"name": "donation",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1871,
																			"src": "3126:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DonationStruct_$1850_storage_$",
																				"typeString": "mapping(bytes32 => struct DirectDonation.DonationStruct storage ref)"
																			}
																		},
																		"id": 2154,
																		"indexExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2152,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2150,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2136,
																						"src": "3143:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2151,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3147:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3143:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3135:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 2148,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3135:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3135:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3126:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DonationStruct_$1850_storage",
																			"typeString": "struct DirectDonation.DonationStruct storage ref"
																		}
																	},
																	"id": 2155,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3151:7:10",
																	"memberName": "donator",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1839,
																	"src": "3126:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2158,
																			"name": "_donator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2110,
																			"src": "3170:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3162:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2156,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3162:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3162:17:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3126:53:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2178,
															"nodeType": "IfStatement",
															"src": "3122:161:10",
															"trueBody": {
																"id": 2177,
																"nodeType": "Block",
																"src": "3181:102:10",
																"statements": [
																	{
																		"expression": {
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2161,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2121,
																					"src": "3199:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct DirectDonation.DonationStruct memory[] memory"
																					}
																				},
																				"id": 2163,
																				"indexExpression": {
																					"id": 2162,
																					"name": "counter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2132,
																					"src": "3206:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3199:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DonationStruct_$1850_memory_ptr",
																					"typeString": "struct DirectDonation.DonationStruct memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2164,
																					"name": "donation",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1871,
																					"src": "3217:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DonationStruct_$1850_storage_$",
																						"typeString": "mapping(bytes32 => struct DirectDonation.DonationStruct storage ref)"
																					}
																				},
																				"id": 2171,
																				"indexExpression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2169,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2167,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2136,
																								"src": "3234:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 2168,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3238:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "3234:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3226:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2165,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "3226:7:10",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2170,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3226:14:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3217:24:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DonationStruct_$1850_storage",
																					"typeString": "struct DirectDonation.DonationStruct storage ref"
																				}
																			},
																			"src": "3199:42:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DonationStruct_$1850_memory_ptr",
																				"typeString": "struct DirectDonation.DonationStruct memory"
																			}
																		},
																		"id": 2173,
																		"nodeType": "ExpressionStatement",
																		"src": "3199:42:10"
																	},
																	{
																		"expression": {
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3259:9:10",
																			"subExpression": {
																				"id": 2174,
																				"name": "counter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2132,
																				"src": "3259:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2176,
																		"nodeType": "ExpressionStatement",
																		"src": "3259:9:10"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2139,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "3073:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2140,
																"name": "_donateCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "3077:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$311_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3092:7:10",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 323,
															"src": "3077:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3077:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3073:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2180,
												"initializationExpression": {
													"assignments": [
														2136
													],
													"declarations": [
														{
															"constant": false,
															"id": 2136,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3066:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2180,
															"src": "3058:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2135,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3058:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2138,
													"initialValue": {
														"hexValue": "30",
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3070:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3058:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3103:3:10",
														"subExpression": {
															"id": 2144,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "3103:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2146,
													"nodeType": "ExpressionStatement",
													"src": "3103:3:10"
												},
												"nodeType": "ForStatement",
												"src": "3053:240:10"
											},
											{
												"expression": {
													"id": 2181,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2121,
													"src": "3310:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.DonationStruct memory[] memory"
													}
												},
												"functionReturnParameters": 2116,
												"id": 2182,
												"nodeType": "Return",
												"src": "3303:13:10"
											}
										]
									},
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "2782:47:10",
										"text": "@notice Get donation list, filter by donator"
									},
									"functionSelector": "410a1d32",
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDonation",
									"nameLocation": "2843:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "_donator",
												"nameLocation": "2863:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "2855:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:18:10"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "list",
												"nameLocation": "2918:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "2894:28:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DirectDonation.DonationStruct[]"
												},
												"typeName": {
													"baseType": {
														"id": 2113,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2112,
															"name": "DonationStruct",
															"nameLocations": [
																"2894:14:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1850,
															"src": "2894:14:10"
														},
														"referencedDeclaration": 1850,
														"src": "2894:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
															"typeString": "struct DirectDonation.DonationStruct"
														}
													},
													"id": 2114,
													"nodeType": "ArrayTypeName",
													"src": "2894:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
														"typeString": "struct DirectDonation.DonationStruct[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2893:30:10"
									},
									"scope": 2766,
									"src": "2834:489:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2257,
										"nodeType": "Block",
										"src": "3478:389:10",
										"statements": [
											{
												"assignments": [
													2198
												],
												"declarations": [
													{
														"constant": false,
														"id": 2198,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "3512:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2257,
														"src": "3488:30:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DirectDonation.DonationStruct[]"
														},
														"typeName": {
															"baseType": {
																"id": 2196,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2195,
																	"name": "DonationStruct",
																	"nameLocations": [
																		"3488:14:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1850,
																	"src": "3488:14:10"
																},
																"referencedDeclaration": 1850,
																"src": "3488:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
																	"typeString": "struct DirectDonation.DonationStruct"
																}
															},
															"id": 2197,
															"nodeType": "ArrayTypeName",
															"src": "3488:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.DonationStruct[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2207,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2203,
																	"name": "_donateCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "3542:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$311_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3557:7:10",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 323,
																"src": "3542:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3542:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3521:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct DirectDonation.DonationStruct memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2200,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2199,
																	"name": "DonationStruct",
																	"nameLocations": [
																		"3525:14:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1850,
																	"src": "3525:14:10"
																},
																"referencedDeclaration": 1850,
																"src": "3525:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
																	"typeString": "struct DirectDonation.DonationStruct"
																}
															},
															"id": 2201,
															"nodeType": "ArrayTypeName",
															"src": "3525:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.DonationStruct[]"
															}
														}
													},
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3521:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.DonationStruct memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3488:79:10"
											},
											{
												"assignments": [
													2209
												],
												"declarations": [
													{
														"constant": false,
														"id": 2209,
														"mutability": "mutable",
														"name": "counter",
														"nameLocation": "3586:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2257,
														"src": "3578:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3578:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2211,
												"initialValue": {
													"hexValue": "30",
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3596:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3578:19:10"
											},
											{
												"body": {
													"id": 2253,
													"nodeType": "Block",
													"src": "3662:176:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2224,
																			"name": "donation",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1871,
																			"src": "3680:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DonationStruct_$1850_storage_$",
																				"typeString": "mapping(bytes32 => struct DirectDonation.DonationStruct storage ref)"
																			}
																		},
																		"id": 2231,
																		"indexExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2229,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2227,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2213,
																						"src": "3697:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2228,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3701:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3697:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3689:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 2225,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3689:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3689:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3680:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DonationStruct_$1850_storage",
																			"typeString": "struct DirectDonation.DonationStruct storage ref"
																		}
																	},
																	"id": 2232,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3705:7:10",
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1841,
																	"src": "3680:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2233,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "3716:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3680:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2252,
															"nodeType": "IfStatement",
															"src": "3676:152:10",
															"trueBody": {
																"id": 2251,
																"nodeType": "Block",
																"src": "3726:102:10",
																"statements": [
																	{
																		"expression": {
																			"id": 2246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2235,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2198,
																					"src": "3744:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct DirectDonation.DonationStruct memory[] memory"
																					}
																				},
																				"id": 2237,
																				"indexExpression": {
																					"id": 2236,
																					"name": "counter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2209,
																					"src": "3751:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3744:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DonationStruct_$1850_memory_ptr",
																					"typeString": "struct DirectDonation.DonationStruct memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2238,
																					"name": "donation",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1871,
																					"src": "3762:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DonationStruct_$1850_storage_$",
																						"typeString": "mapping(bytes32 => struct DirectDonation.DonationStruct storage ref)"
																					}
																				},
																				"id": 2245,
																				"indexExpression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2243,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2241,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2213,
																								"src": "3779:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 2242,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3783:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "3779:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2240,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3771:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2239,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "3771:7:10",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2244,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3771:14:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3762:24:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DonationStruct_$1850_storage",
																					"typeString": "struct DirectDonation.DonationStruct storage ref"
																				}
																			},
																			"src": "3744:42:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DonationStruct_$1850_memory_ptr",
																				"typeString": "struct DirectDonation.DonationStruct memory"
																			}
																		},
																		"id": 2247,
																		"nodeType": "ExpressionStatement",
																		"src": "3744:42:10"
																	},
																	{
																		"expression": {
																			"id": 2249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3804:9:10",
																			"subExpression": {
																				"id": 2248,
																				"name": "counter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2209,
																				"src": "3804:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2250,
																		"nodeType": "ExpressionStatement",
																		"src": "3804:9:10"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2216,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3627:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2217,
																"name": "_donateCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "3631:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$311_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 2218,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3646:7:10",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 323,
															"src": "3631:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 2219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3631:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2254,
												"initializationExpression": {
													"assignments": [
														2213
													],
													"declarations": [
														{
															"constant": false,
															"id": 2213,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3620:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2254,
															"src": "3612:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2212,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3612:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2215,
													"initialValue": {
														"hexValue": "30",
														"id": 2214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3612:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3657:3:10",
														"subExpression": {
															"id": 2221,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "3657:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2223,
													"nodeType": "ExpressionStatement",
													"src": "3657:3:10"
												},
												"nodeType": "ForStatement",
												"src": "3607:231:10"
											},
											{
												"expression": {
													"id": 2255,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2198,
													"src": "3854:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.DonationStruct memory[] memory"
													}
												},
												"functionReturnParameters": 2193,
												"id": 2256,
												"nodeType": "Return",
												"src": "3847:13:10"
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "3329:47:10",
										"text": "@notice Get donation list, filter by tokenId"
									},
									"functionSelector": "3d496362",
									"id": 2258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDonationByToekn",
									"nameLocation": "3390:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3417:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "3409:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2186,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3408:18:10"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "list",
												"nameLocation": "3472:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "3448:28:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DirectDonation.DonationStruct[]"
												},
												"typeName": {
													"baseType": {
														"id": 2190,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2189,
															"name": "DonationStruct",
															"nameLocations": [
																"3448:14:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1850,
															"src": "3448:14:10"
														},
														"referencedDeclaration": 1850,
														"src": "3448:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
															"typeString": "struct DirectDonation.DonationStruct"
														}
													},
													"id": 2191,
													"nodeType": "ArrayTypeName",
													"src": "3448:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
														"typeString": "struct DirectDonation.DonationStruct[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3447:30:10"
									},
									"scope": 2766,
									"src": "3381:486:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2331,
										"nodeType": "Block",
										"src": "4020:386:10",
										"statements": [
											{
												"assignments": [
													2272
												],
												"declarations": [
													{
														"constant": false,
														"id": 2272,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4054:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2331,
														"src": "4030:30:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct DirectDonation.DonationStruct[]"
														},
														"typeName": {
															"baseType": {
																"id": 2270,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2269,
																	"name": "DonationStruct",
																	"nameLocations": [
																		"4030:14:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1850,
																	"src": "4030:14:10"
																},
																"referencedDeclaration": 1850,
																"src": "4030:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
																	"typeString": "struct DirectDonation.DonationStruct"
																}
															},
															"id": 2271,
															"nodeType": "ArrayTypeName",
															"src": "4030:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.DonationStruct[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2281,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2277,
																	"name": "_donateCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "4084:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$311_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 2278,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4099:7:10",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 323,
																"src": "4084:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4084:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4063:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct DirectDonation.DonationStruct memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2274,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2273,
																	"name": "DonationStruct",
																	"nameLocations": [
																		"4067:14:10"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1850,
																	"src": "4067:14:10"
																},
																"referencedDeclaration": 1850,
																"src": "4067:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
																	"typeString": "struct DirectDonation.DonationStruct"
																}
															},
															"id": 2275,
															"nodeType": "ArrayTypeName",
															"src": "4067:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
																"typeString": "struct DirectDonation.DonationStruct[]"
															}
														}
													},
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4063:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.DonationStruct memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4030:79:10"
											},
											{
												"assignments": [
													2283
												],
												"declarations": [
													{
														"constant": false,
														"id": 2283,
														"mutability": "mutable",
														"name": "counter",
														"nameLocation": "4128:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2331,
														"src": "4120:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4120:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2285,
												"initialValue": {
													"hexValue": "30",
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4138:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4120:19:10"
											},
											{
												"body": {
													"id": 2327,
													"nodeType": "Block",
													"src": "4204:172:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2298,
																			"name": "donation",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1871,
																			"src": "4222:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DonationStruct_$1850_storage_$",
																				"typeString": "mapping(bytes32 => struct DirectDonation.DonationStruct storage ref)"
																			}
																		},
																		"id": 2305,
																		"indexExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2301,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2287,
																						"src": "4239:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4243:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4239:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4231:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes32_$",
																					"typeString": "type(bytes32)"
																				},
																				"typeName": {
																					"id": 2299,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "4231:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4231:14:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4222:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DonationStruct_$1850_storage",
																			"typeString": "struct DirectDonation.DonationStruct storage ref"
																		}
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4247:5:10",
																	"memberName": "appId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1843,
																	"src": "4222:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2307,
																	"name": "_appId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "4256:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "4222:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2326,
															"nodeType": "IfStatement",
															"src": "4218:148:10",
															"trueBody": {
																"id": 2325,
																"nodeType": "Block",
																"src": "4264:102:10",
																"statements": [
																	{
																		"expression": {
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2309,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "4282:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct DirectDonation.DonationStruct memory[] memory"
																					}
																				},
																				"id": 2311,
																				"indexExpression": {
																					"id": 2310,
																					"name": "counter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2283,
																					"src": "4289:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4282:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DonationStruct_$1850_memory_ptr",
																					"typeString": "struct DirectDonation.DonationStruct memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2312,
																					"name": "donation",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1871,
																					"src": "4300:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DonationStruct_$1850_storage_$",
																						"typeString": "mapping(bytes32 => struct DirectDonation.DonationStruct storage ref)"
																					}
																				},
																				"id": 2319,
																				"indexExpression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2317,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2315,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2287,
																								"src": "4317:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 2316,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4321:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "4317:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 2314,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4309:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 2313,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "4309:7:10",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2318,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4309:14:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4300:24:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DonationStruct_$1850_storage",
																					"typeString": "struct DirectDonation.DonationStruct storage ref"
																				}
																			},
																			"src": "4282:42:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DonationStruct_$1850_memory_ptr",
																				"typeString": "struct DirectDonation.DonationStruct memory"
																			}
																		},
																		"id": 2321,
																		"nodeType": "ExpressionStatement",
																		"src": "4282:42:10"
																	},
																	{
																		"expression": {
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "4342:9:10",
																			"subExpression": {
																				"id": 2322,
																				"name": "counter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "4342:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2324,
																		"nodeType": "ExpressionStatement",
																		"src": "4342:9:10"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2290,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2287,
														"src": "4169:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2291,
																"name": "_donateCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "4173:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$311_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4188:7:10",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 323,
															"src": "4173:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4173:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4169:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2328,
												"initializationExpression": {
													"assignments": [
														2287
													],
													"declarations": [
														{
															"constant": false,
															"id": 2287,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4162:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2328,
															"src": "4154:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2286,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4154:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2289,
													"initialValue": {
														"hexValue": "30",
														"id": 2288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4166:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4154:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4199:3:10",
														"subExpression": {
															"id": 2295,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2287,
															"src": "4199:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2297,
													"nodeType": "ExpressionStatement",
													"src": "4199:3:10"
												},
												"nodeType": "ForStatement",
												"src": "4149:227:10"
											},
											{
												"expression": {
													"id": 2329,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2272,
													"src": "4393:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct DirectDonation.DonationStruct memory[] memory"
													}
												},
												"functionReturnParameters": 2267,
												"id": 2330,
												"nodeType": "Return",
												"src": "4386:13:10"
											}
										]
									},
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "3873:47:10",
										"text": "@notice Get donation list, filter by tokenId"
									},
									"functionSelector": "cacf11e7",
									"id": 2332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDonationByAppId",
									"nameLocation": "3934:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "_appId",
												"nameLocation": "3961:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "3953:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2260,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3952:16:10"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "list",
												"nameLocation": "4014:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "3990:28:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DirectDonation.DonationStruct[]"
												},
												"typeName": {
													"baseType": {
														"id": 2264,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2263,
															"name": "DonationStruct",
															"nameLocations": [
																"3990:14:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1850,
															"src": "3990:14:10"
														},
														"referencedDeclaration": 1850,
														"src": "3990:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DonationStruct_$1850_storage_ptr",
															"typeString": "struct DirectDonation.DonationStruct"
														}
													},
													"id": 2265,
													"nodeType": "ArrayTypeName",
													"src": "3990:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DonationStruct_$1850_storage_$dyn_storage_ptr",
														"typeString": "struct DirectDonation.DonationStruct[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3989:30:10"
									},
									"scope": 2766,
									"src": "3925:481:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2497,
										"nodeType": "Block",
										"src": "4645:1058:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2352,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2345,
														"src": "4659:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4687:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 2356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4679:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2355,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4679:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4679:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4671:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 2353,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4671:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4671:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4659:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2459,
													"nodeType": "Block",
													"src": "4937:476:10",
													"statements": [
														{
															"assignments": [
																2392
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2392,
																	"mutability": "mutable",
																	"name": "authorizedAmount",
																	"nameLocation": "4959:16:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2459,
																	"src": "4951:24:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2391,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4951:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2407,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2402,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5034:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DirectDonation_$2766",
																					"typeString": "contract DirectDonation"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DirectDonation_$2766",
																					"typeString": "contract DirectDonation"
																				}
																			],
																			"id": 2401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5026:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5026:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5026:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2404,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "5041:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5041:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"id": 2394,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1876,
																						"src": "4984:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																							"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
																						}
																					},
																					"id": 2396,
																					"indexExpression": {
																						"id": 2395,
																						"name": "_tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2345,
																						"src": "4990:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4984:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
																						"typeString": "struct DirectDonation.TokenStruct storage ref"
																					}
																				},
																				"id": 2397,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5000:4:10",
																				"memberName": "addr",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1852,
																				"src": "4984:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2393,
																			"name": "ILSP7",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 228,
																			"src": "4978:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ILSP7DigitalAsset_$228_$",
																				"typeString": "type(contract ILSP7DigitalAsset)"
																			}
																		},
																		"id": 2398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4978:27:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILSP7DigitalAsset_$228",
																			"typeString": "contract ILSP7DigitalAsset"
																		}
																	},
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5006:19:10",
																	"memberName": "authorizedAmountFor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "4978:47:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4978:76:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4951:103:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2408,
																	"name": "authorizedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "5072:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2409,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2339,
																	"src": "5092:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2416,
															"nodeType": "IfStatement",
															"src": "5068:86:10",
															"trueBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2412,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "5128:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2413,
																			"name": "authorizedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2392,
																			"src": "5137:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2411,
																		"name": "NotAuthorizedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2780,
																		"src": "5108:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																			"typeString": "function (uint256,uint256) pure"
																		}
																	},
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5108:46:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2415,
																"nodeType": "RevertStatement",
																"src": "5101:53:10"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2424,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "5206:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5206:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2428,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2337,
																				"src": "5228:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5220:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2426,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5220:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5220:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2431,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2339,
																				"src": "5249:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 2434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "313030",
																					"id": 2432,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5258:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2433,
																					"name": "fee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1837,
																					"src": "5264:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "5258:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 2430,
																			"name": "calcPercentage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "5234:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5234:34:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2436,
																		"name": "_force",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "5270:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"id": 2437,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2343,
																		"src": "5278:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"id": 2418,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1876,
																						"src": "5175:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																							"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
																						}
																					},
																					"id": 2420,
																					"indexExpression": {
																						"id": 2419,
																						"name": "_tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2345,
																						"src": "5181:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5175:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
																						"typeString": "struct DirectDonation.TokenStruct storage ref"
																					}
																				},
																				"id": 2421,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5191:4:10",
																				"memberName": "addr",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1852,
																				"src": "5175:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2417,
																			"name": "ILSP7",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 228,
																			"src": "5169:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ILSP7DigitalAsset_$228_$",
																				"typeString": "type(contract ILSP7DigitalAsset)"
																			}
																		},
																		"id": 2422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5169:27:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILSP7DigitalAsset_$228",
																			"typeString": "contract ILSP7DigitalAsset"
																		}
																	},
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5197:8:10",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 198,
																	"src": "5169:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,bool,bytes memory) external"
																	}
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5169:115:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2439,
															"nodeType": "ExpressionStatement",
															"src": "5169:115:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2447,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "5335:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5335:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2449,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2894,
																			"src": "5349:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:7:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2452,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2339,
																				"src": "5373:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2453,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1837,
																				"src": "5382:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 2451,
																			"name": "calcPercentage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "5358:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5358:28:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2455,
																		"name": "_force",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "5388:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"id": 2456,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2343,
																		"src": "5396:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"id": 2441,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1876,
																						"src": "5304:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																							"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
																						}
																					},
																					"id": 2443,
																					"indexExpression": {
																						"id": 2442,
																						"name": "_tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2345,
																						"src": "5310:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5304:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
																						"typeString": "struct DirectDonation.TokenStruct storage ref"
																					}
																				},
																				"id": 2444,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5320:4:10",
																				"memberName": "addr",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1852,
																				"src": "5304:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2440,
																			"name": "ILSP7",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 228,
																			"src": "5298:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ILSP7DigitalAsset_$228_$",
																				"typeString": "type(contract ILSP7DigitalAsset)"
																			}
																		},
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5298:27:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ILSP7DigitalAsset_$228",
																			"typeString": "contract ILSP7DigitalAsset"
																		}
																	},
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5326:8:10",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 198,
																	"src": "5298:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,bool,bytes memory) external"
																	}
																},
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5298:104:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2458,
															"nodeType": "ExpressionStatement",
															"src": "5298:104:10"
														}
													]
												},
												"id": 2460,
												"nodeType": "IfStatement",
												"src": "4655:758:10",
												"trueBody": {
													"id": 2390,
													"nodeType": "Block",
													"src": "4692:239:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2361,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4710:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4714:5:10",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "4710:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4723:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4710:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2370,
															"nodeType": "IfStatement",
															"src": "4706:57:10",
															"trueBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2366,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4753:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4757:5:10",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "4753:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2365,
																		"name": "InsufficientBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2774,
																		"src": "4733:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																			"typeString": "function (uint256) pure"
																		}
																	},
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4733:30:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2369,
																"nodeType": "RevertStatement",
																"src": "4726:37:10"
															}
														},
														{
															"assignments": [
																2372,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2372,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "4783:7:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2390,
																	"src": "4778:12:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2371,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "4778:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 2384,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4848:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"id": 2373,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2337,
																			"src": "4796:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4800:4:10",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "4796:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"arguments": [
																				{
																					"id": 2376,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2339,
																					"src": "4827:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 2379,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "313030",
																						"id": 2377,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4836:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 2378,
																						"name": "fee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1837,
																						"src": "4842:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "4836:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 2375,
																				"name": "calcPercentage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2525,
																				"src": "4812:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4812:34:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "4796:51:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4796:55:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4777:74:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2386,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2372,
																		"src": "4873:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e6420457468657220746f20746865206d616e61676572",
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4882:37:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694",
																			"typeString": "literal_string \"Failed to send Ether to the manager\""
																		},
																		"value": "Failed to send Ether to the manager"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9d2336eff04ab664ff8788695a4cb60dd1393b6d9046be075e8918d3b28e1694",
																			"typeString": "literal_string \"Failed to send Ether to the manager\""
																		}
																	],
																	"id": 2385,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4865:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:55:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2389,
															"nodeType": "ExpressionStatement",
															"src": "4865:55:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2461,
															"name": "_donateCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "5423:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$311_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2463,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5438:9:10",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "5423:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$311_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2465,
												"nodeType": "ExpressionStatement",
												"src": "5423:26:10"
											},
											{
												"expression": {
													"id": 2484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2466,
															"name": "donation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "5459:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_DonationStruct_$1850_storage_$",
																"typeString": "mapping(bytes32 => struct DirectDonation.DonationStruct storage ref)"
															}
														},
														"id": 2473,
														"indexExpression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2469,
																			"name": "_donateCounter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "5476:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$311_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 2470,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5491:7:10",
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 323,
																		"src": "5476:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 2471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5476:24:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5468:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2467,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5468:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5468:33:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5459:43:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DonationStruct_$1850_storage",
															"typeString": "struct DirectDonation.DonationStruct storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2475,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "5520:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5520:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2477,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2345,
																"src": "5534:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2478,
																"name": "_appId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2335,
																"src": "5544:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2479,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "5552:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2480,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2337,
																"src": "5561:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 2481,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5566:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5572:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5566:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2474,
															"name": "DonationStruct",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "5505:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_DonationStruct_$1850_storage_ptr_$",
																"typeString": "type(struct DirectDonation.DonationStruct storage pointer)"
															}
														},
														"id": 2483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5505:77:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DonationStruct_$1850_memory_ptr",
															"typeString": "struct DirectDonation.DonationStruct memory"
														}
													},
													"src": "5459:123:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DonationStruct_$1850_storage",
														"typeString": "struct DirectDonation.DonationStruct storage ref"
													}
												},
												"id": 2485,
												"nodeType": "ExpressionStatement",
												"src": "5459:123:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2487,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "5629:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5629:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2489,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "5643:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2490,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "5648:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2491,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2345,
															"src": "5657:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2492,
															"name": "_appId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2335,
															"src": "5667:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2486,
														"name": "Donated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2826,
														"src": "5621:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,bytes32,bytes32)"
														}
													},
													"id": 2493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5621:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2494,
												"nodeType": "EmitStatement",
												"src": "5616:58:10"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5692:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2351,
												"id": 2496,
												"nodeType": "Return",
												"src": "5685:11:10"
											}
										]
									},
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "4412:17:10",
										"text": "@notice Donate"
									},
									"functionSelector": "b2f7c6e0",
									"id": 2498,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2347,
												"name": "whenNotPaused",
												"nameLocations": [
													"4616:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3016,
												"src": "4616:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4616:13:10"
										}
									],
									"name": "donate",
									"nameLocation": "4443:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "_appId",
												"nameLocation": "4467:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "4459:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2334,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4491:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "4483:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4512:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "4504:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4504:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "_force",
												"nameLocation": "4534:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "4529:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4529:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "4563:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "4550:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4550:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4586:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "4578:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:151:10"
									},
									"returnParameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "4639:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4639:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4638:6:10"
									},
									"scope": 2766,
									"src": "4434:1269:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2524,
										"nodeType": "Block",
										"src": "5930:84:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2509,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2501,
																			"src": "5949:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2510,
																			"name": "bps",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2503,
																			"src": "5958:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5949:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2512,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5948:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5966:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "5948:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5940:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5940:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2516,
												"nodeType": "ExpressionStatement",
												"src": "5940:30:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2517,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2501,
																	"src": "5988:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2518,
																	"name": "bps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2503,
																	"src": "5997:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5988:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2520,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5987:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6004:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "5987:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2507,
												"id": 2523,
												"nodeType": "Return",
												"src": "5980:27:10"
											}
										]
									},
									"documentation": {
										"id": 2499,
										"nodeType": "StructuredDocumentation",
										"src": "5709:133:10",
										"text": "@notice calcPercentage percentage\n@param amount The total amount\n@param bps The precentage\n@return percentage"
									},
									"functionSelector": "a37b06d4",
									"id": 2525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcPercentage",
									"nameLocation": "5856:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5879:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "5871:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5871:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "bps",
												"nameLocation": "5895:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "5887:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5887:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5870:29:10"
									},
									"returnParameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "5921:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5921:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5920:9:10"
									},
									"scope": 2766,
									"src": "5847:167:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2581,
										"nodeType": "Block",
										"src": "6116:311:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2535,
															"name": "_tokenCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "6126:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$311_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2537,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6140:9:10",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "6126:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$311_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6126:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2539,
												"nodeType": "ExpressionStatement",
												"src": "6126:25:10"
											},
											{
												"expression": {
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2540,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "6161:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
															}
														},
														"id": 2547,
														"indexExpression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2543,
																			"name": "_tokenCounter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1834,
																			"src": "6175:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$311_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 2544,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6189:7:10",
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 323,
																		"src": "6175:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6175:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6167:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2541,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6167:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6167:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6161:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
															"typeString": "struct DirectDonation.TokenStruct storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2551,
																		"name": "_addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2528,
																		"src": "6223:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6215:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2549,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6215:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6215:14:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6231:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"expression": {
																	"id": 2554,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6238:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6244:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6238:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2548,
															"name": "TokenStruct",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "6203:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenStruct_$1857_storage_ptr_$",
																"typeString": "type(struct DirectDonation.TokenStruct storage pointer)"
															}
														},
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6203:51:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenStruct_$1857_memory_ptr",
															"typeString": "struct DirectDonation.TokenStruct memory"
														}
													},
													"src": "6161:93:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
														"typeString": "struct DirectDonation.TokenStruct storage ref"
													}
												},
												"id": 2558,
												"nodeType": "ExpressionStatement",
												"src": "6161:93:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2562,
																			"name": "_tokenCounter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1834,
																			"src": "6316:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$311_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6330:7:10",
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 323,
																		"src": "6316:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6316:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6308:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2560,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6308:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6308:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 2568,
																	"name": "_addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "6350:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6342:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2566,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6342:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6342:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2570,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "6358:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6358:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2559,
														"name": "TokenAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2800,
														"src": "6297:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address,address)"
														}
													},
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6297:74:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2573,
												"nodeType": "EmitStatement",
												"src": "6292:79:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2576,
																	"name": "_tokenCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "6396:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$311_storage",
																		"typeString": "struct Counters.Counter storage ref"
																	}
																},
																"id": 2577,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6410:7:10",
																"memberName": "current",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 323,
																"src": "6396:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																	"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																}
															},
															"id": 2578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6396:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6388:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 2574,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6388:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2534,
												"id": 2580,
												"nodeType": "Return",
												"src": "6381:39:10"
											}
										]
									},
									"documentation": {
										"id": 2526,
										"nodeType": "StructuredDocumentation",
										"src": "6020:23:10",
										"text": "@notice Add a token"
									},
									"functionSelector": "d48bfca7",
									"id": 2582,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2531,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2530,
												"name": "onlyOwner",
												"nameLocations": [
													"6088:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2885,
												"src": "6088:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6088:9:10"
										}
									],
									"name": "addToken",
									"nameLocation": "6057:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "6074:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "6066:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6066:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6065:15:10"
									},
									"returnParameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "6107:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6107:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6106:9:10"
									},
									"scope": 2766,
									"src": "6048:379:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2617,
										"nodeType": "Block",
										"src": "6538:227:10",
										"statements": [
											{
												"expression": {
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6548:22:10",
													"subExpression": {
														"baseExpression": {
															"id": 2592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "6555:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
															}
														},
														"id": 2594,
														"indexExpression": {
															"id": 2593,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2585,
															"src": "6561:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6555:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
															"typeString": "struct DirectDonation.TokenStruct storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2596,
												"nodeType": "ExpressionStatement",
												"src": "6548:22:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2597,
															"name": "_tokenCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "6580:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$311_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2599,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6594:9:10",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 365,
														"src": "6580:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$311_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6580:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2601,
												"nodeType": "ExpressionStatement",
												"src": "6580:25:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2605,
																			"name": "_tokenCounter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1834,
																			"src": "6679:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$311_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6693:7:10",
																		"memberName": "current",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 323,
																		"src": "6679:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																		}
																	},
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6679:23:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6671:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2603,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6671:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6671:32:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2609,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "6705:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6705:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2602,
														"name": "TokenRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2814,
														"src": "6658:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6658:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2612,
												"nodeType": "EmitStatement",
												"src": "6653:65:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2613,
															"name": "_tokenCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "6735:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$311_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2614,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6749:7:10",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 323,
														"src": "6735:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$311_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$311_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6735:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2591,
												"id": 2616,
												"nodeType": "Return",
												"src": "6728:30:10"
											}
										]
									},
									"documentation": {
										"id": 2583,
										"nodeType": "StructuredDocumentation",
										"src": "6433:26:10",
										"text": "@notice Delete a token"
									},
									"functionSelector": "f1a3b943",
									"id": 2618,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2588,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2587,
												"name": "onlyOwner",
												"nameLocations": [
													"6510:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2885,
												"src": "6510:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6510:9:10"
										}
									],
									"name": "deleteToken",
									"nameLocation": "6473:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "6493:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "6485:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2584,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6485:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6484:18:10"
									},
									"returnParameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2618,
												"src": "6529:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6529:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6528:9:10"
									},
									"scope": 2766,
									"src": "6464:301:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2655,
										"nodeType": "Block",
										"src": "6929:202:10",
										"statements": [
											{
												"expression": {
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2632,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "6939:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																	"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
																}
															},
															"id": 2634,
															"indexExpression": {
																"id": 2633,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "6945:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6939:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
																"typeString": "struct DirectDonation.TokenStruct storage ref"
															}
														},
														"id": 2635,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6955:4:10",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1852,
														"src": "6939:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2636,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2623,
														"src": "6962:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6939:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2638,
												"nodeType": "ExpressionStatement",
												"src": "6939:28:10"
											},
											{
												"expression": {
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2639,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "6977:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenStruct_$1857_storage_$",
																	"typeString": "mapping(bytes32 => struct DirectDonation.TokenStruct storage ref)"
																}
															},
															"id": 2641,
															"indexExpression": {
																"id": 2640,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "6983:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6977:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenStruct_$1857_storage",
																"typeString": "struct DirectDonation.TokenStruct storage ref"
															}
														},
														"id": 2642,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6993:5:10",
														"memberName": "pause",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1854,
														"src": "6977:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2643,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2625,
														"src": "7001:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6977:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2645,
												"nodeType": "ExpressionStatement",
												"src": "6977:30:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2647,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "7073:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2648,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2623,
															"src": "7083:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2649,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "7090:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7090:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2646,
														"name": "TokenUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2808,
														"src": "7060:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address,address)"
														}
													},
													"id": 2651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2652,
												"nodeType": "EmitStatement",
												"src": "7055:48:10"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7120:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2631,
												"id": 2654,
												"nodeType": "Return",
												"src": "7113:11:10"
											}
										]
									},
									"documentation": {
										"id": 2619,
										"nodeType": "StructuredDocumentation",
										"src": "6771:24:10",
										"text": "@notice Update token"
									},
									"functionSelector": "95a7a953",
									"id": 2656,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2628,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2627,
												"name": "onlyOwner",
												"nameLocations": [
													"6904:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2885,
												"src": "6904:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6904:9:10"
										}
									],
									"name": "updateToken",
									"nameLocation": "6809:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "6838:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "6830:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2620,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "6864:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "6856:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6856:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "_pause",
												"nameLocation": "6884:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "6879:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6879:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6820:76:10"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "6923:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6923:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6922:6:10"
									},
									"scope": 2766,
									"src": "6800:331:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2676,
										"nodeType": "Block",
										"src": "7229:79:10",
										"statements": [
											{
												"expression": {
													"id": 2668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2666,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "7239:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2667,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "7245:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7239:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2669,
												"nodeType": "ExpressionStatement",
												"src": "7239:10:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2671,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2659,
															"src": "7275:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2670,
														"name": "feeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2792,
														"src": "7264:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7264:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2673,
												"nodeType": "EmitStatement",
												"src": "7259:21:10"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2674,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7297:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2665,
												"id": 2675,
												"nodeType": "Return",
												"src": "7290:11:10"
											}
										]
									},
									"documentation": {
										"id": 2657,
										"nodeType": "StructuredDocumentation",
										"src": "7137:22:10",
										"text": "@notice Update fee"
									},
									"functionSelector": "4df71212",
									"id": 2677,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2662,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2661,
												"name": "onlyOwner",
												"nameLocations": [
													"7204:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2885,
												"src": "7204:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7204:9:10"
										}
									],
									"name": "updateToken",
									"nameLocation": "7173:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "7191:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "7185:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2658,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7185:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7184:12:10"
									},
									"returnParameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2677,
												"src": "7223:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2663,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7223:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7222:6:10"
									},
									"scope": 2766,
									"src": "7164:144:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2706,
										"nodeType": "Block",
										"src": "7445:151:10",
										"statements": [
											{
												"assignments": [
													2684
												],
												"declarations": [
													{
														"constant": false,
														"id": 2684,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7463:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2706,
														"src": "7455:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2683,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7455:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2690,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2687,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7480:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DirectDonation_$2766",
																	"typeString": "contract DirectDonation"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_DirectDonation_$2766",
																	"typeString": "contract DirectDonation"
																}
															],
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7472:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2685,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7472:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7472:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7486:7:10",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "7472:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7455:38:10"
											},
											{
												"assignments": [
													2692,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2692,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7509:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2706,
														"src": "7504:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2691,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7504:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2700,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7550:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2693,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2894,
																	"src": "7522:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7522:7:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7530:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "7522:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2696,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2684,
																"src": "7542:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "7522:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7522:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7503:50:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2702,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "7571:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c6564",
															"id": 2703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7580:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
																"typeString": "literal_string \"Failed\""
															},
															"value": "Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
																"typeString": "literal_string \"Failed\""
															}
														],
														"id": 2701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7563:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7563:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2705,
												"nodeType": "ExpressionStatement",
												"src": "7563:26:10"
											}
										]
									},
									"documentation": {
										"id": 2678,
										"nodeType": "StructuredDocumentation",
										"src": "7314:89:10",
										"text": "@notice Withdraw the balance from this contract and transfer it to the owner's address"
									},
									"functionSelector": "3ccfd60b",
									"id": 2707,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2681,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2680,
												"name": "onlyOwner",
												"nameLocations": [
													"7435:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2885,
												"src": "7435:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7435:9:10"
										}
									],
									"name": "withdraw",
									"nameLocation": "7417:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7425:2:10"
									},
									"returnParameters": {
										"id": 2682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7445:0:10"
									},
									"scope": 2766,
									"src": "7408:188:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2731,
										"nodeType": "Block",
										"src": "7750:149:10",
										"statements": [
											{
												"assignments": [
													2718,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2718,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7815:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2731,
														"src": "7810:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2717,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7810:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2725,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7853:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2719,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "7828:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7832:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "7828:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2721,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2712,
																"src": "7844:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "7828:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7828:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7809:47:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2727,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2718,
															"src": "7874:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c6564",
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7883:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
																"typeString": "literal_string \"Failed\""
															},
															"value": "Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_329b6695cc078fec6f5eaa1763a4568ff856dfa63ebfa86719d6a43e911ffb23",
																"typeString": "literal_string \"Failed\""
															}
														],
														"id": 2726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7866:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7866:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2730,
												"nodeType": "ExpressionStatement",
												"src": "7866:26:10"
											}
										]
									},
									"documentation": {
										"id": 2708,
										"nodeType": "StructuredDocumentation",
										"src": "7602:63:10",
										"text": "@notice Transfer balance from this contract to input address"
									},
									"functionSelector": "56a6d9ef",
									"id": 2732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2715,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2714,
												"name": "onlyOwner",
												"nameLocations": [
													"7740:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2885,
												"src": "7740:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7740:9:10"
										}
									],
									"name": "transferBalance",
									"nameLocation": "7679:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7711:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2732,
												"src": "7695:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7695:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7724:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2732,
												"src": "7716:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7694:38:10"
									},
									"returnParameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7750:0:10"
									},
									"scope": 2766,
									"src": "7670:229:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2744,
										"nodeType": "Block",
										"src": "8009:45:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2740,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "8034:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DirectDonation_$2766",
																	"typeString": "contract DirectDonation"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_DirectDonation_$2766",
																	"typeString": "contract DirectDonation"
																}
															],
															"id": 2739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8026:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2738,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8026:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8026:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8040:7:10",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "8026:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2737,
												"id": 2743,
												"nodeType": "Return",
												"src": "8019:28:10"
											}
										]
									},
									"documentation": {
										"id": 2733,
										"nodeType": "StructuredDocumentation",
										"src": "7905:47:10",
										"text": "@notice Return the balance of this contract"
									},
									"functionSelector": "12065fe0",
									"id": 2745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "7966:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7976:2:10"
									},
									"returnParameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2745,
												"src": "8000:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8000:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7999:9:10"
									},
									"scope": 2766,
									"src": "7957:97:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2754,
										"nodeType": "Block",
										"src": "8116:25:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2751,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3074,
														"src": "8126:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8126:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2753,
												"nodeType": "ExpressionStatement",
												"src": "8126:8:10"
											}
										]
									},
									"documentation": {
										"id": 2746,
										"nodeType": "StructuredDocumentation",
										"src": "8060:17:10",
										"text": "@notice Pause"
									},
									"functionSelector": "8456cb59",
									"id": 2755,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2749,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2748,
												"name": "onlyOwner",
												"nameLocations": [
													"8106:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2885,
												"src": "8106:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8106:9:10"
										}
									],
									"name": "pause",
									"nameLocation": "8091:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8096:2:10"
									},
									"returnParameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8116:0:10"
									},
									"scope": 2766,
									"src": "8082:59:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2764,
										"nodeType": "Block",
										"src": "8207:27:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2761,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3090,
														"src": "8217:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8217:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2763,
												"nodeType": "ExpressionStatement",
												"src": "8217:10:10"
											}
										]
									},
									"documentation": {
										"id": 2756,
										"nodeType": "StructuredDocumentation",
										"src": "8147:19:10",
										"text": "@notice Unpause"
									},
									"functionSelector": "3f4ba83a",
									"id": 2765,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2759,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2758,
												"name": "onlyOwner",
												"nameLocations": [
													"8197:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2885,
												"src": "8197:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8197:9:10"
										}
									],
									"name": "unpause",
									"nameLocation": "8180:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8187:2:10"
									},
									"returnParameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8207:0:10"
									},
									"scope": 2766,
									"src": "8171:63:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2767,
							"src": "671:7565:10",
							"usedErrors": [
								2774,
								2780,
								2840,
								2845,
								2996,
								2999
							],
							"usedEvents": [
								2792,
								2800,
								2808,
								2814,
								2826,
								2851,
								2988,
								2993
							]
						}
					],
					"src": "32:8205:10"
				},
				"id": 10
			},
			"_error.sol": {
				"ast": {
					"absolutePath": "_error.sol",
					"exportedSymbols": {
						"InsufficientBalance": [
							2774
						],
						"NotAuthorizedAmount": [
							2780
						],
						"Unauthorized": [
							2770
						]
					},
					"id": 2781,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2768,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"errorSelector": "82b42900",
							"id": 2770,
							"name": "Unauthorized",
							"nameLocation": "67:12:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 2769,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "79:2:11"
							},
							"src": "61:21:11"
						},
						{
							"errorSelector": "92665351",
							"id": 2774,
							"name": "InsufficientBalance",
							"nameLocation": "90:19:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 2773,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2772,
										"mutability": "mutable",
										"name": "msgValue",
										"nameLocation": "118:8:11",
										"nodeType": "VariableDeclaration",
										"scope": 2774,
										"src": "110:16:11",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2771,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "110:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "109:18:11"
							},
							"src": "84:44:11"
						},
						{
							"errorSelector": "a24f8be9",
							"id": 2780,
							"name": "NotAuthorizedAmount",
							"nameLocation": "136:19:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 2779,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2776,
										"mutability": "mutable",
										"name": "totalAmount",
										"nameLocation": "164:11:11",
										"nodeType": "VariableDeclaration",
										"scope": 2780,
										"src": "156:19:11",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2775,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "156:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2778,
										"mutability": "mutable",
										"name": "authorizedAmount",
										"nameLocation": "185:16:11",
										"nodeType": "VariableDeclaration",
										"scope": 2780,
										"src": "177:24:11",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2777,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "177:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "155:47:11"
							},
							"src": "130:73:11"
						}
					],
					"src": "33:170:11"
				},
				"id": 11
			},
			"_event.sol": {
				"ast": {
					"absolutePath": "_event.sol",
					"exportedSymbols": {
						"Donated": [
							2826
						],
						"Log": [
							2788
						],
						"TokenAdded": [
							2800
						],
						"TokenRemoved": [
							2814
						],
						"TokenUpdated": [
							2808
						],
						"feeUpdated": [
							2792
						]
					},
					"id": 2827,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2782,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"anonymous": false,
							"eventSelector": "dd970dd9b5bfe707922155b058a407655cb18288b807e2216442bca8ad83d6b5",
							"id": 2788,
							"name": "Log",
							"nameLocation": "67:3:12",
							"nodeType": "EventDefinition",
							"parameters": {
								"id": 2787,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2784,
										"indexed": false,
										"mutability": "mutable",
										"name": "func",
										"nameLocation": "78:4:12",
										"nodeType": "VariableDeclaration",
										"scope": 2788,
										"src": "71:11:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 2783,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "71:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2786,
										"indexed": false,
										"mutability": "mutable",
										"name": "gas",
										"nameLocation": "92:3:12",
										"nodeType": "VariableDeclaration",
										"scope": 2788,
										"src": "84:11:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2785,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "84:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "70:26:12"
							},
							"src": "61:36:12"
						},
						{
							"anonymous": false,
							"eventSelector": "b5c0fbe3c7e536e86ea6d91ec04bd37128a9bf1e981e06dae9834031254831f9",
							"id": 2792,
							"name": "feeUpdated",
							"nameLocation": "105:10:12",
							"nodeType": "EventDefinition",
							"parameters": {
								"id": 2791,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2790,
										"indexed": false,
										"mutability": "mutable",
										"name": "fee",
										"nameLocation": "122:3:12",
										"nodeType": "VariableDeclaration",
										"scope": 2792,
										"src": "116:9:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 2789,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "116:5:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "115:11:12"
							},
							"src": "99:28:12"
						},
						{
							"anonymous": false,
							"eventSelector": "0e50ffa2b79cb01d7c5404bfe02189a4c5b297cd59bc80608efdc52e3b334616",
							"id": 2800,
							"name": "TokenAdded",
							"nameLocation": "135:10:12",
							"nodeType": "EventDefinition",
							"parameters": {
								"id": 2799,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2794,
										"indexed": true,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "162:2:12",
										"nodeType": "VariableDeclaration",
										"scope": 2800,
										"src": "146:18:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2793,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "146:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2796,
										"indexed": false,
										"mutability": "mutable",
										"name": "addr",
										"nameLocation": "175:4:12",
										"nodeType": "VariableDeclaration",
										"scope": 2800,
										"src": "166:13:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2795,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "166:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2798,
										"indexed": false,
										"mutability": "mutable",
										"name": "sender",
										"nameLocation": "189:6:12",
										"nodeType": "VariableDeclaration",
										"scope": 2800,
										"src": "181:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2797,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "181:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "145:51:12"
							},
							"src": "129:68:12"
						},
						{
							"anonymous": false,
							"eventSelector": "0178cc6533afb1053a370099de33a8f4a6c10adf023eba537c33721e13dc1273",
							"id": 2808,
							"name": "TokenUpdated",
							"nameLocation": "205:12:12",
							"nodeType": "EventDefinition",
							"parameters": {
								"id": 2807,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2802,
										"indexed": true,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "234:2:12",
										"nodeType": "VariableDeclaration",
										"scope": 2808,
										"src": "218:18:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2801,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "218:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2804,
										"indexed": false,
										"mutability": "mutable",
										"name": "addr",
										"nameLocation": "246:4:12",
										"nodeType": "VariableDeclaration",
										"scope": 2808,
										"src": "238:12:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2803,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "238:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2806,
										"indexed": false,
										"mutability": "mutable",
										"name": "sender",
										"nameLocation": "260:6:12",
										"nodeType": "VariableDeclaration",
										"scope": 2808,
										"src": "252:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2805,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "252:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "217:50:12"
							},
							"src": "199:69:12"
						},
						{
							"anonymous": false,
							"eventSelector": "3afbc119e23990903d2ef3fdf9210a7b06b5f6f85438b0edfcfbf630ad594fcc",
							"id": 2814,
							"name": "TokenRemoved",
							"nameLocation": "276:12:12",
							"nodeType": "EventDefinition",
							"parameters": {
								"id": 2813,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2810,
										"indexed": true,
										"mutability": "mutable",
										"name": "_tokenId",
										"nameLocation": "305:8:12",
										"nodeType": "VariableDeclaration",
										"scope": 2814,
										"src": "289:24:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2809,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "289:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2812,
										"indexed": false,
										"mutability": "mutable",
										"name": "sender",
										"nameLocation": "323:6:12",
										"nodeType": "VariableDeclaration",
										"scope": 2814,
										"src": "315:14:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2811,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "315:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "288:42:12"
							},
							"src": "270:61:12"
						},
						{
							"anonymous": false,
							"eventSelector": "d96b33cd6e9829949c7f13033f0a8230587efc5e5d0cff68861945efded28b8a",
							"id": 2826,
							"name": "Donated",
							"nameLocation": "339:7:12",
							"nodeType": "EventDefinition",
							"parameters": {
								"id": 2825,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2816,
										"indexed": false,
										"mutability": "mutable",
										"name": "_from",
										"nameLocation": "355:5:12",
										"nodeType": "VariableDeclaration",
										"scope": 2826,
										"src": "347:13:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2815,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "347:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2818,
										"indexed": false,
										"mutability": "mutable",
										"name": "_to",
										"nameLocation": "370:3:12",
										"nodeType": "VariableDeclaration",
										"scope": 2826,
										"src": "362:11:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2817,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "362:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2820,
										"indexed": false,
										"mutability": "mutable",
										"name": "_amount",
										"nameLocation": "383:7:12",
										"nodeType": "VariableDeclaration",
										"scope": 2826,
										"src": "375:15:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 2819,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "375:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2822,
										"indexed": true,
										"mutability": "mutable",
										"name": "_tokenId",
										"nameLocation": "408:8:12",
										"nodeType": "VariableDeclaration",
										"scope": 2826,
										"src": "392:24:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2821,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "392:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 2824,
										"indexed": true,
										"mutability": "mutable",
										"name": "_appId",
										"nameLocation": "434:6:12",
										"nodeType": "VariableDeclaration",
										"scope": 2826,
										"src": "418:22:12",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2823,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "418:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "346:95:12"
							},
							"src": "333:109:12"
						}
					],
					"src": "33:409:12"
				},
				"id": 12
			},
			"_ownable.sol": {
				"ast": {
					"absolutePath": "_ownable.sol",
					"exportedSymbols": {
						"Context": [
							305
						],
						"Ownable": [
							2974
						]
					},
					"id": 2975,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2828,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 2830,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2975,
							"sourceUnit": 306,
							"src": "128:66:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2829,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 305,
										"src": "136:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2832,
										"name": "Context",
										"nameLocations": [
											"713:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 305,
										"src": "713:7:13"
									},
									"id": 2833,
									"nodeType": "InheritanceSpecifier",
									"src": "713:7:13"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2831,
								"nodeType": "StructuredDocumentation",
								"src": "196:487:13",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2974,
							"linearizedBaseContracts": [
								2974,
								305
							],
							"name": "Ownable",
							"nameLocation": "702:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2835,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "743:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "727:22:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2834,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "727:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2836,
										"nodeType": "StructuredDocumentation",
										"src": "756:85:13",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 2840,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "852:26:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "887:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "879:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:17:13"
									},
									"src": "846:50:13"
								},
								{
									"documentation": {
										"id": 2841,
										"nodeType": "StructuredDocumentation",
										"src": "902:82:13",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 2845,
									"name": "OwnableInvalidOwner",
									"nameLocation": "995:19:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1023:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "1015:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:15:13"
									},
									"src": "989:41:13"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 2851,
									"name": "OwnershipTransferred",
									"nameLocation": "1042:20:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1079:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "1063:29:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2849,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1110:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "1094:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:57:13"
									},
									"src": "1036:84:13"
								},
								{
									"body": {
										"id": 2876,
										"nodeType": "Block",
										"src": "1280:153:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2857,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2854,
														"src": "1294:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1318:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1310:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2858,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1310:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1310:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1294:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2871,
												"nodeType": "IfStatement",
												"src": "1290:95:13",
												"trueBody": {
													"id": 2870,
													"nodeType": "Block",
													"src": "1322:63:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1371:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1363:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2864,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1363:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1363:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2863,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2845,
																	"src": "1343:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1343:31:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2869,
															"nodeType": "RevertStatement",
															"src": "1336:38:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2873,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2854,
															"src": "1413:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2872,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "1394:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1394:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2875,
												"nodeType": "ExpressionStatement",
												"src": "1394:32:13"
											}
										]
									},
									"documentation": {
										"id": 2852,
										"nodeType": "StructuredDocumentation",
										"src": "1126:115:13",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 2877,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1266:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2877,
												"src": "1258:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:22:13"
									},
									"returnParameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1280:0:13"
									},
									"scope": 2974,
									"src": "1246:187:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2884,
										"nodeType": "Block",
										"src": "1542:41:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2880,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2911,
														"src": "1552:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1552:13:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2882,
												"nodeType": "ExpressionStatement",
												"src": "1552:13:13"
											},
											{
												"id": 2883,
												"nodeType": "PlaceholderStatement",
												"src": "1575:1:13"
											}
										]
									},
									"documentation": {
										"id": 2878,
										"nodeType": "StructuredDocumentation",
										"src": "1439:77:13",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2885,
									"name": "onlyOwner",
									"nameLocation": "1530:9:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:2:13"
									},
									"src": "1521:62:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2893,
										"nodeType": "Block",
										"src": "1714:30:13",
										"statements": [
											{
												"expression": {
													"id": 2891,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2835,
													"src": "1731:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2890,
												"id": 2892,
												"nodeType": "Return",
												"src": "1724:13:13"
											}
										]
									},
									"documentation": {
										"id": 2886,
										"nodeType": "StructuredDocumentation",
										"src": "1589:65:13",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1668:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1673:2:13"
									},
									"returnParameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "1705:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1704:9:13"
									},
									"scope": 2974,
									"src": "1659:85:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2910,
										"nodeType": "Block",
										"src": "1862:117:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2898,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2894,
															"src": "1876:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1876:7:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2900,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "1887:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1887:12:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1876:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2909,
												"nodeType": "IfStatement",
												"src": "1872:101:13",
												"trueBody": {
													"id": 2908,
													"nodeType": "Block",
													"src": "1901:72:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2904,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1949:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:12:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2903,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2840,
																	"src": "1922:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1922:40:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2907,
															"nodeType": "RevertStatement",
															"src": "1915:47:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2895,
										"nodeType": "StructuredDocumentation",
										"src": "1750:62:13",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 2911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1826:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1837:2:13"
									},
									"returnParameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1862:0:13"
									},
									"scope": 2974,
									"src": "1817:162:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2924,
										"nodeType": "Block",
										"src": "2368:47:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2405:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2397:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2918,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2397:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2397:10:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2917,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "2378:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2378:30:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2923,
												"nodeType": "ExpressionStatement",
												"src": "2378:30:13"
											}
										]
									},
									"documentation": {
										"id": 2912,
										"nodeType": "StructuredDocumentation",
										"src": "1985:324:13",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2925,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2915,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2914,
												"name": "onlyOwner",
												"nameLocations": [
													"2358:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2885,
												"src": "2358:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2358:9:13"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2323:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:13"
									},
									"returnParameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2368:0:13"
									},
									"scope": 2974,
									"src": "2314:101:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2952,
										"nodeType": "Block",
										"src": "2634:145:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2933,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2928,
														"src": "2648:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2668:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2660:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2660:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2660:10:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2648:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2947,
												"nodeType": "IfStatement",
												"src": "2644:91:13",
												"trueBody": {
													"id": 2946,
													"nodeType": "Block",
													"src": "2672:63:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2721:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2713:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2713:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2713:10:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2939,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2845,
																	"src": "2693:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2693:31:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2945,
															"nodeType": "RevertStatement",
															"src": "2686:38:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2949,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2928,
															"src": "2763:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2948,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "2744:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2951,
												"nodeType": "ExpressionStatement",
												"src": "2744:28:13"
											}
										]
									},
									"documentation": {
										"id": 2926,
										"nodeType": "StructuredDocumentation",
										"src": "2421:138:13",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2953,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2931,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2930,
												"name": "onlyOwner",
												"nameLocations": [
													"2624:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2885,
												"src": "2624:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2624:9:13"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2573:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2599:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "2591:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2591:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2590:18:13"
									},
									"returnParameters": {
										"id": 2932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:13"
									},
									"scope": 2974,
									"src": "2564:215:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2972,
										"nodeType": "Block",
										"src": "2996:124:13",
										"statements": [
											{
												"assignments": [
													2960
												],
												"declarations": [
													{
														"constant": false,
														"id": 2960,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3014:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2972,
														"src": "3006:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2959,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3006:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2962,
												"initialValue": {
													"id": 2961,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2835,
													"src": "3025:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3006:25:13"
											},
											{
												"expression": {
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2963,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2835,
														"src": "3041:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2964,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2956,
														"src": "3050:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3041:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2966,
												"nodeType": "ExpressionStatement",
												"src": "3041:17:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2968,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2960,
															"src": "3094:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2969,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "3104:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2967,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2851,
														"src": "3073:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3073:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2971,
												"nodeType": "EmitStatement",
												"src": "3068:45:13"
											}
										]
									},
									"documentation": {
										"id": 2954,
										"nodeType": "StructuredDocumentation",
										"src": "2785:143:13",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2942:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2969:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "2961:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:18:13"
									},
									"returnParameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2996:0:13"
									},
									"scope": 2974,
									"src": "2933:187:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2975,
							"src": "684:2438:13",
							"usedErrors": [
								2840,
								2845
							],
							"usedEvents": [
								2851
							]
						}
					],
					"src": "102:3020:13"
				},
				"id": 13
			},
			"_pausable.sol": {
				"ast": {
					"absolutePath": "_pausable.sol",
					"exportedSymbols": {
						"Context": [
							305
						],
						"Pausable": [
							3091
						]
					},
					"id": 3092,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2976,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 2978,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3092,
							"sourceUnit": 306,
							"src": "128:66:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2977,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 305,
										"src": "136:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2980,
										"name": "Context",
										"nameLocations": [
											"666:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 305,
										"src": "666:7:14"
									},
									"id": 2981,
									"nodeType": "InheritanceSpecifier",
									"src": "666:7:14"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2979,
								"nodeType": "StructuredDocumentation",
								"src": "196:439:14",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 3091,
							"linearizedBaseContracts": [
								3091,
								305
							],
							"name": "Pausable",
							"nameLocation": "654:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2983,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "693:7:14",
									"nodeType": "VariableDeclaration",
									"scope": 3091,
									"src": "680:20:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2982,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "680:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2984,
										"nodeType": "StructuredDocumentation",
										"src": "707:73:14",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 2988,
									"name": "Paused",
									"nameLocation": "791:6:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2986,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "806:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "798:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:17:14"
									},
									"src": "785:30:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2989,
										"nodeType": "StructuredDocumentation",
										"src": "821:70:14",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 2993,
									"name": "Unpaused",
									"nameLocation": "902:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2991,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "919:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "911:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:17:14"
									},
									"src": "896:32:14"
								},
								{
									"documentation": {
										"id": 2994,
										"nodeType": "StructuredDocumentation",
										"src": "934:76:14",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 2996,
									"name": "EnforcedPause",
									"nameLocation": "1021:13:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:2:14"
									},
									"src": "1015:22:14"
								},
								{
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "1043:80:14",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 2999,
									"name": "ExpectedPause",
									"nameLocation": "1134:13:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:2:14"
									},
									"src": "1128:22:14"
								},
								{
									"body": {
										"id": 3007,
										"nodeType": "Block",
										"src": "1242:32:14",
										"statements": [
											{
												"expression": {
													"id": 3005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3003,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2983,
														"src": "1252:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1262:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1252:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3006,
												"nodeType": "ExpressionStatement",
												"src": "1252:15:14"
											}
										]
									},
									"documentation": {
										"id": 3000,
										"nodeType": "StructuredDocumentation",
										"src": "1156:67:14",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 3008,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:2:14"
									},
									"returnParameters": {
										"id": 3002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1242:0:14"
									},
									"scope": 3091,
									"src": "1228:46:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3015,
										"nodeType": "Block",
										"src": "1485:47:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3011,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3045,
														"src": "1495:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 3012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1495:19:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3013,
												"nodeType": "ExpressionStatement",
												"src": "1495:19:14"
											},
											{
												"id": 3014,
												"nodeType": "PlaceholderStatement",
												"src": "1524:1:14"
											}
										]
									},
									"documentation": {
										"id": 3009,
										"nodeType": "StructuredDocumentation",
										"src": "1280:175:14",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 3016,
									"name": "whenNotPaused",
									"nameLocation": "1469:13:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1482:2:14"
									},
									"src": "1460:72:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3023,
										"nodeType": "Block",
										"src": "1732:44:14",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3019,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3058,
														"src": "1742:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1742:16:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3021,
												"nodeType": "ExpressionStatement",
												"src": "1742:16:14"
											},
											{
												"id": 3022,
												"nodeType": "PlaceholderStatement",
												"src": "1768:1:14"
											}
										]
									},
									"documentation": {
										"id": 3017,
										"nodeType": "StructuredDocumentation",
										"src": "1538:167:14",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 3024,
									"name": "whenPaused",
									"nameLocation": "1719:10:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1729:2:14"
									},
									"src": "1710:66:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3032,
										"nodeType": "Block",
										"src": "1924:31:14",
										"statements": [
											{
												"expression": {
													"id": 3030,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2983,
													"src": "1941:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3029,
												"id": 3031,
												"nodeType": "Return",
												"src": "1934:14:14"
											}
										]
									},
									"documentation": {
										"id": 3025,
										"nodeType": "StructuredDocumentation",
										"src": "1782:84:14",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 3033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1880:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1886:2:14"
									},
									"returnParameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3033,
												"src": "1918:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1918:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1917:6:14"
									},
									"scope": 3091,
									"src": "1871:84:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3044,
										"nodeType": "Block",
										"src": "2074:77:14",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3037,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3033,
														"src": "2088:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 3038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2088:8:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3043,
												"nodeType": "IfStatement",
												"src": "2084:61:14",
												"trueBody": {
													"id": 3042,
													"nodeType": "Block",
													"src": "2098:47:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3039,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2996,
																	"src": "2119:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2119:15:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3041,
															"nodeType": "RevertStatement",
															"src": "2112:22:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3034,
										"nodeType": "StructuredDocumentation",
										"src": "1961:57:14",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 3045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2032:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:2:14"
									},
									"returnParameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2074:0:14"
									},
									"scope": 3091,
									"src": "2023:128:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3057,
										"nodeType": "Block",
										"src": "2271:78:14",
										"statements": [
											{
												"condition": {
													"id": 3051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2285:9:14",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3049,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3033,
															"src": "2286:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 3050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2286:8:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3056,
												"nodeType": "IfStatement",
												"src": "2281:62:14",
												"trueBody": {
													"id": 3055,
													"nodeType": "Block",
													"src": "2296:47:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3052,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "2317:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2317:15:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3054,
															"nodeType": "RevertStatement",
															"src": "2310:22:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3046,
										"nodeType": "StructuredDocumentation",
										"src": "2157:61:14",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 3058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2232:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2246:2:14"
									},
									"returnParameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2271:0:14"
									},
									"scope": 3091,
									"src": "2223:126:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3073,
										"nodeType": "Block",
										"src": "2533:66:14",
										"statements": [
											{
												"expression": {
													"id": 3066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3064,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2983,
														"src": "2543:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2553:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2543:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3067,
												"nodeType": "ExpressionStatement",
												"src": "2543:14:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3069,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "2579:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2579:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3068,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2988,
														"src": "2572:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3072,
												"nodeType": "EmitStatement",
												"src": "2567:25:14"
											}
										]
									},
									"documentation": {
										"id": 3059,
										"nodeType": "StructuredDocumentation",
										"src": "2355:124:14",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 3074,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3062,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3061,
												"name": "whenNotPaused",
												"nameLocations": [
													"2519:13:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3016,
												"src": "2519:13:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2519:13:14"
										}
									],
									"name": "_pause",
									"nameLocation": "2493:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:2:14"
									},
									"returnParameters": {
										"id": 3063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:0:14"
									},
									"scope": 3091,
									"src": "2484:115:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3089,
										"nodeType": "Block",
										"src": "2779:69:14",
										"statements": [
											{
												"expression": {
													"id": 3082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3080,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2983,
														"src": "2789:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2799:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2789:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3083,
												"nodeType": "ExpressionStatement",
												"src": "2789:15:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3085,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "2828:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2828:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3084,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2993,
														"src": "2819:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2819:22:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3088,
												"nodeType": "EmitStatement",
												"src": "2814:27:14"
											}
										]
									},
									"documentation": {
										"id": 3075,
										"nodeType": "StructuredDocumentation",
										"src": "2605:121:14",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 3090,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3078,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3077,
												"name": "whenPaused",
												"nameLocations": [
													"2768:10:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3024,
												"src": "2768:10:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2768:10:14"
										}
									],
									"name": "_unpause",
									"nameLocation": "2740:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2748:2:14"
									},
									"returnParameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2779:0:14"
									},
									"scope": 3091,
									"src": "2731:117:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3092,
							"src": "636:2214:14",
							"usedErrors": [
								2996,
								2999
							],
							"usedEvents": [
								2988,
								2993
							]
						}
					],
					"src": "102:2748:14"
				},
				"id": 14
			}
		}
	}
}