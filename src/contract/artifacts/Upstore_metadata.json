{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "DuplicatedAddress",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "PriceNotMet",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Unauthorized",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "func",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "gas",
						"type": "uint256"
					}
				],
				"name": "Log",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "manager",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"name": "appAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					}
				],
				"name": "likeAdded",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "_appCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "app",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "manager",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "dt",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "blockStorage",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "key",
						"type": "bytes32"
					}
				],
				"name": "delKey",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					}
				],
				"name": "getApp",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "id",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "metadata",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "manager",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "dt",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "status",
								"type": "bool"
							}
						],
						"internalType": "struct Upstore.AppStruct",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAppList",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "id",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "metadata",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "manager",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "dt",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "status",
								"type": "bool"
							}
						],
						"internalType": "struct Upstore.AppStruct[]",
						"name": "",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256",
						"name": "total",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAppTotal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "key",
						"type": "bytes32"
					}
				],
				"name": "getKey",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLikeTotal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "total",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					}
				],
				"name": "getLikeTotal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "like",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "dt",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "price",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "manager",
						"type": "address"
					}
				],
				"name": "setApp",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "key",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "val",
						"type": "string"
					}
				],
				"name": "setKey",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					}
				],
				"name": "setLike",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newPrice",
						"type": "uint256"
					}
				],
				"name": "setPrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					}
				],
				"name": "toggleStatus",
				"outputs": [
					{
						"internalType": "bool",
						"name": "status",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "manager",
						"type": "address"
					}
				],
				"name": "updateApp",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					}
				],
				"name": "updateMetadata",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "manager",
						"type": "address"
					}
				],
				"name": "verifyManager",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "id",
								"type": "bytes32"
							},
							{
								"internalType": "string",
								"name": "metadata",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "manager",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "dt",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "status",
								"type": "bool"
							}
						],
						"internalType": "struct Upstore.AppStruct",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"author": "Aratta Labs",
			"custom:security-contact": "atenyun@gmail.com",
			"details": "Please ensure that you run the test before deploying. You can find the deployed contract addresses in the README.md file.",
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"delKey(bytes32,bytes32)": {
					"params": {
						"appId": "The bytes32 ID",
						"key": "A byte32 key"
					},
					"returns": {
						"_0": "boolean"
					}
				},
				"getApp(bytes32)": {
					"params": {
						"appId": "The unique bytes32 ID"
					},
					"returns": {
						"_0": "AppStruct"
					}
				},
				"getAppList()": {
					"details": "Returns the App array as AppStruct",
					"returns": {
						"_0": "AppStruct",
						"total": "total"
					}
				},
				"getAppTotal()": {
					"returns": {
						"_0": "uint256"
					}
				},
				"getKey(bytes32,bytes32)": {
					"params": {
						"appId": "The bytes32 ID",
						"key": "A byte32 key"
					},
					"returns": {
						"_0": "value in CID format"
					}
				},
				"getLikeTotal()": {
					"details": "Like[] starts from 0 to its length, a way to fetch all and filter it",
					"returns": {
						"total": "total"
					}
				},
				"getLikeTotal(bytes32)": {
					"params": {
						"appId": "The bytes32 ID"
					},
					"returns": {
						"_0": "uint256"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"setApp(string,address)": {
					"details": "If the manager field is left empty, the sender will be recognized as the manager",
					"params": {
						"metadata": "(CID)"
					},
					"returns": {
						"appId": "appId"
					}
				},
				"setLike(bytes32)": {
					"details": "A like per address",
					"params": {
						"appId": "The bytes32 ID"
					},
					"returns": {
						"_0": "bool"
					}
				},
				"toggleStatus(bytes32)": {
					"details": "Only the owner of this contract can call/ aprove the dApp",
					"params": {
						"appId": "The bytes32 ID"
					},
					"returns": {
						"status": "status"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateApp(bytes32,string,address)": {
					"details": "Only the owner of this contract can call/ aprove the dApp",
					"params": {
						"appId": "The bytes32 ID"
					},
					"returns": {
						"_0": "boolean"
					}
				},
				"verifyManager(bytes32,address)": {
					"returns": {
						"_0": "appId"
					}
				}
			},
			"title": "Upstore 🆙",
			"version": 1
		},
		"userdoc": {
			"errors": {
				"Unauthorized()": [
					{
						"notice": "errors"
					}
				]
			},
			"kind": "user",
			"methods": {
				"delKey(bytes32,bytes32)": {
					"notice": "Delete a key from the storage"
				},
				"getApp(bytes32)": {
					"notice": "get app detail"
				},
				"getAppList()": {
					"notice": "Retrive the App array"
				},
				"getAppTotal()": {
					"notice": "Number of apps currently added on the contract"
				},
				"getBalance()": {
					"notice": "Get contract's balance"
				},
				"getKey(bytes32,bytes32)": {
					"notice": "Get the stored value"
				},
				"getLikeTotal()": {
					"notice": "Retrive the App array"
				},
				"getLikeTotal(bytes32)": {
					"notice": "Get total like"
				},
				"setApp(string,address)": {
					"notice": "Add a new dApp"
				},
				"setKey(bytes32,bytes32,string)": {
					"notice": "Store a new key/ value"
				},
				"setLike(bytes32)": {
					"notice": "Like an app"
				},
				"setPrice(uint256)": {
					"notice": "Update the price"
				},
				"toggleStatus(bytes32)": {
					"notice": "Display or hide the dApp from the store"
				},
				"updateApp(bytes32,string,address)": {
					"notice": "Display or hide the dApp from the store"
				},
				"verifyManager(bytes32,address)": {
					"notice": "Verify if a address is on a manager"
				}
			},
			"notice": "Read the use cases",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Upstore.sol": "Upstore"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439",
			"license": "MIT",
			"urls": [
				"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c",
				"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"
			]
		},
		"@openzeppelin/contracts/utils/Counters.sol": {
			"keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
			"license": "MIT",
			"urls": [
				"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
				"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
			]
		},
		"Upstore.sol": {
			"keccak256": "0xc82ad2be6f3c4ca89b43ba94a26a9921fa00021369e61338e8c76d74fe74b196",
			"license": "MIT",
			"urls": [
				"bzz-raw://302b41e63254710f83c375e405e804ba693838801a77d31c4c6b44637628f710",
				"dweb:/ipfs/QmcJZ1C1denHE511zrYnVDN1hvhyZeBhbcWJ8aiSCC8srg"
			]
		},
		"_ownable.sol": {
			"keccak256": "0xf1f497f71982a7be41681c154d25278f9aebaedf7b6e8718519261c01cd537f9",
			"license": "MIT",
			"urls": [
				"bzz-raw://dabe19a8524cdf5f16b0ac786af8c7f1c7e544e0acd748d8e6726e42c8e782e4",
				"dweb:/ipfs/QmTYPYkpe95MQ9kurfLy2ALe2SfbhPvJ4nTMF1SEDJjNX9"
			]
		}
	},
	"version": 1
}