{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "EnforcedPause",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ExpectedPause",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "msgValue",
						"type": "uint256"
					}
				],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "totalAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "authorizedAmount",
						"type": "uint256"
					}
				],
				"name": "NotAuthorizedAmount",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "_tokenId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "_appId",
						"type": "bytes32"
					}
				],
				"name": "Donated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "TokenAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "_tokenId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "TokenRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "TokenUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "fee",
						"type": "uint8"
					}
				],
				"name": "feeUpdated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "_donateCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_tokenCounter",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_addr",
						"type": "address"
					}
				],
				"name": "addToken",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "bps",
						"type": "uint256"
					}
				],
				"name": "calcPercentage",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_tokenId",
						"type": "bytes32"
					}
				],
				"name": "deleteToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_appId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_force",
						"type": "bool"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "_tokenId",
						"type": "bytes32"
					}
				],
				"name": "donate",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "donation",
				"outputs": [
					{
						"internalType": "address",
						"name": "donator",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "tokenId",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "appId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "dt",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_donator",
						"type": "address"
					}
				],
				"name": "getDonation",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "donator",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "tokenId",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "appId",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "dt",
								"type": "uint256"
							}
						],
						"internalType": "struct DirectDonation.DonationStruct[]",
						"name": "list",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_appId",
						"type": "bytes32"
					}
				],
				"name": "getDonationByAppId",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "donator",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "tokenId",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "appId",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "dt",
								"type": "uint256"
							}
						],
						"internalType": "struct DirectDonation.DonationStruct[]",
						"name": "list",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_tokenId",
						"type": "bytes32"
					}
				],
				"name": "getDonationByToekn",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "donator",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "tokenId",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "appId",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "dt",
								"type": "uint256"
							}
						],
						"internalType": "struct DirectDonation.DonationStruct[]",
						"name": "list",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDonationList",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "donator",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "tokenId",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32",
								"name": "appId",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "dt",
								"type": "uint256"
							}
						],
						"internalType": "struct DirectDonation.DonationStruct[]",
						"name": "list",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_addr",
						"type": "address"
					}
				],
				"name": "getToken",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "addr",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "pause",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "dt",
								"type": "uint256"
							}
						],
						"internalType": "struct DirectDonation.TokenStruct[]",
						"name": "list",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTokenList",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "id",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "addr",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "pause",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "dt",
								"type": "uint256"
							}
						],
						"internalType": "struct DirectDonation.TokenExportStruct[]",
						"name": "list",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "token",
				"outputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "pause",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "dt",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "transferBalance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_fee",
						"type": "uint8"
					}
				],
				"name": "updateToken",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_tokenId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "_addr",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_pause",
						"type": "bool"
					}
				],
				"name": "updateToken",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Aratta Labs",
			"custom:emoji": "💸",
			"custom:security-contact": "atenyun@gmail.com",
			"details": "You will find the deployed contract addresses in the repo",
			"errors": {
				"EnforcedPause()": [
					{
						"details": "The operation failed because the contract is paused."
					}
				],
				"ExpectedPause()": [
					{
						"details": "The operation failed because the contract is not paused."
					}
				],
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"events": {
				"Paused(address)": {
					"details": "Emitted when the pause is triggered by `account`."
				},
				"Unpaused(address)": {
					"details": "Emitted when the pause is lifted by `account`."
				}
			},
			"kind": "dev",
			"methods": {
				"calcPercentage(uint256,uint256)": {
					"params": {
						"amount": "The total amount",
						"bps": "The precentage"
					},
					"returns": {
						"_0": "percentage"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "DirectDonation",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addToken(address)": {
					"notice": "Add a token"
				},
				"calcPercentage(uint256,uint256)": {
					"notice": "calcPercentage percentage"
				},
				"deleteToken(bytes32)": {
					"notice": "Delete a token"
				},
				"donate(bytes32,address,uint256,bool,bytes,bytes32)": {
					"notice": "Donate"
				},
				"getBalance()": {
					"notice": "Return the balance of this contract"
				},
				"getDonation(address)": {
					"notice": "Get donation list, filter by donator"
				},
				"getDonationByAppId(bytes32)": {
					"notice": "Get donation list, filter by tokenId"
				},
				"getDonationByToekn(bytes32)": {
					"notice": "Get donation list, filter by tokenId"
				},
				"getDonationList()": {
					"notice": "Get token list"
				},
				"getToken(address)": {
					"notice": "Get token"
				},
				"getTokenList()": {
					"notice": "Get token list"
				},
				"pause()": {
					"notice": "Pause"
				},
				"transferBalance(address,uint256)": {
					"notice": "Transfer balance from this contract to input address"
				},
				"unpause()": {
					"notice": "Unpause"
				},
				"updateToken(bytes32,address,bool)": {
					"notice": "Update token"
				},
				"updateToken(uint8)": {
					"notice": "Update fee"
				},
				"withdraw()": {
					"notice": "Withdraw the balance from this contract and transfer it to the owner's address"
				}
			},
			"notice": "Direct donation mechanism",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"DirectDonation.sol": "DirectDonation"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol": {
			"keccak256": "0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b",
			"license": "CC0-1.0",
			"urls": [
				"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50",
				"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b"
			]
		},
		"@lukso/lsp-smart-contracts/contracts/LSP7DigitalAsset/ILSP7DigitalAsset.sol": {
			"keccak256": "0x1500da59b41e37677458dcc3652bb5a72f58a7920dbc41f6cf60f7beadd6731d",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://e5bd2b8d469213eae3cd7013dc05b4c37ec183977dddb2b659ab8f9b852d7b26",
				"dweb:/ipfs/QmbNt4JEugWbRRCAge1HCM2j4HExEZzGRsgDmiATZoYvp6"
			]
		},
		"@lukso/lsp7-contracts/contracts/ILSP7DigitalAsset.sol": {
			"keccak256": "0xe809a376f430ba79bf7554b3274617103f1d0434546b2d4fe68019e3079a53d0",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://f955f4d89c5a99f791af4a3fc7201ba0299627fca221d97a66a562eeb4860c04",
				"dweb:/ipfs/QmcAqBHYFwk6VXevUeSjefFag6EhndrXQP1D4tGjxtgUMT"
			]
		},
		"@openzeppelin/contracts/utils/Base64.sol": {
			"keccak256": "0x09000342b85b1a06fa1f5b71bdeef7c449cd25799aac14fa9053d8abd18219aa",
			"license": "MIT",
			"urls": [
				"bzz-raw://a7cdab282a9165b685fa86da3bd331c8e319e5a5c64e16599134e738934a77d4",
				"dweb:/ipfs/QmSLcE5FmDqVQbFDB6MzUzuFi4UhJVUQ1A2rT4aJGhpERT"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/Counters.sol": {
			"keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
			"license": "MIT",
			"urls": [
				"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
				"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
				"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
			"license": "MIT",
			"urls": [
				"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
				"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
				"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
			]
		},
		"@openzeppelin/contracts/utils/math/SignedMath.sol": {
			"keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
			"license": "MIT",
			"urls": [
				"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
				"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
			]
		},
		"DirectDonation.sol": {
			"keccak256": "0xf08b9055a1906c600adf2319eaf3b8d1196996d823672730d8279b5bac510b86",
			"license": "MIT",
			"urls": [
				"bzz-raw://3905fb62bdea09b7cd9708d8e0250d4c23c50f8cbf93696986f8ed68622b9128",
				"dweb:/ipfs/QmPhVDXsPkcDaDWKhHF6rr5GbHRtyWQx9KeZExeLsNjVYj"
			]
		},
		"_error.sol": {
			"keccak256": "0x0da2e39c026a579a49b402d002c4fbc63cef3387d0316023077485164dff0af8",
			"license": "MIT",
			"urls": [
				"bzz-raw://ff5df9e397330dd80f1d1137649e5472e6307642f22196f0a465a1b861d1c243",
				"dweb:/ipfs/QmYm4j8zgUoxY79nYSB6RwFX9aWAE1JMeid3soYAsMaDS1"
			]
		},
		"_event.sol": {
			"keccak256": "0x9ece91a6868fa12c6ffbb94aeee09c79cfb76d036fdc8d6a4c0a9cb1d7328786",
			"license": "MIT",
			"urls": [
				"bzz-raw://88d2eb366d5b69af7867a92c6e0ae07b287d2927b6e11cec966966da54f656e7",
				"dweb:/ipfs/QmXkdJ1uQMrSEoyaQR7vQpqV2iQfBtsYaR71V5AsUKf2e8"
			]
		},
		"_ownable.sol": {
			"keccak256": "0xd0eb4b66f1088976a798a35ea6f276723448d778c424898ed9a3895dd16e0395",
			"license": "MIT",
			"urls": [
				"bzz-raw://d7ff7967a53aa14549700c15740d8afa60437287dfbdd386fa338001156afcfd",
				"dweb:/ipfs/QmNqebzo3Jex1uFWNTRh3p185YkVZtt28Rsv1mB2nfBWBw"
			]
		},
		"_pausable.sol": {
			"keccak256": "0xbcfe48dd83c79dc58f3e692bf0c564ca9732a9782290fbc463b51866075fda5e",
			"license": "MIT",
			"urls": [
				"bzz-raw://ef18a3571179803f34e036529e8e0249a24aa86f315a6425bff7a12e08a2466a",
				"dweb:/ipfs/QmPcB7VKFa6S4Me9a7cxa8ukA5HZfr86uDyDeDrjJqetqe"
			]
		}
	},
	"version": 1
}